<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Farseer.Net</name>
    </assembly>
    <members>
        <member name="T:FS.Configs.CacheConfigs">
            <summary>
                缓存配置
            </summary>
        </member>
        <member name="T:FS.Configs.BaseConfigs`1">
            <summary>
                配置管理工具
            </summary>
        </member>
        <member name="F:FS.Configs.BaseConfigs`1.m_LockHelper">
            <summary>
                锁对象
            </summary>
        </member>
        <member name="F:FS.Configs.BaseConfigs`1.filePath">
            <summary>
                配置文件路径
            </summary>
        </member>
        <member name="F:FS.Configs.BaseConfigs`1.fileName">
            <summary>
                配置文件名称
            </summary>
        </member>
        <member name="F:FS.Configs.BaseConfigs`1.m_ConfigInfo">
            <summary>
                配置变量
            </summary>
        </member>
        <member name="F:FS.Configs.BaseConfigs`1.LoadAt">
            <summary>
                Config修改时间
            </summary>
        </member>
        <member name="M:FS.Configs.BaseConfigs`1.LoadConfig">
            <summary>
                加载(反序列化)指定对象类型的配置对象
            </summary>
        </member>
        <member name="M:FS.Configs.BaseConfigs`1.SaveConfig(`0)">
            <summary>
                保存(序列化)指定路径下的配置文件
            </summary>
            <param name="t">Config配置</param>
        </member>
        <member name="P:FS.Configs.BaseConfigs`1.FilePath">
            <summary>
                获取配置文件所在路径，支持自定义路径
            </summary>
        </member>
        <member name="P:FS.Configs.BaseConfigs`1.FileName">
            <summary>
                获取配置文件所在路径
            </summary>
        </member>
        <member name="P:FS.Configs.BaseConfigs`1.ConfigInfo">
            <summary>
                配置变量
            </summary>
        </member>
        <member name="T:FS.Configs.CacheConfig">
            <summary>
                缓存配置
            </summary>
        </member>
        <member name="F:FS.Configs.CacheConfig.CacheTimeOut">
            <summary>
                缓存失效分钟
            </summary>
        </member>
        <member name="F:FS.Configs.CacheConfig.VisitCount">
            <summary>
                数据在VisitTime分钟内被访问VisitCount次后开始缓存
            </summary>
        </member>
        <member name="F:FS.Configs.CacheConfig.VisitTime">
            <summary>
                数据在VisitTime分钟内被访问VisitCount次后开始缓存
            </summary>
        </member>
        <member name="T:FS.Core.Model.DataCache">
            <summary>
            片断缓存操作
            </summary>
        </member>
        <member name="M:FS.Core.Model.DataCache.GetValue``1">
            <summary>
                缓存值
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:FS.Core.Model.DataCache.Get``1(System.String,FS.Core.Model.DataCache.enumDataType,System.Func{``0},System.Boolean)">
            <summary>
                获取缓存值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">dbBuilder.ToString()：唯一标识</param>
        </member>
        <member name="M:FS.Core.Model.DataCache.Set``1(System.String,``0,System.Boolean)">
            <summary>
                添加缓存值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="t">dbBuilder.ToString()：唯一标识</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.DataCache.CreateKey(System.String,FS.Core.Model.DataCache.enumDataType)">
            <summary>
                添加统计
            </summary>
            <param name="sql">dbBuilder.ToString()：唯一标识</param>
            <param name="dataType">数据类型</param>
        </member>
        <member name="M:FS.Core.Model.DataCache.Clear">
            <summary>
                清除统计、缓存
            </summary>
        </member>
        <member name="P:FS.Core.Model.DataCache.DataStatisticsList">
            <summary>
                所有统计对象
            </summary>
        </member>
        <member name="P:FS.Core.Model.DataCache.DataType">
            <summary>
                数据类型
            </summary>
        </member>
        <member name="P:FS.Core.Model.DataCache.Key">
            <summary>
                缓存Key
            </summary>
        </member>
        <member name="P:FS.Core.Model.DataCache.LstActiveAt">
            <summary>
                统计时间
            </summary>
        </member>
        <member name="P:FS.Core.Model.DataCache.JoinCacheAt">
            <summary>
                加入缓存的时间
            </summary>
        </member>
        <member name="P:FS.Core.Model.DataCache.Value">
            <summary>
                缓存值
            </summary>
        </member>
        <member name="T:FS.Core.Model.DataCache.enumDataType">
            <summary>
                数据类型
            </summary>
        </member>
        <member name="F:FS.Core.Model.DataCache.enumDataType.List">
            <summary>
                列表
            </summary>
        </member>
        <member name="F:FS.Core.Model.DataCache.enumDataType.Count">
            <summary>
                数量
            </summary>
        </member>
        <member name="F:FS.Core.Model.DataCache.enumDataType.Info">
            <summary>
                实体
            </summary>
        </member>
        <member name="F:FS.Core.Model.DataCache.enumDataType.Table">
            <summary>
                xxxx
            </summary>
        </member>
        <member name="F:FS.Core.Model.DataCache.enumDataType.TableByRand">
            <summary>
                xxxx
            </summary>
        </member>
        <member name="F:FS.Core.Model.DataCache.enumDataType.ListByRand">
            <summary>
                随机列表
            </summary>
        </member>
        <member name="F:FS.Core.Model.DataCache.enumDataType.Sum">
            <summary>
                总数
            </summary>
        </member>
        <member name="F:FS.Core.Model.DataCache.enumDataType.Max">
            <summary>
                最大数
            </summary>
        </member>
        <member name="F:FS.Core.Model.DataCache.enumDataType.Min">
            <summary>
                最小值
            </summary>
        </member>
        <member name="F:FS.Core.Model.DataCache.enumDataType.Value">
            <summary>
                单值
            </summary>
        </member>
        <member name="F:FS.Core.Model.DataCache.enumDataType.IsHaving">
            <summary>
                存值
            </summary>
        </member>
        <member name="M:FS.Core.Model.SqlTemplate.Output``1(FS.Core.Bean.DataResult{``0})">
            <summary>
                输出执行结果
            </summary>
        </member>
        <member name="T:FS.Core.Model.BaseCacheModel`1">
            <summary>
                实体类基类信息
            </summary>
        </member>
        <member name="T:FS.Core.Model.ModelInfo">
            <summary>
            基类
            </summary>
        </member>
        <member name="M:FS.Core.Model.ModelInfo.Clone">
            <summary>
                克隆出一个新的对象
            </summary>
        </member>
        <member name="M:FS.Core.Model.ModelInfo.Clone``1">
            <summary>
                克隆出一个新的对象
            </summary>
            <typeparam name="T">对象，必须继续于IModel</typeparam>
        </member>
        <member name="P:FS.Core.Model.ModelInfo.ID">
            <summary>
                系统编号
            </summary>
        </member>
        <member name="M:FS.Core.Model.BaseCacheModel`1.Cache(FS.Core.Data.DbExecutor)">
            <summary>
                数据缓存操作
            </summary>
            <param name="db">事务</param>
        </member>
        <member name="M:FS.Core.Model.BaseCacheModel`1.Form(System.Action{System.String,System.String},System.String,System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="tip">弹出框事务委托</param>
            <param name="url">跳转地址</param>
        </member>
        <member name="M:FS.Core.Model.BaseCacheModel`1.Form(System.Action{System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}},System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="tip">弹出框事务委托</param>
        </member>
        <member name="M:FS.Core.Model.BaseCacheModel`1.Form(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}@,System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="dicError">返回错误消息,key：属性名称；value：错误消息</param>
        </member>
        <member name="M:FS.Core.Model.BaseCacheModel`1.QueryString(System.Action{System.String,System.String},System.String,System.String)">
            <summary>
                把Request.QueryString提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="tip">弹出框事务委托</param>
            <param name="url">跳转地址</param>
        </member>
        <member name="M:FS.Core.Model.BaseCacheModel`1.QueryString(System.Action{System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}},System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="tip">弹出框事务委托</param>
        </member>
        <member name="M:FS.Core.Model.BaseCacheModel`1.QueryString(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}@,System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="dicError">返回错误消息,key：属性名称；value：错误消息</param>
        </member>
        <member name="P:FS.Core.Model.BaseCacheModel`1.DataResult">
            <summary>
                查询结果
            </summary>
        </member>
        <member name="P:FS.Core.Model.BaseCacheModel`1.Data">
            <summary>
                数据库持久化
            </summary>
        </member>
        <member name="T:FS.Core.Model.CacheBean`1">
            <summary>
            CacheBean
            </summary>
            <typeparam name="TInfo"></typeparam>
        </member>
        <member name="F:FS.Core.Model.CacheBean`1.Data">
            <summary>
                数据库持久化
            </summary>
        </member>
        <member name="F:FS.Core.Model.CacheBean`1.Map">
            <summary>
                实体映射
            </summary>
        </member>
        <member name="F:FS.Core.Model.CacheBean`1.ExpSelect">
            <summary>
                Select表达式
            </summary>
        </member>
        <member name="F:FS.Core.Model.CacheBean`1.ExpWhere">
            <summary>
                Where表达式
            </summary>
        </member>
        <member name="F:FS.Core.Model.CacheBean`1.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.#ctor(FS.Core.Data.DataBaseType,System.String,System.Int32,System.String)">
            <summary>
                兼容Qyn.Factory项目
            </summary>
            <param name="dbType">数据库类型</param>
            <param name="connetionString">连接字符串</param>
            <param name="commandTimeout">命令执时超时时间</param>
            <param name="tableName">表名称</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.#ctor(System.String)">
            <summary>
                默认使用
            </summary>
            <param name="tableName">表名称</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
                查询条件
            </summary>
            <param name="where">查询条件</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.Select(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                字段选择器
            </summary>
            <param name="select">字段选择器</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.Insert(`0,FS.Core.Data.DbExecutor)">
            <summary>
                插入数据
            </summary>
            <param name="info">已赋值的实体</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.Insert(`0,System.Int32@,FS.Core.Data.DbExecutor)">
            <summary>
                插入记录
            </summary>
            <param name="info">实体类</param>
            <param name="db">可传入事务的db</param>
            <param name="identity">标识</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.Update(`0,FS.Core.Data.DbExecutor)">
            <summary>
                更改实体类
            </summary>
            <param name="info">实体类</param>
            <param name="db">可传入事务的db</param>bu
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.UpdateValue``1(``0,FS.Core.Data.DbExecutor)">
            <summary>
                更新数据(在原字段值上+ -值)
            </summary>
            <param name="fieldValue">字段值(请先指定select字段)</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.UpdateValue``1(System.Nullable{System.Int32},``0,FS.Core.Data.DbExecutor)">
            <summary>
                更新数据(在原字段值上+ -值)
            </summary>
            <param name="fieldValue">字段值(请先指定select字段)</param>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
            <typeparam name="T">默认值类型</typeparam>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.UpdateValue``1(System.Nullable{System.Int32},System.Nullable{``0},FS.Core.Data.DbExecutor)">
            <summary>
                更新数据(在原字段值上+ -值)
            </summary>
            <param name="fieldValue">字段值(请先指定select字段)</param>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
            <typeparam name="T">默认值类型</typeparam>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.UpdateValue``1(System.Collections.Generic.List{System.Int32},``0,FS.Core.Data.DbExecutor)">
            <summary>
                更新数据(在原字段值上+ -值)
            </summary>
            <param name="fieldValue">字段值(请先指定select字段)</param>
            <param name="db">可传入事务的db</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
            <typeparam name="T">默认值类型</typeparam>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.UpdateValue``1(System.Collections.Generic.List{System.Int32},System.Nullable{``0},FS.Core.Data.DbExecutor)">
            <summary>
                更新数据(在原字段值上+ -值)
            </summary>
            <param name="fieldValue">字段值(请先指定select字段)</param>
            <param name="db">可传入事务的db</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
            <typeparam name="T">默认值类型</typeparam>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.Delete(FS.Core.Data.DbExecutor)">
            <summary>
                删除记录
            </summary>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.Delete(System.Nullable{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                删除记录
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.Delete(System.Collections.Generic.List{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                删除记录
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.Update(System.Nullable{System.Int32},`0,FS.Core.Data.DbExecutor)">
            <summary>
                更改实体类
            </summary>
            <param name="info">实体类</param>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.Update(System.Collections.Generic.List{System.Int32},`0,FS.Core.Data.DbExecutor)">
            <summary>
                更改实体类
            </summary>
            <param name="info">实体类</param>
            <param name="db">可传入事务的db</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.Save(System.Int32,`0,FS.Core.Data.DbExecutor)">
            <summary>
                根据ID判断数据是否存在来调用(Insert 还是 Update)
            </summary>
            <param name="info">实体类</param>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.ToList(FS.Core.Data.DbExecutor)">
            <summary>
                获取缓存中的列表
            </summary>
            <param name="db">事务</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.Copy(System.Action{`0},FS.Core.Data.DbExecutor)">
            <summary>
                复制数据
            </summary>
            <param name="actInfo">对新职的赋值</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.Copy(System.Nullable{System.Int32},System.Action{`0},FS.Core.Data.DbExecutor)">
            <summary>
                复制数据
            </summary>
            <param name="actInfo">对新职的赋值</param>
            <param name="db">可传入事务的db</param>
            <param name="ID">o => o.ID == ID</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.Copy(System.Collections.Generic.List{System.Int32},System.Action{`0},FS.Core.Data.DbExecutor)">
            <summary>
                复制数据
            </summary>
            <param name="actInfo">对新职的赋值</param>
            <param name="db">可传入事务的db</param>
            <param name="IDs">o => IDs.Contains(o.ID)</param>
        </member>
        <member name="M:FS.Core.Model.CacheBean`1.GetTrueList(FS.Core.Data.DbExecutor)">
            <summary>
                获取数据列表(读取数据库)
            </summary>
            <param name="db">事务</param>
        </member>
        <member name="P:FS.Core.Model.CacheBean`1.Key">
            <summary>
                Cache Key
            </summary>
        </member>
        <member name="P:FS.Core.Model.CacheBean`1.DataResult">
            <summary>
                返回执行结果
            </summary>
        </member>
        <member name="T:FS.Core.Model.BaseModel`1">
            <summary>
                逻辑层基类工具
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
        </member>
        <member name="M:FS.Core.Model.BaseModel`1.Form(System.Action{System.String,System.String},System.String,System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="tip">弹出框事务委托</param>
            <param name="url">跳转地址</param>
        </member>
        <member name="M:FS.Core.Model.BaseModel`1.Form(System.Action{System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}},System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="tip">弹出框事务委托</param>
        </member>
        <member name="M:FS.Core.Model.BaseModel`1.Form(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}@,System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="dicError">返回错误消息,key：属性名称；value：错误消息</param>
        </member>
        <member name="M:FS.Core.Model.BaseModel`1.QueryString(System.Action{System.String,System.String},System.String,System.String)">
            <summary>
                把Request.QueryString提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="tip">弹出框事务委托</param>
            <param name="url">跳转地址</param>
        </member>
        <member name="M:FS.Core.Model.BaseModel`1.QueryString(System.Action{System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}},System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="tip">弹出框事务委托</param>
        </member>
        <member name="M:FS.Core.Model.BaseModel`1.QueryString(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}@,System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="dicError">返回错误消息,key：属性名称；value：错误消息</param>
        </member>
        <member name="P:FS.Core.Model.BaseModel`1.DataResult">
            <summary>
                查询结果
            </summary>
        </member>
        <member name="P:FS.Core.Model.BaseModel`1.Data">
            <summary>
                数据库持久化
            </summary>
        </member>
        <member name="P:FS.Core.Model.BaseModel`1.Cache">
            <summary>
                数据库持久化
            </summary>
        </member>
        <member name="T:FS.Core.Model.Bean`1">
            <summary>
            Bean
            </summary>
            <typeparam name="TInfo"></typeparam>
        </member>
        <member name="F:FS.Core.Model.Bean`1.Map">
            <summary>
                实体映射
            </summary>
        </member>
        <member name="F:FS.Core.Model.Bean`1.Speed">
            <summary>
                数据执行测试
            </summary>
        </member>
        <member name="F:FS.Core.Model.Bean`1.dbBuilder">
            <summary>
                数据库Sql生成
            </summary>
        </member>
        <member name="F:FS.Core.Model.Bean`1.ExpWhere">
            <summary>
                Where表达式
            </summary>
        </member>
        <member name="F:FS.Core.Model.Bean`1.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:FS.Core.Model.Bean`1.ExpSelect">
            <summary>
                Select表达式
            </summary>
        </member>
        <member name="M:FS.Core.Model.Bean`1.#ctor(System.Int32,System.String)">
            <summary>
                兼容Qyn.Factory项目
            </summary>
            <param name="dbIndex">数据库配置索引</param>
            <param name="tableName">表名称</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.#ctor(FS.Core.Data.DataBaseType,System.String,System.Int32,System.String)">
            
            <summary>
                兼容Qyn.Factory项目
            </summary>
            <param name="dbType">数据库类型</param>
            <param name="connetionString">连接字符串</param>
            <param name="commandTimeout">命令执时超时时间</param>
            <param name="tableName">表名称</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.#ctor(System.String)">
            <summary>
                默认使用
            </summary>
            <param name="tableName">表名称</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
                查询条件
            </summary>
            <param name="where">查询条件</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.WhereOr(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
                查询条件
            </summary>
            <param name="where">查询条件</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                字段选择器
            </summary>
            <param name="select">字段选择器</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Asc(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                升序
            </summary>
            <param name="sort">升序</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Desc(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                降序
            </summary>
            <param name="sort">降序</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToSelectList``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},FS.Core.Data.DbExecutor)">
            <summary>
                返回筛选后的列表
            </summary>
            <param name="select">字段选择器</param>
            <param name="db">事务</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToSelectList``1(System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},FS.Core.Data.DbExecutor)">
            <summary>
                返回筛选后的列表
            </summary>
            <param name="select">字段选择器</param>
            <param name="db">事务</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToSelectList``1(System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}},FS.Core.Data.DbExecutor)">
            <summary>
                返回筛选后的列表
            </summary>
            <param name="select">字段选择器</param>
            <param name="db">事务</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToSelectList``1(System.Collections.Generic.List{System.Int32},System.Linq.Expressions.Expression{System.Func{`0,``0}},FS.Core.Data.DbExecutor)">
            <summary>
                返回筛选后的列表
            </summary>
            <param name="select">字段选择器</param>
            <param name="IDs">o => IDs.Contains(o.ID)</param>
            <param name="db">事务</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToSelectList``1(System.Collections.Generic.List{System.Int32},System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},FS.Core.Data.DbExecutor)">
            <summary>
                返回筛选后的列表
            </summary>
            <param name="select">字段选择器</param>
            <param name="IDs">o => IDs.Contains(o.ID)</param>
            <param name="db">事务</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Insert(`0,FS.Core.Data.DbExecutor)">
            <summary>
                插入数据
            </summary>
            <param name="info">已赋值的实体</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Insert(`0,System.Int32@,FS.Core.Data.DbExecutor)">
            <summary>
                插入数据
            </summary>
            <param name="info">已赋值的实体</param>
            <param name="db">可传入事务的db</param>
            <param name="identity">标识，刚插入的ID</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Update(`0,FS.Core.Data.DbExecutor)">
            <summary>
                更新数据
            </summary>
            <param name="info">已赋值的实体</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Update(System.Nullable{System.Int32},`0,FS.Core.Data.DbExecutor)">
            <summary>
                更改实体类
            </summary>
            <param name="info">实体类</param>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Update(System.Collections.Generic.List{System.Int32},`0,FS.Core.Data.DbExecutor)">
            <summary>
                更改实体类
            </summary>
            <param name="info">实体类</param>
            <param name="db">可传入事务的db</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.IsHaving(FS.Core.Data.DbExecutor)">
            <summary>
                判断是否存在记录
            </summary>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.IsHaving(System.Nullable{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                判断是否存在记录
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.IsHaving(System.Collections.Generic.List{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                判断是否存在记录
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Count(FS.Core.Data.DbExecutor)">
            <summary>
                获取数量
            </summary>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Count(System.Nullable{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                获取数量
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Count(System.Collections.Generic.List{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                获取数量
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToInfo(FS.Core.Data.DbExecutor)">
            <summary>
                获取单条记录
            </summary>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToInfo(System.Nullable{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                获取单条记录
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToNextInfo(System.Nullable{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                获取下一条记录
            </summary>
            <param name="ID">当前ID</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToPreviousInfo(System.Nullable{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                获取上一条记录
            </summary>
            <param name="ID">当前ID</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToTable(System.Int32@,System.Int32,System.Int32,FS.Core.Data.DbExecutor)">
            <summary>
                获取数据列表
            </summary>
            <param name="recordCount">返回数据总数</param>
            <param name="pageSize">每页大小</param>
            <param name="pageIndex">索引</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToTable(System.Int32,FS.Core.Data.DbExecutor)">
            <summary>
                获取数据列表
            </summary>
            <param name="top">Top数量</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToTable(System.Int32,System.Int32,FS.Core.Data.DbExecutor)">
            <summary>
                获取分页、Top、全部的数据方法(根据pageSize、pageIndex自动识别使用场景)
            </summary>
            <param name="pageIndex">分页索引，为1时，使用Top方法</param>
            <param name="pageSize">为0时，获取所有数据</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToDataTableByRand(System.Int32,FS.Core.Data.DbExecutor)">
            <summary>
                获取随机列表
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="top">Top数量</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToList(System.Int32@,System.Int32,System.Int32,FS.Core.Data.DbExecutor)">
            <summary>
                获取数据列表
            </summary>
            <param name="recordCount">返回数据总数</param>
            <param name="pageSize">每页大小</param>
            <param name="pageIndex">索引</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToList(System.Int32,FS.Core.Data.DbExecutor)">
            <summary>
                获取数据列表
            </summary>
            <param name="top">Top数量</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToList(System.Int32,System.Int32,FS.Core.Data.DbExecutor)">
            <summary>
                获取分页、Top、全部的数据方法(根据pageSize、pageIndex自动识别使用场景)
            </summary>
            <param name="pageIndex">分页索引，为1时，使用Top方法</param>
            <param name="pageSize">为0时，获取所有数据</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToList(System.Collections.Generic.List{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                获取分页、Top、全部的数据方法(根据pageSize、pageIndex自动识别使用场景)
            </summary>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToList(FS.UI.Repeater,FS.Core.Data.DbExecutor)">
            <summary>
                通用的分页方法(多条件)
            </summary>
            <param name="rpt">Repeater带分页控件</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToList(FS.Core.Data.DbExecutor)">
            <summary>
                获取所有列表
            </summary>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToListByRand(System.Int32,FS.Core.Data.DbExecutor)">
            <summary>
                获取随机列表
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="top">Top数量</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.GetSum``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,FS.Core.Data.DbExecutor)">
            <summary>
                获取Sum总和
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="db">可传入事务的db</param>
            <param name="select">字段选择器</param>
            <param name="defValue">默认值</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.GetSum``1(``0,FS.Core.Data.DbExecutor)">
            <summary>
                获取Sum总和
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="db">可传入事务的db</param>
            <param name="defValue">默认值</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.GetMax``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,FS.Core.Data.DbExecutor)">
            <summary>
                获取Max最大值
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="db">可传入事务的db</param>
            <param name="select">字段选择器</param>
            <param name="defValue">默认值</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.GetMax``1(``0,FS.Core.Data.DbExecutor)">
            <summary>
                获取Max最大值
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="db">可传入事务的db</param>
            <param name="defValue">默认值</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.GetMin``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,FS.Core.Data.DbExecutor)">
            <summary>
                获取Min最小值
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="db">可传入事务的db</param>
            <param name="select">字段选择器</param>
            <param name="defValue">默认值</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.GetMin``1(``0,FS.Core.Data.DbExecutor)">
            <summary>
                获取Min最小值
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="db">可传入事务的db</param>
            <param name="defValue">默认值</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.GetValue``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,FS.Core.Data.DbExecutor)">
            <summary>
                获取单个值
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="defValue">默认值</param>
            <param name="select">字段选择器</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.GetValue``1(``0,FS.Core.Data.DbExecutor)">
            <summary>
                获取单个值
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="defValue">默认值</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.GetValue``1(System.Nullable{System.Int32},System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,FS.Core.Data.DbExecutor)">
            <summary>
                获取单个字段的数据
            </summary>
            <typeparam name="T">值类型变量</typeparam>
            <param name="defValue">为null时默认值</param>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
            <param name="select">字段选择器</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.GetValue``1(System.Nullable{System.Int32},``0,FS.Core.Data.DbExecutor)">
            <summary>
                获取单个字段的数据
            </summary>
            <typeparam name="T">值类型变量</typeparam>
            <param name="defValue">为null时默认值</param>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.UpdateValue``1(System.Nullable{System.Int32},System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,FS.Core.Data.DbExecutor)">
            <summary>
                更新单个字段值
            </summary>
            <typeparam name="T">更新的值类型</typeparam>
            <param name="fieldValue">要更新的值</param>
            <param name="db">可传入事务的db</param>
            <param name="ID">o => o.ID == ID</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.UpdateValue``1(System.Nullable{System.Int32},``0,FS.Core.Data.DbExecutor)">
            <summary>
                更新单个字段值
            </summary>
            <typeparam name="T">更新的值类型</typeparam>
            <param name="fieldValue">要更新的值</param>
            <param name="db">可传入事务的db</param>
            <param name="ID">o => o.ID == ID</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.UpdateValue``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,FS.Core.Data.DbExecutor)">
            <summary>
                更新单个字段值
            </summary>
            <typeparam name="T">更新的值类型</typeparam>
            <param name="fieldValue">要更新的值</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.UpdateValue``1(``0,FS.Core.Data.DbExecutor)">
            <summary>
                更新单个字段值
            </summary>
            <typeparam name="T">更新的值类型</typeparam>
            <param name="fieldValue">要更新的值</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Delete(FS.Core.Data.DbExecutor)">
            <summary>
                删除数据
            </summary>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Delete(System.Nullable{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                删除数据
            </summary>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Delete(System.Collections.Generic.List{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                删除数据
            </summary>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ResetIdentity(FS.Core.Data.DbExecutor)">
            <summary>
                重置标识
            </summary>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Copy(System.Action{`0},FS.Core.Data.DbExecutor)">
            <summary>
                复制数据
            </summary>
            <param name="actInfo">对新职的赋值</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Copy(System.Nullable{System.Int32},System.Action{`0},FS.Core.Data.DbExecutor)">
            <summary>
                复制数据
            </summary>
            <param name="actInfo">对新职的赋值</param>
            <param name="db">可传入事务的db</param>
            <param name="ID">o => o.ID == ID</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.Copy(System.Collections.Generic.List{System.Int32},System.Action{`0},FS.Core.Data.DbExecutor)">
            <summary>
                复制数据
            </summary>
            <param name="actInfo">对新职的赋值</param>
            <param name="db">可传入事务的db</param>
            <param name="IDs">o => IDs.Contains(o.ID)</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.ToString">
            <summary>
            dbBuilder.ToString()
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Core.Model.Bean`1.SqlBulkCopy(System.Collections.Generic.List{`0},FS.Core.Data.DbExecutor)">
            <summary>
            指量插入数据（仅支付Sql Server)
            </summary>
            <param name="tableName">表名</param>
            <param name="dt">数据</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.SqlBulkCopy(System.Data.DataTable,FS.Core.Data.DbExecutor)">
            <summary>
            指量插入数据（仅支付Sql Server)
            </summary>
            <param name="tableName">表名</param>
            <param name="dt">数据</param>
        </member>
        <member name="M:FS.Core.Model.Bean`1.DataSpeed``2(System.Func{System.String},System.Func{System.String,System.Data.Common.DbParameter[],``1},System.Func{``1,``0})">
            <summary>
                计算执行使用的时间
            </summary>
            <typeparam name="T">返回值</typeparam>
            <typeparam name="T2">数据库中返回的值</typeparam>
            <param name="actBuilderSql">生成Sql步骤</param>
            <param name="actGetData">获取数据步骤</param>
            <param name="actParseData">转换数据类型步骤</param>
        </member>
        <member name="P:FS.Core.Model.Bean`1.DataResult">
            <summary>
                返回执行结果
            </summary>
        </member>
        <member name="T:FS.Core.Model.CacheDataBean`1">
            <summary>
            片断数据缓存基类
            </summary>
            <typeparam name="TInfo"></typeparam>
        </member>
        <member name="F:FS.Core.Model.CacheDataBean`1.Data">
            <summary>
                数据库持久化
            </summary>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.#ctor(FS.Core.Data.DataBaseType,System.String,System.Int32,System.String)">
            <summary>
                兼容Qyn.Factory项目
            </summary>
            <param name="dbType">数据库类型</param>
            <param name="connetionString">连接字符串</param>
            <param name="commandTimeout">命令执时超时时间</param>
            <param name="tableName">表名称</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.#ctor(System.String)">
            <summary>
                默认使用
            </summary>
            <param name="tableName">表名称</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
                查询条件
            </summary>
            <param name="where">查询条件</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.WhereOr(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
                查询条件
            </summary>
            <param name="where">查询条件</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                字段选择器
            </summary>
            <param name="select">字段选择器</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.Asc(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                升序
            </summary>
            <param name="sort">升序</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.Desc(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                降序
            </summary>
            <param name="sort">降序</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToSelectList``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                返回筛选后的列表
            </summary>
            <param name="select">字段选择器</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToSelectList``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Int32,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                返回筛选后的列表
            </summary>
            <param name="select">字段选择器</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToSelectList``1(System.Collections.Generic.List{System.Int32},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                返回筛选后的列表
            </summary>
            <param name="select">字段选择器</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
            <param name="IDs">o => IDs.Contains(o.ID)</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToSelectList``1(System.Collections.Generic.List{System.Int32},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Int32,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                返回筛选后的列表
            </summary>
            <param name="select">字段选择器</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
            <param name="IDs">o => IDs.Contains(o.ID)</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.Count(System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取数量
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.Count(System.Nullable{System.Int32},System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取数量
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.Count(System.Collections.Generic.List{System.Int32},System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取数量
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.IsHaving(System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                判断是否存在记录
            </summary>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.IsHaving(System.Nullable{System.Int32},System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                判断是否存在记录
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.IsHaving(System.Collections.Generic.List{System.Int32},System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                判断是否存在记录
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToInfo(System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取单条记录
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToTable(System.Int32@,System.Int32,System.Int32,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取数据列表
            </summary>
            <param name="recordCount">返回数据总数</param>
            <param name="pageSize">每页大小</param>
            <param name="pageIndex">索引</param>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToTable(System.Int32,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取数据列表
            </summary>
            <param name="top">Top数量</param>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToTable(System.Int32,System.Int32,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取分页、Top、全部的数据方法(根据pageSize、pageIndex自动识别使用场景)
            </summary>
            <param name="pageIndex">分页索引，为1时，使用Top方法</param>
            <param name="pageSize">为0时，获取所有数据</param>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToList(System.Int32@,System.Int32,System.Int32,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取数据列表
            </summary>
            <param name="recordCount">返回数据总数</param>
            <param name="pageSize">每页大小</param>
            <param name="pageIndex">索引</param>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToList(System.Int32,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取数据列表
            </summary>
            <param name="top">TOP数量</param>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToList(System.Int32,System.Int32,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取分页、Top、全部的数据方法(根据pageSize、pageIndex自动识别使用场景)
            </summary>
            <param name="pageIndex">分页索引，为1时，使用Top方法</param>
            <param name="pageSize">为0时，获取所有数据</param>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToList(System.Collections.Generic.List{System.Int32},System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取分页、Top、全部的数据方法(根据pageSize、pageIndex自动识别使用场景)
            </summary>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToList(FS.UI.Repeater,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                通用的分页方法(多条件)
            </summary>
            <param name="rpt">Repeater带分页控件</param>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToList(System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取所有列表
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.GetSum``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取Sum总和
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="db">可传入事务的db</param>
            <param name="select">字段选择器</param>
            <param name="defValue">默认值</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.GetSum``1(``0,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取Sum总和
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="db">可传入事务的db</param>
            <param name="defValue">默认值</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.GetMax``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取Max最大值
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="db">可传入事务的db</param>
            <param name="select">字段选择器</param>
            <param name="defValue">默认值</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.GetMax``1(``0,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取Max最大值
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="db">可传入事务的db</param>
            <param name="defValue">默认值</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.GetMin``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取Min最小值
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="db">可传入事务的db</param>
            <param name="select">字段选择器</param>
            <param name="defValue">默认值</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.GetMin``1(``0,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取Min最小值
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="db">可传入事务的db</param>
            <param name="defValue">默认值</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.GetValue``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取单个值
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="defValue">默认值</param>
            <param name="select">字段选择器</param>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.GetValue``1(``0,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取单个值
            </summary>
            <typeparam name="T">返回结果</typeparam>
            <param name="defValue">默认值</param>
            <param name="db">可传入事务的db</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.GetValue``1(System.Nullable{System.Int32},System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取单个字段的数据
            </summary>
            <typeparam name="T">值类型变量</typeparam>
            <param name="defValue">为null时默认值</param>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
            <param name="select">字段选择器</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.GetValue``1(System.Nullable{System.Int32},``0,System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取单个字段的数据
            </summary>
            <typeparam name="T">值类型变量</typeparam>
            <param name="defValue">为null时默认值</param>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToNextInfo(System.Nullable{System.Int32},System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取下一条记录
            </summary>
            <param name="ID">当前ID</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToPreviousInfo(System.Nullable{System.Int32},System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取上一条记录
            </summary>
            <param name="ID">当前ID</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToInfo(System.Nullable{System.Int32},System.Boolean,FS.Core.Data.DbExecutor)">
            <summary>
                获取单条记录
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
            <param name="isIgnoreStatistics">是否忽略统计，直接加入缓存</param>
        </member>
        <member name="M:FS.Core.Model.CacheDataBean`1.ToString">
            <summary>
            Data.ToString()
            </summary>
            <returns></returns>
        </member>
        <member name="P:FS.Core.Model.CacheDataBean`1.DataResult">
            <summary>
                返回执行结果
            </summary>
        </member>
        <member name="T:FS.Core.Model.ModelCateInfo">
            <summary>
            分类基类
            </summary>
        </member>
        <member name="P:FS.Core.Model.ModelCateInfo.ParentID">
            <summary>
                所属ID
            </summary>
        </member>
        <member name="P:FS.Core.Model.ModelCateInfo.Caption">
            <summary>
                标题
            </summary>
        </member>
        <member name="P:FS.Core.Model.ModelCateInfo.Sort">
            <summary>
                排序
            </summary>
        </member>
        <member name="T:FS.Core.Model.BaseCateModel`1">
            <summary>
                实体类基类信息
            </summary>
        </member>
        <member name="M:FS.Core.Model.BaseCateModel`1.Cache(FS.Core.Data.DbExecutor)">
            <summary>
                数据缓存操作
            </summary>
            <param name="db">事务</param>
        </member>
        <member name="M:FS.Core.Model.BaseCateModel`1.Insert(FS.Core.Data.DbExecutor)">
            <summary>
                插入数据
            </summary>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.BaseCateModel`1.Insert(System.Int32@,FS.Core.Data.DbExecutor)">
            <summary>
                插入数据
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="identity">标识，刚插入的ID</param>
        </member>
        <member name="M:FS.Core.Model.BaseCateModel`1.Update(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},FS.Core.Data.DbExecutor)">
            <summary>
                更新数据
            </summary>
            <param name="where">条件</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.BaseCateModel`1.Update(FS.Core.Data.DbExecutor)">
            <summary>
                更新数据
            </summary>
            <param name="where">条件</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Core.Model.BaseCateModel`1.Update(System.Nullable{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                更改实体类
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
        </member>
        <member name="M:FS.Core.Model.BaseCateModel`1.Update(System.Collections.Generic.List{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                更改实体类
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
        </member>
        <member name="M:FS.Core.Model.BaseCateModel`1.Save(System.Int32,System.Action{System.String,System.String},System.Action{`0,FS.Core.Data.DbExecutor},System.Action{`0,FS.Core.Data.DbExecutor},System.Action{System.Int32,`0,FS.Core.Data.DbExecutor})">
            <summary>
                保存数据
            </summary>
            <param name="reqID">请求ID</param>
            <param name="tip">提示</param>
            <param name="actInsert">插入时的方法委托</param>
            <param name="actUpdate">更新时的方法委托</param>
            <param name="actSuccess">成功后的方法委托</param>
        </member>
        <member name="M:FS.Core.Model.BaseCateModel`1.Form(System.Action{System.String,System.String},System.String,System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="tip">弹出框事务委托</param>
            <param name="url">跳转地址</param>
        </member>
        <member name="M:FS.Core.Model.BaseCateModel`1.Form(System.Action{System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}},System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="tip">弹出框事务委托</param>
        </member>
        <member name="M:FS.Core.Model.BaseCateModel`1.Form(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}@,System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="dicError">返回错误消息,key：属性名称；value：错误消息</param>
        </member>
        <member name="M:FS.Core.Model.BaseCateModel`1.QueryString(System.Action{System.String,System.String},System.String,System.String)">
            <summary>
                把Request.QueryString提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="tip">弹出框事务委托</param>
            <param name="url">跳转地址</param>
        </member>
        <member name="M:FS.Core.Model.BaseCateModel`1.QueryString(System.Action{System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}},System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="tip">弹出框事务委托</param>
        </member>
        <member name="M:FS.Core.Model.BaseCateModel`1.QueryString(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}@,System.String)">
            <summary>
                把Request.Form提交过来的内容转化成为实体类
            </summary>
            <param name="prefix">控件前缀</param>
            <param name="dicError">返回错误消息,key：属性名称；value：错误消息</param>
        </member>
        <member name="P:FS.Core.Model.BaseCateModel`1.DataResult">
            <summary>
                查询结果
            </summary>
        </member>
        <member name="P:FS.Core.Model.BaseCateModel`1.Data">
            <summary>
                数据库持久化
            </summary>
        </member>
        <member name="T:FS.Core.Page.BaseController">
            <summary>
                控制器基类
            </summary>
        </member>
        <member name="F:FS.Core.Page.BaseController.Request">
            <summary>
                HttpContext.Current.Request
            </summary>
        </member>
        <member name="F:FS.Core.Page.BaseController.Response">
            <summary>
                HttpContext.Current.Response
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseController.#ctor">
            <summary>
                构造
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseController.QS(System.String,System.Text.Encoding)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseController.QS(System.String)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseController.QS``1(System.String,``0)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseController.QF``1(System.String,``0)">
            <summary>
                Request.Form
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseController.QF(System.String)">
            <summary>
                Request.Form
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseController.QA(System.String)">
            <summary>
                先QF后QS
            </summary>
            <param name="parmsName"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Core.Page.BaseController.QA``1(System.String,``0)">
            <summary>
                先QF后QS
            </summary>
            <param name="parmsName"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Core.Page.BaseController.GoToUrl(System.String,System.Object[])">
            <summary>
                转到网址
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseController.GoToUrl(System.String)">
            <summary>
                转到网址(默认为最后一次访问)
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseController.Refresh">
            <summary>
                刷新当前页
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseController.RefreshParent(System.String)">
            <summary>
                刷新整页
            </summary>
            <param name="link"></param>
        </member>
        <member name="M:FS.Core.Page.BaseController.Parms(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.Object)">
            <summary>
                返回连接参数
            </summary>
            <param name="kic">页面需要用到的参数名称、值</param>
            <param name="parmsName">要重新赋值的参数</param>
            <param name="value">新的参数值</param>
        </member>
        <member name="M:FS.Core.Page.BaseController.Parms(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
                返回连接参数
            </summary>
            <param name="kic">页面需要用到的参数名称、值</param>
            <param name="parmsName">省略key等于当前参数名称的值</param>
        </member>
        <member name="P:FS.Core.Page.BaseController.MvcReqeust">
            <summary>
            return a mvc reqeust object.
            </summary>
        </member>
        <member name="P:FS.Core.Page.BaseController.WebTitle">
            <summary>
                网站标题
            </summary>
        </member>
        <member name="T:FS.Core.Page.BaseHandler">
            <summary>
            Handler基类
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseHandler.QS(System.String,System.Text.Encoding)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseHandler.QS(System.String)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseHandler.QS``1(System.String,``0)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseHandler.QF``1(System.String,``0)">
            <summary>
                Request.Form
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseHandler.QF(System.String)">
            <summary>
                Request.Form
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseHandler.QA(System.String)">
            <summary>
                先QF后QS
            </summary>
            <param name="parmsName"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Core.Page.BaseHandler.QA``1(System.String,``0)">
            <summary>
                先QF后QS
            </summary>
            <param name="parmsName"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Core.Page.BaseHandler.GoToUrl(System.String,System.Object[])">
            <summary>
                转到网址
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseHandler.GoToUrl(System.String)">
            <summary>
                转到网址(默认为最后一次访问)
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseHandler.Refresh">
            <summary>
                刷新当前页
            </summary>
        </member>
        <member name="T:FS.Extend.ControlExtend">
            <summary>
                控件扩展工具
            </summary>
            <summary>
                控件扩展工具
            </summary>
            <summary>
                控件扩展工具
            </summary>
            <summary>
                控件扩展工具
            </summary>
            <summary>
                控件扩展工具
            </summary>
            <summary>
                控件扩展工具
            </summary>
            <summary>
                控件扩展工具
            </summary>
            <summary>
                控件扩展工具
            </summary>
        </member>
        <member name="M:FS.Extend.ControlExtend.Bind``1(System.Windows.Forms.DataGridView,System.Collections.Generic.List{``0})">
            <summary>
                IEnumerable绑定到DataGridView
            </summary>
            <param name="dgv">DataGridView</param>
            <param name="lst">List列表</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Bind``1(System.Windows.Forms.DataGridView,System.ComponentModel.BindingList{``0},System.Action{System.Object,System.ComponentModel.ListChangedEventArgs})">
            <summary>
                IEnumerable绑定到DataGridView
            </summary>
            <param name="dgv">DataGridView</param>
            <param name="lst">List列表</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Trim(System.Windows.Forms.TextBox)">
            <summary>
                清除空格
            </summary>
            <param name="control">TextBox控件</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Trim(System.Web.UI.WebControls.TextBox)">
            <summary>
                清除空格
            </summary>
            <param name="control">TextBox控件</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.GetValue``1(System.Web.UI.WebControls.ListControl)">
            <summary>
                获取ListBox的值
            </summary>
            <param name="control">ListControl控件</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.SetValue``1(System.Web.UI.WebControls.ListControl,System.Collections.Generic.List{``0})">
            <summary>
                设置ListBox的值
            </summary>
            <param name="control">ListControl控件</param>
            <param name="lst">要设置的值</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.InsertItem(System.Web.UI.WebControls.ListControl,System.Object,System.String,System.Int32)">
            <summary>
                插入项
            </summary>
            <param name="control">control控件</param>
            <param name="text">显示的名称</param>
            <param name="value">保存的值</param>
            <param name="index">插入的项索引</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.SelectedItems(System.Web.UI.WebControls.ListControl,System.Object)">
            <summary>
                选择项
            </summary>
            <param name="control">ListControl控件</param>
            <param name="selectedValue">选择项</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Bind``1(System.Web.UI.WebControls.ListControl,``0[],System.Object)">
            <summary>
                string[]绑定到WebControl
            </summary>
            <param name="control">要绑定的ddl</param>
            <param name="strs">源数据</param>
            <param name="selectedValue">默认选择值</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Bind(System.Web.UI.WebControls.ListControl,System.Collections.IEnumerable,System.Object,System.String,System.String,System.String,System.Object)">
            <summary>
                IEnumerable绑定到WebControl
            </summary>
            <param name="control">要绑定的ddl</param>
            <param name="lst">源数据</param>
            <param name="dataTextField">绑定的文本字段</param>
            <param name="dataValueField">绑定的值字段</param>
            <param name="defShowText">第一行显示的文字</param>
            <param name="defShowValue">第一行显示的值</param>
            <param name="selectedValue">默认选择值</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Bind(System.Web.UI.WebControls.ListControl,System.Type,System.Object,System.String,System.Object)">
            <summary>
                Eume绑定到WebControl
            </summary>
            <param name="control">要绑定的ddl</param>
            <param name="eumType">枚举的Type</param>
            <param name="defShowText">第一行要显示的文字</param>
            <param name="defShowValue">第一行要显示的值</param>
            <param name="selectedValue">默认选择值</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Bind(System.Windows.Forms.ListControl,System.Collections.IEnumerable,System.String,System.String)">
            <summary>
                WinForm绑定
            </summary>
            <param name="control">控件</param>
            <param name="lst">List列表</param>
            <param name="dataTextField">显示名称</param>
            <param name="dataValueField">值</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Bind(System.Windows.Forms.ListControl,System.Type)">
            <summary>
                WinForm绑定
            </summary>
            <param name="control">控件</param>
            <param name="eumType">枚举类型</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Bind(System.Web.UI.WebControls.ListControl,System.String,System.String,System.String)">
            <summary>
                string[]绑定到WebControl
            </summary>
            <param name="control">要绑定的ddl</param>
            <param name="trueCaption">值为是的提示</param>
            <param name="falseCaption">值为不是的提示</param>
            <param name="NoSelectCaption">未选择的提示</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.GetValue(System.Web.UI.WebControls.CheckBoxList)">
            <summary>
                获取CheckBoxList中，选中后的枚举值
            </summary>
            <param name="control">CheckBoxList控件</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.SetValue(System.Web.UI.WebControls.CheckBoxList,System.Int32)">
            <summary>
                获取CheckBoxList中，选中后的枚举值
            </summary>
            <param name="control">CheckBoxList控件</param>
            <param name="value">设置的值</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Bind(System.Web.UI.WebControls.Repeater,System.Type)">
            <summary>
                绑定枚举
            </summary>
            <param name="rpt">Repeater</param>
            <param name="eumType">枚举</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Bind(System.Web.UI.WebControls.Repeater,System.Collections.IEnumerable)">
            <summary>
                IEnumerable绑定到Repeater
            </summary>
            <param name="rpt">Repeater</param>
            <param name="lst">List列表</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Bind(FS.UI.Repeater,System.Collections.IEnumerable,System.Int32)">
            <summary>
                IEnumerable绑定到Repeater
            </summary>
            <param name="rpt">QynRepeater</param>
            <param name="recordCount">记录总数</param>
            <param name="lst">IEnumerable</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Bind(System.Web.UI.WebControls.DropDownList,System.Collections.Generic.List{FS.Core.Model.ModelCateInfo},System.Object,System.Int32)">
            <summary>
                绑定到DropDownList
            </summary>
            <param name="ddl">要绑定的ddl控件</param>
            <param name="lstInfo">要进行绑定的列表</param>
            <param name="selectedValue">默认选则值</param>
            <param name="RemoveID">不加载的节点（包括子节点）</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Bind(System.Web.UI.WebControls.DropDownList,System.Collections.Generic.List{FS.Core.Model.ModelCateInfo},System.Int32,System.Int32,System.Int32)">
            <summary>
                递归绑定
            </summary>
        </member>
        <member name="M:FS.Extend.ControlExtend.Parent``1(System.Web.UI.WebControls.RepeaterItem)">
            <summary>
                获取父类RepeaterItem
            </summary>
            <typeparam name="T">实体类</typeparam>
            <param name="Container">RepeaterItem</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.ControlExtend.Item``1(System.Web.UI.WebControls.RepeaterItem)">
            <summary>
            Container
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Container"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.ControlExtend.GetDataItem``1(System.Web.UI.Page)">
            <summary>
             获取数据绑定上下文数据项。
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="page">页面</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.ToList``1(System.Web.UI.WebControls.ListItemCollection)">
            <summary>
                将ListItem 转换为List
            </summary>
            <typeparam name="T">指定要转换的基本类型</typeparam>
            <param name="lstItem">ListItemCollection</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.Bind(System.Windows.Forms.DataGridViewComboBoxColumn,System.Type)">
            <summary>
                WinForm绑定
            </summary>
            <param name="control">控件</param>
            <param name="eumType">枚举类型</param>
        </member>
        <member name="M:FS.Extend.ControlExtend.SetDisEnabledColor(System.Web.UI.ControlCollection)">
            <summary>
                设置冻结的ListControl的颜色不为灰
            </summary>
            <param name="controls"></param>
        </member>
        <member name="T:FS.Interface.IAuditInfo">
            <summary>
                审核人信息
            </summary>
        </member>
        <member name="P:FS.Interface.IAuditInfo.AuditID">
            <summary>
                审核人ID
            </summary>
        </member>
        <member name="P:FS.Interface.IAuditInfo.AuditAt">
            <summary>
                审核时间
            </summary>
        </member>
        <member name="P:FS.Interface.IAuditInfo.AuditName">
            <summary>
                审核人帐号
            </summary>
        </member>
        <member name="P:FS.Interface.IAuditInfo.AuditIP">
            <summary>
                审核人IP
            </summary>
        </member>
        <member name="T:FS.Interface.ICreateInfo">
            <summary>
                创建人信息
            </summary>
        </member>
        <member name="P:FS.Interface.ICreateInfo.CreateID">
            <summary>
                创建人ID
            </summary>
        </member>
        <member name="P:FS.Interface.ICreateInfo.CreateAt">
            <summary>
                创建时间
            </summary>
        </member>
        <member name="P:FS.Interface.ICreateInfo.CreateName">
            <summary>
                创建人帐号
            </summary>
        </member>
        <member name="P:FS.Interface.ICreateInfo.CreateIP">
            <summary>
                创建人IP
            </summary>
        </member>
        <member name="T:FS.Interface.ILoginInfo">
            <summary>
                登陆信息
            </summary>
        </member>
        <member name="P:FS.Interface.ILoginInfo.LoginCount">
            <summary>
                登陆次数
            </summary>
        </member>
        <member name="P:FS.Interface.ILoginInfo.LoginIP">
            <summary>
                登陆IP
            </summary>
        </member>
        <member name="P:FS.Interface.ILoginInfo.LoginAt">
            <summary>
                登陆时间
            </summary>
        </member>
        <member name="T:FS.Interface.IUpdateInfo">
            <summary>
                修改人信息
            </summary>
        </member>
        <member name="P:FS.Interface.IUpdateInfo.UpdateID">
            <summary>
                修改人ID
            </summary>
        </member>
        <member name="P:FS.Interface.IUpdateInfo.UpdateAt">
            <summary>
                修改时间
            </summary>
        </member>
        <member name="P:FS.Interface.IUpdateInfo.UpdateName">
            <summary>
                修改人帐号
            </summary>
        </member>
        <member name="P:FS.Interface.IUpdateInfo.UpdateIP">
            <summary>
                修改人IP
            </summary>
        </member>
        <member name="T:FS.Core.Page.BaseControls">
            <summary>
                用户控件基类
            </summary>
        </member>
        <member name="F:FS.Core.Page.BaseControls.DialogScript">
            <summary>
                弹出框的Parent控制
            </summary>
        </member>
        <member name="F:FS.Core.Page.BaseControls.JavaScript">
            <summary>
                原来自来的脚本
            </summary>
        </member>
        <member name="F:FS.Core.Page.BaseControls.LhgDialog">
            <summary>
                LhgDialog弹出框
            </summary>
        </member>
        <member name="F:FS.Core.Page.BaseControls.Request">
            <summary>
                HttpContext.Current.Request
            </summary>
        </member>
        <member name="F:FS.Core.Page.BaseControls.Response">
            <summary>
                HttpContext.Current.Response
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseControls.#ctor">
            <summary>
                构造
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseControls.QS(System.String,System.Text.Encoding)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseControls.QS(System.String)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseControls.QS``1(System.String,``0)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseControls.QF``1(System.String,``0)">
            <summary>
                Request.Form
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseControls.QF(System.String)">
            <summary>
                Request.Form
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseControls.QA(System.String)">
            <summary>
                先QF后QS
            </summary>
            <param name="parmsName"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Core.Page.BaseControls.QA``1(System.String,``0)">
            <summary>
                先QF后QS
            </summary>
            <param name="parmsName"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Core.Page.BaseControls.GoToUrl(System.String,System.Object[])">
            <summary>
                转到网址
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseControls.GoToUrl(System.String)">
            <summary>
                转到网址(默认为最后一次访问)
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseControls.Refresh">
            <summary>
                刷新当前页
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseControls.RefreshParent(System.String)">
            <summary>
                刷新整页
            </summary>
            <param name="link"></param>
        </member>
        <member name="M:FS.Core.Page.BaseControls.Parms``1(System.Collections.Generic.Dictionary{System.String,``0},System.String,``0)">
            <summary>
                返回连接参数
            </summary>
            <param name="kic">页面需要用到的参数名称、值</param>
            <param name="parmsName">要重新赋值的参数</param>
            <param name="value">新的参数值</param>
        </member>
        <member name="M:FS.Core.Page.BaseControls.Parms``1(System.Collections.Generic.Dictionary{System.String,``0},System.String)">
            <summary>
                返回连接参数
            </summary>
            <param name="kic">页面需要用到的参数名称、值</param>
            <param name="parmsName">省略key等于当前参数名称的值</param>
        </member>
        <member name="P:FS.Core.Page.BaseControls.WebTitle">
            <summary>
                网站标题
            </summary>
        </member>
        <member name="T:FS.Core.Page.BaseMasterPage">
            <summary>
                MasterPage基类
            </summary>
        </member>
        <member name="F:FS.Core.Page.BaseMasterPage.DialogScript">
            <summary>
                弹出框的Parent控制
            </summary>
        </member>
        <member name="F:FS.Core.Page.BaseMasterPage.JavaScript">
            <summary>
                原来自来的脚本
            </summary>
        </member>
        <member name="F:FS.Core.Page.BaseMasterPage.LhgDialog">
            <summary>
                LhgDialog弹出框
            </summary>
        </member>
        <member name="F:FS.Core.Page.BaseMasterPage.Request">
            <summary>
                HttpContext.Current.Request
            </summary>
        </member>
        <member name="F:FS.Core.Page.BaseMasterPage.Response">
            <summary>
                HttpContext.Current.Response
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseMasterPage.#ctor">
            <summary>
                构造
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseMasterPage.QS(System.String,System.Text.Encoding)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseMasterPage.QS(System.String)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseMasterPage.QS``1(System.String,``0)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseMasterPage.QF``1(System.String,``0)">
            <summary>
                Request.Form
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseMasterPage.QF(System.String)">
            <summary>
                Request.Form
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseMasterPage.QA(System.String)">
            <summary>
                先QF后QS
            </summary>
            <param name="parmsName"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Core.Page.BaseMasterPage.QA``1(System.String,``0)">
            <summary>
                先QF后QS
            </summary>
            <param name="parmsName"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Core.Page.BaseMasterPage.GoToUrl(System.String,System.Object[])">
            <summary>
                转到网址
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseMasterPage.GoToUrl(System.String)">
            <summary>
                转到网址(默认为最后一次访问)
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseMasterPage.Refresh">
            <summary>
                刷新当前页
            </summary>
        </member>
        <member name="M:FS.Core.Page.BaseMasterPage.RefreshParent(System.String)">
            <summary>
                刷新整页
            </summary>
            <param name="link"></param>
        </member>
        <member name="M:FS.Core.Page.BaseMasterPage.Parms``1(System.Collections.Generic.Dictionary{System.String,``0},System.String,``0)">
            <summary>
                返回连接参数
            </summary>
            <param name="kic">页面需要用到的参数名称、值</param>
            <param name="parmsName">要重新赋值的参数</param>
            <param name="value">新的参数值</param>
        </member>
        <member name="M:FS.Core.Page.BaseMasterPage.Parms``1(System.Collections.Generic.Dictionary{System.String,``0},System.String)">
            <summary>
                返回连接参数
            </summary>
            <param name="kic">页面需要用到的参数名称、值</param>
            <param name="parmsName">省略key等于当前参数名称的值</param>
        </member>
        <member name="P:FS.Core.Page.BaseMasterPage.WebTitle">
            <summary>
                网站标题
            </summary>
        </member>
        <member name="T:FS.Core.Page.BasePage">
            <summary>
                页面基类
            </summary>
        </member>
        <member name="F:FS.Core.Page.BasePage.JavaScript">
            <summary>
                原生的脚本
            </summary>
        </member>
        <member name="F:FS.Core.Page.BasePage.LhgDialog">
            <summary>
                LhgDialog弹出框
            </summary>
        </member>
        <member name="F:FS.Core.Page.BasePage.Request">
            <summary>
                HttpContext.Current.Request
            </summary>
        </member>
        <member name="F:FS.Core.Page.BasePage.Response">
            <summary>
                HttpContext.Current.Response
            </summary>
        </member>
        <member name="M:FS.Core.Page.BasePage.#ctor">
            <summary>
                构造
            </summary>
        </member>
        <member name="M:FS.Core.Page.BasePage.QS(System.String,System.Text.Encoding)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BasePage.QS(System.String)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BasePage.QS``1(System.String,``0)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Core.Page.BasePage.QF``1(System.String,``0)">
            <summary>
                Request.Form
            </summary>
        </member>
        <member name="M:FS.Core.Page.BasePage.QF(System.String)">
            <summary>
                Request.Form
            </summary>
        </member>
        <member name="M:FS.Core.Page.BasePage.QA(System.String)">
            <summary>
                先QF后QS
            </summary>
            <param name="parmsName"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Core.Page.BasePage.QA``1(System.String,``0)">
            <summary>
                先QF后QS
            </summary>
            <param name="parmsName"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Core.Page.BasePage.GoToUrl(System.String,System.Object[])">
            <summary>
                转到网址
            </summary>
        </member>
        <member name="M:FS.Core.Page.BasePage.GoToUrl(System.String)">
            <summary>
                转到网址(默认为最后一次访问)
            </summary>
        </member>
        <member name="M:FS.Core.Page.BasePage.Refresh">
            <summary>
                刷新当前页
            </summary>
        </member>
        <member name="M:FS.Core.Page.BasePage.RefreshParent(System.String)">
            <summary>
                刷新整页
            </summary>
            <param name="link"></param>
        </member>
        <member name="M:FS.Core.Page.BasePage.Parms``1(System.Collections.Generic.Dictionary{System.String,``0},System.String,``0)">
            <summary>
                返回连接参数
            </summary>
            <param name="kic">页面需要用到的参数名称、值</param>
            <param name="parmsName">要重新赋值的参数</param>
            <param name="value">新的参数值</param>
        </member>
        <member name="M:FS.Core.Page.BasePage.Parms``1(System.Collections.Generic.Dictionary{System.String,``0},System.String)">
            <summary>
                返回连接参数
            </summary>
            <param name="kic">页面需要用到的参数名称、值</param>
            <param name="parmsName">省略key等于当前参数名称的值</param>
        </member>
        <member name="P:FS.Core.Page.BasePage.WebTitle">
            <summary>
                网站标题
            </summary>
        </member>
        <member name="T:FS.Mapping.Verify.FieldMapState">
            <summary>
            保存字段映射的信息
            </summary>
        </member>
        <member name="P:FS.Mapping.Verify.FieldMapState.StringLength">
            <summary>
                字符串长度
            </summary>
        </member>
        <member name="P:FS.Mapping.Verify.FieldMapState.Required">
            <summary>
                是否必填
            </summary>
        </member>
        <member name="P:FS.Mapping.Verify.FieldMapState.Display">
            <summary>
                值描述（字段名）
            </summary>
        </member>
        <member name="P:FS.Mapping.Verify.FieldMapState.Range">
            <summary>
                值的长度
            </summary>
        </member>
        <member name="P:FS.Mapping.Verify.FieldMapState.RegularExpression">
            <summary>
                正则
            </summary>
        </member>
        <member name="T:FS.Mapping.Verify.VerifyMap">
            <summary>
                ORM 映射关系
            </summary>
        </member>
        <member name="F:FS.Mapping.Verify.VerifyMap.ModelList">
            <summary>
                获取所有属性
            </summary>
        </member>
        <member name="M:FS.Mapping.Verify.VerifyMap.#ctor(System.Type)">
            <summary>
                关系映射
            </summary>
            <param name="type">实体类Type</param>
        </member>
        <member name="M:FS.Mapping.Verify.VerifyMap.op_Implicit(System.Type)~FS.Mapping.Verify.VerifyMap">
            <summary>
                通过实体类型，返回Mapping
            </summary>
        </member>
        <member name="P:FS.Mapping.Verify.VerifyMap.IndexName">
            <summary>
                自增ID
            </summary>
        </member>
        <member name="P:FS.Mapping.Verify.VerifyMap.Type">
            <summary>
                类型
            </summary>
        </member>
        <member name="T:FS.Mapping.Verify.VerifyMapCache">
            <summary>
                缓存要验证的实体类
            </summary>
        </member>
        <member name="F:FS.Mapping.Verify.VerifyMapCache.VerifyMapList">
            <summary>
                缓存所有验证的实体类
            </summary>
        </member>
        <member name="M:FS.Mapping.Verify.VerifyMapCache.GetMap``1(``0)">
            <summary>
                返回验证的实体类映射的信息
            </summary>
            <param name="info">IVerification实体类</param>
        </member>
        <member name="M:FS.Mapping.Verify.VerifyMapCache.GetMap(System.Type)">
            <summary>
                返回验证的实体类映射的信息
            </summary>
            <param name="info">IVerification实体类</param>
        </member>
        <member name="M:FS.Mapping.Verify.VerifyMapCache.ClearCache">
            <summary>
                清除缓存
            </summary>
        </member>
        <member name="T:FS.Mvc.DomainData">
            <summary>
                路由数据
            </summary>
        </member>
        <member name="P:FS.Mvc.DomainData.Protocol">
            <summary>
            </summary>
        </member>
        <member name="P:FS.Mvc.DomainData.HostName">
            <summary>
            </summary>
        </member>
        <member name="P:FS.Mvc.DomainData.Fragment">
            <summary>
            </summary>
        </member>
        <member name="T:FS.Mvc.DomainRoute">
            <summary>
                路由数据
            </summary>
        </member>
        <member name="M:FS.Mvc.DomainRoute.#ctor(System.String,System.String)">
            <summary>
                路由设置
            </summary>
            <param name="domain">域名</param>
            <param name="url">请求的地址</param>
        </member>
        <member name="M:FS.Mvc.DomainRoute.#ctor(System.String,System.String,System.Object)">
            <summary>
                路由设置
            </summary>
            <param name="domain">域名</param>
            <param name="url">请求的地址</param>
            <param name="defaults">设置默认值</param>
        </member>
        <member name="M:FS.Mvc.DomainRoute.#ctor(System.String,System.String,System.Object,System.Object)">
            <summary>
                路由设置
            </summary>
            <param name="domain">域名</param>
            <param name="url">请求的地址</param>
            <param name="defaults">设置默认值</param>
            <param name="constraints">正则</param>
        </member>
        <member name="M:FS.Mvc.DomainRoute.#ctor(System.String,System.String,System.Object,System.Object,System.Object)">
            <summary>
                路由设置
            </summary>
            <param name="domain">域名</param>
            <param name="url">请求的地址</param>
            <param name="defaults">设置默认值</param>
            <param name="constraints">正则</param>
            <param name="dataTokens"></param>
        </member>
        <member name="M:FS.Mvc.DomainRoute.GetRouteData(System.Web.HttpContextBase)">
            <summary>
                获取路由数据
            </summary>
            <param name="httpContext">请求的上下文</param>
            <returns></returns>
        </member>
        <member name="M:FS.Mvc.DomainRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
            <summary>
                获取虚拟路径
            </summary>
            <param name="requestContext">请求的上下文</param>
            <param name="values">表示不区分大小写的键/值对的集合，您可以在路由框架中的不同位置（例如，在定义路由的默认值时或在生成基于路由的 URL 时）使用该集合。</param>
        </member>
        <member name="M:FS.Mvc.DomainRoute.GetDomainData(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
            <summary>
                获取路由数据
            </summary>
            <param name="requestContext">请求的上下文</param>
            <param name="values">表示不区分大小写的键/值对的集合，您可以在路由框架中的不同位置（例如，在定义路由的默认值时或在生成基于路由的 URL 时）使用该集合。</param>
        </member>
        <member name="M:FS.Mvc.DomainRoute.CreateRegex(System.String)">
            <summary>
                创建正则
            </summary>
            <param name="source">要转换的路径</param>
        </member>
        <member name="M:FS.Mvc.DomainRoute.GetRouteData(System.Web.Routing.RouteData,System.Text.RegularExpressions.Match,System.Text.RegularExpressions.Regex)">
            <summary>
                获取路由值
            </summary>
            <param name="data">路由</param>
            <param name="match">正则匹配</param>
            <param name="regex">正则</param>
        </member>
        <member name="P:FS.Mvc.DomainRoute.Domain">
            <summary>
                域名
            </summary>
        </member>
        <member name="T:System.Web.Mvc.Html.LinkExtensions">
            <summary>
                Mvc 链接扩展
            </summary>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Boolean)">
            <summary>
                链接地址
            </summary>
            <param name="htmlHelper"></param>
            <param name="linkText"></param>
            <param name="actionName"></param>
            <param name="requireAbsoluteUrl"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Boolean)">
            <summary>
                链接地址
            </summary>
            <param name="htmlHelper"></param>
            <param name="linkText"></param>
            <param name="actionName"></param>
            <param name="routeValues"></param>
            <param name="requireAbsoluteUrl"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Boolean)">
            <summary>
                链接地址
            </summary>
            <param name="htmlHelper"></param>
            <param name="linkText"></param>
            <param name="actionName"></param>
            <param name="controllerName"></param>
            <param name="requireAbsoluteUrl"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Boolean)">
            <summary>
                链接地址
            </summary>
            <param name="htmlHelper"></param>
            <param name="linkText"></param>
            <param name="actionName"></param>
            <param name="routeValues"></param>
            <param name="requireAbsoluteUrl"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object,System.Boolean)">
            <summary>
                链接地址
            </summary>
            <param name="htmlHelper"></param>
            <param name="linkText"></param>
            <param name="actionName"></param>
            <param name="routeValues"></param>
            <param name="htmlAttributes"></param>
            <param name="requireAbsoluteUrl"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
                链接地址
            </summary>
            <param name="htmlHelper"></param>
            <param name="linkText"></param>
            <param name="actionName"></param>
            <param name="routeValues"></param>
            <param name="htmlAttributes"></param>
            <param name="requireAbsoluteUrl"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object,System.Boolean)">
            <summary>
                链接地址
            </summary>
            <param name="htmlHelper"></param>
            <param name="linkText"></param>
            <param name="actionName"></param>
            <param name="controllerName"></param>
            <param name="routeValues"></param>
            <param name="htmlAttributes"></param>
            <param name="requireAbsoluteUrl"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
                链接地址
            </summary>
            <param name="htmlHelper"></param>
            <param name="linkText"></param>
            <param name="actionName"></param>
            <param name="controllerName"></param>
            <param name="routeValues"></param>
            <param name="htmlAttributes"></param>
            <param name="requireAbsoluteUrl"></param>
            <returns></returns>
        </member>
        <member name="T:FS.Core.Bean.DataResult`1">
            <summary>
                返回执行结果
            </summary>
        </member>
        <member name="P:FS.Core.Bean.DataResult`1.Sql">
            <summary>
                执行的Sql
            </summary>
        </member>
        <member name="P:FS.Core.Bean.DataResult`1.SqlBuildTime">
            <summary>
                Sql生成时间
            </summary>
        </member>
        <member name="P:FS.Core.Bean.DataResult`1.OperateDataTime">
            <summary>
                操作数据时间
            </summary>
        </member>
        <member name="P:FS.Core.Bean.DataResult`1.ToModelTime">
            <summary>
                转到实体用时
            </summary>
        </member>
        <member name="P:FS.Core.Bean.DataResult`1.ParmsList">
            <summary>
                参数列表
            </summary>
        </member>
        <member name="T:FS.Core.Bean.MySqlOperate">
            <summary>
                数据库修改表结构
            </summary>
        </member>
        <member name="T:FS.Core.Bean.DbOperate">
            <summary>
                数据库修改
            </summary>
        </member>
        <member name="F:FS.Core.Bean.DbOperate.dbExecutor">
            <summary>
                数据库操作
            </summary>
        </member>
        <member name="F:FS.Core.Bean.DbOperate.dbProvider">
            <summary>
                数据库提供者
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbOperate.#ctor(System.String,System.String)">
            <summary>
                初始化类
            </summary>
            <param name="connetionString">连接字符串</param>
            <param name="tableName">要操作的表名</param>
        </member>
        <member name="M:FS.Core.Bean.DbOperate.CreateFieldString(System.String,System.Boolean,System.Boolean,System.Boolean,FS.Core.Data.FieldType,System.Nullable{System.Int32},System.Object)">
            <summary>
                获取字段创建字符串
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="isPrimaryKey">是否为主键</param>
            <param name="isIdentity">是否自增长</param>
            <param name="isNotNull">是否不为空</param>
            <param name="fieldType">字段类型</param>
            <param name="fieldLength">字段长度</param>
            <param name="fieldDefaultValue">字段默认值</param>
        </member>
        <member name="M:FS.Core.Bean.DbOperate.CreateTable(System.Collections.Generic.List{System.String})">
            <summary>
                创建表
            </summary>
            <param name="lstCreateField">创建的字段列表</param>
        </member>
        <member name="M:FS.Core.Bean.DbOperate.ReNameTable(System.String)">
            <summary>
                修改表名称
            </summary>
            <param name="tableName">新表名称</param>
        </member>
        <member name="M:FS.Core.Bean.DbOperate.DropTable">
            <summary>
                删除表
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbOperate.IsExistTable">
            <summary>
                判断表是否存在
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbOperate.AddField(System.String,System.Boolean,System.Boolean,System.Boolean,FS.Core.Data.FieldType,System.Nullable{System.Int32},System.Object)">
            <summary>
                添加字段
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="isPrimaryKey">是否为主键</param>
            <param name="isIdentity">是否自增长</param>
            <param name="isNotNull">是否不为空</param>
            <param name="fieldType">字段类型</param>
            <param name="fieldLength">字段长度</param>
            <param name="fieldDefaultValue">字段默认值</param>
        </member>
        <member name="M:FS.Core.Bean.DbOperate.UpdateField(System.String,System.Boolean,System.Boolean,System.Boolean,FS.Core.Data.FieldType,System.Nullable{System.Int32},System.Object)">
            <summary>
                修改字段
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="isPrimaryKey">是否为主键</param>
            <param name="isIdentity">是否自增长</param>
            <param name="isNotNull">是否不为空</param>
            <param name="fieldType">字段类型</param>
            <param name="fieldLength">字段长度</param>
            <param name="fieldDefaultValue">字段默认值</param>
        </member>
        <member name="M:FS.Core.Bean.DbOperate.RenameField(System.String,System.String)">
            <summary>
                修改字段名称
            </summary>
            <param name="oldFieldName">旧字段名称</param>
            <param name="newFieldName">新字段名称</param>
        </member>
        <member name="M:FS.Core.Bean.DbOperate.DropField(System.String)">
            <summary>
                删除字段
            </summary>
            <param name="fieldName">字段名称</param>
        </member>
        <member name="M:FS.Core.Bean.DbOperate.IsExistField(System.String)">
            <summary>
                判断字段是否存在
            </summary>
            <param name="fieldName">字段名称</param>
        </member>
        <member name="P:FS.Core.Bean.DbOperate.ConnetionString">
            <summary>
                连接字符串
            </summary>
        </member>
        <member name="P:FS.Core.Bean.DbOperate.TableName">
            <summary>
                要操作的表名
            </summary>
        </member>
        <member name="M:FS.Core.Bean.MySqlOperate.#ctor(System.String,System.String)">
            <summary>
                MySql数据库操作
            </summary>
            <param name="connetionString">连接字符串</param>
            <param name="tableName">要操作的表名</param>
        </member>
        <member name="M:FS.Core.Bean.MySqlOperate.IsExistTable">
            <summary>
                判断表是否存在
            </summary>
        </member>
        <member name="M:FS.Core.Bean.MySqlOperate.CreateFieldString(System.String,System.Boolean,System.Boolean,System.Boolean,FS.Core.Data.FieldType,System.Nullable{System.Int32},System.Object)">
            <summary>
                获取字段创建字符串
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="isPrimaryKey">是否为主键</param>
            <param name="isIdentity">是否自增长</param>
            <param name="isNotNull">是否不为空</param>
            <param name="fieldType">字段类型</param>
            <param name="fieldLength">字段长度</param>
            <param name="fieldDefaultValue">字段默认值</param>
        </member>
        <member name="M:FS.Core.Bean.MySqlOperate.IsExistField(System.String)">
            <summary>
                判断字段是否存在
            </summary>
            <param name="fieldName">字段名称</param>
        </member>
        <member name="T:FS.Core.Bean.OleDbOperate">
            <summary>
                数据库修改表结构
            </summary>
        </member>
        <member name="M:FS.Core.Bean.OleDbOperate.#ctor(System.String,System.String)">
            <summary>
                OleDb数据库操作
            </summary>
            <param name="connetionString">连接字符串</param>
            <param name="tableName">要操作的表名</param>
        </member>
        <member name="M:FS.Core.Bean.OleDbOperate.IsExistTable">
            <summary>
                判断表是否存在
            </summary>
        </member>
        <member name="M:FS.Core.Bean.OleDbOperate.ReNameTable(System.String)">
            <summary>
                修改表名称
            </summary>
            <param name="tableName">新表名称</param>
        </member>
        <member name="M:FS.Core.Bean.OleDbOperate.IsExistField(System.String)">
            <summary>
                判断字段是否存在
            </summary>
            <param name="fieldName">字段名称</param>
        </member>
        <member name="T:FS.Core.Bean.OracleOperate">
            <summary>
                数据库修改表结构
            </summary>
        </member>
        <member name="M:FS.Core.Bean.OracleOperate.#ctor(System.String,System.String)">
            <summary>
                Oracle数据库操作
            </summary>
            <param name="connetionString">连接字符串</param>
            <param name="tableName">要操作的表名</param>
        </member>
        <member name="M:FS.Core.Bean.OracleOperate.IsExistTable">
            <summary>
                判断表是否存在
            </summary>
        </member>
        <member name="T:FS.Core.Bean.SQLiteOperate">
            <summary>
                数据库修改表结构
            </summary>
        </member>
        <member name="M:FS.Core.Bean.SQLiteOperate.#ctor(System.String,System.String)">
            <summary>
                SQLite数据库操作
            </summary>
            <param name="connetionString">连接字符串</param>
            <param name="tableName">要操作的表名</param>
        </member>
        <member name="M:FS.Core.Bean.SQLiteOperate.IsExistTable">
            <summary>
                判断表是否存在
            </summary>
        </member>
        <member name="M:FS.Core.Bean.SQLiteOperate.CreateFieldString(System.String,System.Boolean,System.Boolean,System.Boolean,FS.Core.Data.FieldType,System.Nullable{System.Int32},System.Object)">
            <summary>
                获取字段创建字符串
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="isPrimaryKey">是否为主键</param>
            <param name="isIdentity">是否自增长</param>
            <param name="isNotNull">是否不为空</param>
            <param name="fieldType">字段类型</param>
            <param name="fieldLength">字段长度</param>
            <param name="fieldDefaultValue">字段默认值</param>
        </member>
        <member name="T:FS.Core.Bean.SqlServerOperate">
            <summary>
                数据库修改表结构
            </summary>
        </member>
        <member name="M:FS.Core.Bean.SqlServerOperate.#ctor(System.String,System.String)">
            <summary>
                SqlServer数据库操作
            </summary>
            <param name="connetionString">连接字符串</param>
            <param name="tableName">要操作的表名</param>
        </member>
        <member name="M:FS.Core.Bean.SqlServerOperate.IsExistTable">
            <summary>
                判断表是否存在
            </summary>
        </member>
        <member name="M:FS.Core.Bean.SqlServerOperate.ReNameTable(System.String)">
            <summary>
                修改表名称
            </summary>
            <param name="tableName">新表名称</param>
        </member>
        <member name="M:FS.Core.Bean.SqlServerOperate.RenameField(System.String,System.String)">
            <summary>
                修改字段名称
            </summary>
            <param name="oldFieldName">旧字段名称</param>
            <param name="newFieldName">新字段名称</param>
            <returns></returns>
        </member>
        <member name="M:FS.Core.Bean.SqlServerOperate.IsExistField(System.String)">
            <summary>
                判断字段是否存在
            </summary>
            <param name="fieldName">字段名称</param>
        </member>
        <member name="T:FS.Core.Bean.DbProvider">
            <summary>
                数据库提供者
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbProvider.CreateTableAegis(System.String)">
            <summary>
                创建字段保护符
            </summary>
            <param name="fieldName">字符名称</param>
        </member>
        <member name="M:FS.Core.Bean.DbProvider.CreateDbParam(System.String,System.Object,System.Data.DbType,System.Int32,System.Boolean)">
            <summary>
                创建一个数据库参数对象
            </summary>
            <param name="name">参数名称</param>
            <param name="valu">参数值</param>
            <param name="type">参数类型</param>
            <param name="len">参数长度</param>
            <param name="output">是否是输出值</param>
        </member>
        <member name="M:FS.Core.Bean.DbProvider.CreateDbParam(System.String,System.Object)">
            <summary>
                创建一个数据库参数对象
            </summary>
        </member>
        <member name="P:FS.Core.Bean.DbProvider.ParamsPrefix">
            <summary>
                参数前缀
            </summary>
        </member>
        <member name="P:FS.Core.Bean.DbProvider.GetDbProviderFactory">
            <summary>
                创建提供程序对数据源类的实现的实例
            </summary>
        </member>
        <member name="T:FS.Core.Bean.MySqlProvider">
            <summary>
                MySql数据库提供者
            </summary>
        </member>
        <member name="M:FS.Core.Bean.MySqlProvider.CreateTableAegis(System.String)">
            <summary>
            获取MySql保护符
            </summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="P:FS.Core.Bean.MySqlProvider.GetDbProviderFactory">
            <summary>
            获取MySql数据库提供者
            </summary>
        </member>
        <member name="T:FS.Core.Bean.OleDbProvider">
            <summary>
                OleDb数据库提供者
            </summary>
        </member>
        <member name="P:FS.Core.Bean.OleDbProvider.GetDbProviderFactory">
            <summary>
            获取OleDb数据库提供者
            </summary>
        </member>
        <member name="T:FS.Core.Bean.OracleProvider">
            <summary>
                Oracle数据库提供者
            </summary>
        </member>
        <member name="M:FS.Core.Bean.OracleProvider.CreateTableAegis(System.String)">
            <summary>
            数据库保护符
            </summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Core.Bean.OracleProvider.CreateDbParam(System.String,System.Object,System.Data.DbType,System.Int32,System.Boolean)">
            <summary>
            创建参数
            </summary>
            <param name="name"></param>
            <param name="valu"></param>
            <param name="type"></param>
            <param name="len"></param>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="P:FS.Core.Bean.OracleProvider.ParamsPrefix">
            <summary>
            参数前缀
            </summary>
        </member>
        <member name="P:FS.Core.Bean.OracleProvider.GetDbProviderFactory">
            <summary>
            获取Oracle数据库提供者
            </summary>
        </member>
        <member name="T:FS.Core.Bean.SQLiteProvider">
            <summary>
                SqLite数据库提供者
            </summary>
        </member>
        <member name="P:FS.Core.Bean.SQLiteProvider.GetDbProviderFactory">
            <summary>
            获取SqLite数据库提供者
            </summary>
        </member>
        <member name="T:FS.Core.Bean.SqlServerProvider">
            <summary>
                SqlServer数据库提供者
            </summary>
        </member>
        <member name="P:FS.Core.Bean.SqlServerProvider.GetDbProviderFactory">
            <summary>
            获取SqlServer数据库提供者
            </summary>
        </member>
        <member name="T:FS.Core.Bean.DbVisit`1">
            <summary>
                数据库表达式树解析器
            </summary>
            <typeparam name="TInfo"></typeparam>
        </member>
        <member name="F:FS.Core.Bean.DbVisit`1.Map">
            <summary>
                实体类映射
            </summary>
        </member>
        <member name="F:FS.Core.Bean.DbVisit`1.ParamsList">
            <summary>
                参数列表
            </summary>
        </member>
        <member name="F:FS.Core.Bean.DbVisit`1.SqlList">
            <summary>
                条件堆栈
            </summary>
        </member>
        <member name="F:FS.Core.Bean.DbVisit`1.dbProvider">
            <summary>
                数据库提供者
            </summary>
        </member>
        <member name="F:FS.Core.Bean.DbVisit`1.m_ParamsCount">
            <summary>
                参数个数（标识）
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbVisit`1.Translator(System.Linq.Expressions.Expression,System.Collections.Generic.List{System.Data.Common.DbParameter}@)">
            <summary>
                解释T-SQL(Where)
            </summary>
            <param name="exp">Lambda表达式</param>
            <param name="lstParams">输出参数列表</param>
        </member>
        <member name="M:FS.Core.Bean.DbVisit`1.Translator(System.Linq.Expressions.Expression)">
            <summary>
                解释T-SQL(Select、Order)
            </summary>
            <param name="exp">Lambda表达式</param>
        </member>
        <member name="M:FS.Core.Bean.DbVisit`1.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                将二元符号转换成T-SQL可识别的操作符
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbVisit`1.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
                将属性变量的右边值，转换成T-SQL的字段值
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbVisit`1.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
                将属性变量转换成T-SQL字段名
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbVisit`1.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
                数组值
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbVisit`1.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
                值类型的转换
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbVisit`1.VisitConvert(System.Linq.Expressions.Expression)">
            <summary>
                将变量转换成值
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbVisit`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                解析方法
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbVisit`1.ClearCallSql">
            <summary>
                清除值为空的条件，并给与1!=1的SQL
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbVisit`1.SqlNot(System.String)">
            <summary>
                当存在Not 时，特殊处理
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbVisit`1.SqlTrue(System.String)">
            <summary>
                当存在true 时，特殊处理
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbVisit`1.IsCanCompile(System.Linq.Expressions.Expression)">
            <summary>
                是否允许执行转换
            </summary>
            <returns></returns>
        </member>
        <member name="T:FS.Core.Bean.MySqlVisit`1">
            <summary>
                MySql数据库持久化
            </summary>
            <typeparam name="TInfo"></typeparam>
        </member>
        <member name="M:FS.Core.Bean.MySqlVisit`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                将方法转换成T-SQL特殊函数名
            </summary>
            <param name="m">自定义特殊的函数</param>
        </member>
        <member name="T:FS.Core.Bean.OleDbVisit`1">
            <summary>
                OleDb数据库持久化
            </summary>
            <typeparam name="TInfo"></typeparam>
        </member>
        <member name="M:FS.Core.Bean.OleDbVisit`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                将方法转换成T-SQL特殊函数名
            </summary>
            <param name="m">自定义特殊的函数</param>
        </member>
        <member name="T:FS.Core.Bean.OracleVisit`1">
            <summary>
                Oracle数据库持久化
            </summary>
            <typeparam name="TInfo"></typeparam>
        </member>
        <member name="M:FS.Core.Bean.OracleVisit`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                将方法转换成T-SQL特殊函数名
            </summary>
            <param name="m">自定义特殊的函数</param>
        </member>
        <member name="T:FS.Core.Bean.SQLiteVisit`1">
            <summary>
                SqLite数据库持久化
            </summary>
            <typeparam name="TInfo"></typeparam>
        </member>
        <member name="M:FS.Core.Bean.SQLiteVisit`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                将方法转换成T-SQL特殊函数名
            </summary>
            <param name="m">自定义特殊的函数</param>
        </member>
        <member name="T:FS.Core.Bean.SqlServerVisit`1">
            <summary>
                SqlServer数据库持久化
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
        </member>
        <member name="T:FS.Core.Bean.DbBuilder`1">
            <summary>
                数据库Sql生成
            </summary>
            <typeparam name="TInfo"></typeparam>
        </member>
        <member name="F:FS.Core.Bean.DbBuilder`1.Map">
            <summary>
                实体类映射
            </summary>
        </member>
        <member name="F:FS.Core.Bean.DbBuilder`1.ParamsList">
            <summary>
                条件参数
            </summary>
        </member>
        <member name="F:FS.Core.Bean.DbBuilder`1.SelectString">
            <summary>
                字段选择Sql
            </summary>
        </member>
        <member name="F:FS.Core.Bean.DbBuilder`1.SortString">
            <summary>
                排序Sql
            </summary>
        </member>
        <member name="F:FS.Core.Bean.DbBuilder`1.WhereString">
            <summary>
                条件Sql
            </summary>
        </member>
        <member name="F:FS.Core.Bean.DbBuilder`1.dbProvider">
            <summary>
                数据库提供者
            </summary>
        </member>
        <member name="F:FS.Core.Bean.DbBuilder`1.dbVisit">
            <summary>
                数据库表达式树解析器
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbBuilder`1.#ctor(System.String)">
            <summary>
                数据库Sql生成
            </summary>
            <param name="tableName">表名称</param>
        </member>
        <member name="M:FS.Core.Bean.DbBuilder`1.GetParameter(`0)">
            <summary>
                获取该实体类的参数
            </summary>
            <param name="info">实体类</param>
        </member>
        <member name="P:FS.Core.Bean.DbBuilder`1.TableName">
            <summary>
                数据库表名
            </summary>
        </member>
        <member name="T:FS.Core.Bean.DbFactory">
            <summary>
                数据库工厂模式
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbFactory.CreateDbBuilder``1(System.String)">
            <summary>
                创建数据库Sql生成
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="tableName">表名称</param>
        </member>
        <member name="M:FS.Core.Bean.DbFactory.CreateDbVisit``1">
            <summary>
                创建数据库表达式树解析器
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
        </member>
        <member name="M:FS.Core.Bean.DbFactory.CreateDbOperate(FS.Core.Data.DataBaseType,System.String,System.String)">
            <summary>
                创建修改数据库类
            </summary>
            <param name="dbType">数据库类型</param>
            <param name="connetionString">连接字符串</param>
            <param name="tableName">要操作的表名</param>
        </member>
        <member name="M:FS.Core.Bean.DbFactory.CreateDbProvider``1">
            <summary>
                创建数据库提供者
            </summary>
        </member>
        <member name="M:FS.Core.Bean.DbFactory.CreateDbProvider(FS.Core.Data.DataBaseType)">
            <summary>
                创建数据库提供者
            </summary>
            <param name="dbType">数据库类型</param>
        </member>
        <member name="M:FS.Core.Bean.DbFactory.CreateDbExecutor``1(System.Data.IsolationLevel)">
            <summary>
                创建数据库操作
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="tranLevel">开启事务等级</param>
        </member>
        <member name="M:FS.Core.Bean.DbFactory.CreateDbExecutor(System.Int32,System.Data.IsolationLevel)">
            <summary>
                创建数据库操作
            </summary>
            <param name="dbIndex">数据库配置</param>
            <param name="tranLevel">开启事务等级</param>
        </member>
        <member name="M:FS.Core.Bean.DbFactory.CreateConnString(System.Int32)">
            <summary>
                创建数据库连接字符串
            </summary>
            <param name="dbIndex">数据库配置</param>
        </member>
        <member name="M:FS.Core.Bean.DbFactory.CreateConnString(FS.Core.Data.DataBaseType,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
                创建数据库连接字符串
            </summary>
            <param name="dataType">数据库类型</param>
            <param name="userID">账号</param>
            <param name="passWord">密码</param>
            <param name="server">服务器地址</param>
            <param name="catalog">表名</param>
            <param name="dataVer">数据库版本</param>
            <param name="connectTimeout">链接超时时间</param>
            <param name="poolMinSize">连接池最小数量</param>
            <param name="poolMaxSize">连接池最大数量</param>
            <param name="port">端口</param>
        </member>
        <member name="M:FS.Core.Bean.DbFactory.Compression(System.String,FS.Core.Data.DataBaseType)">
            <summary>
                压缩数据库
            </summary>
            <param name="dataType">数据库类型</param>
            <param name="connetionString">连接字符串</param>
        </member>
        <member name="M:FS.Core.Bean.DbFactory.Compression(System.Int32)">
            <summary>
                压缩数据库
            </summary>
            <param name="dbIndex">数据库配置</param>
        </member>
        <member name="M:FS.Core.Bean.DbFactory.GetFilePath(System.String)">
            <summary>
                获取数据库文件的路径
            </summary>
            <param name="filePath">数据库路径</param>
        </member>
        <member name="T:FS.Core.Bean.MySqlBuilder`1">
            <summary>
                MySql数据库持久化
            </summary>
            <typeparam name="TInfo"></typeparam>
        </member>
        <member name="M:FS.Core.Bean.MySqlBuilder`1.#ctor(System.String)">
            <summary>
                MySql数据库Sql生成
            </summary>
            <param name="tableName">表名称</param>
        </member>
        <member name="T:FS.Core.Bean.OleDbBuilder`1">
            <summary>
                OleDb数据库Sql生成
            </summary>
            <typeparam name="TInfo"></typeparam>
        </member>
        <member name="M:FS.Core.Bean.OleDbBuilder`1.#ctor(System.String)">
            <summary>
                OleDb数据库Sql生成
            </summary>
            <param name="tableName">表名称</param>
        </member>
        <member name="T:FS.Core.Bean.OracleBuilder`1">
            <summary>
                Oracle数据库Sql生成
            </summary>
            <typeparam name="TInfo"></typeparam>
        </member>
        <member name="M:FS.Core.Bean.OracleBuilder`1.#ctor(System.String)">
            <summary>
                Oracle数据库Sql生成
            </summary>
            <param name="tableName">表名称</param>
        </member>
        <member name="T:FS.Core.Bean.SQLiteBuilder`1">
            <summary>
                SqLite数据库Sql生成
            </summary>
            <typeparam name="TInfo"></typeparam>
        </member>
        <member name="M:FS.Core.Bean.SQLiteBuilder`1.#ctor(System.String)">
            <summary>
                SqLite数据库Sql生成
            </summary>
            <param name="tableName">表名称</param>
        </member>
        <member name="T:FS.Core.Bean.SqlServerBuilder`1">
            <summary>
                SqlServer数据库Sql生成
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
        </member>
        <member name="M:FS.Core.Bean.SqlServerBuilder`1.#ctor(System.String)">
            <summary>
                SqlServer数据库Sql生成
            </summary>
            <param name="tableName">表名称</param>
        </member>
        <member name="T:FS.Configs.DbConfigs">
            <summary>
                全局
            </summary>
        </member>
        <member name="T:FS.Configs.DbConfig">
            <summary>
                默认数据库路径
            </summary>
        </member>
        <member name="F:FS.Configs.DbConfig.DbList">
            <summary>
                数据库连接列表，从/App_Data/Db.Configs读取回来
            </summary>
        </member>
        <member name="T:FS.Configs.DbInfo">
            <summary>
                数据库连接配置
            </summary>
        </member>
        <member name="M:FS.Configs.DbInfo.op_Implicit(System.Int32)~FS.Configs.DbInfo">
            <summary>
                通过索引返回实体
            </summary>
        </member>
        <member name="P:FS.Configs.DbInfo.Server">
            <summary>
                数据库连接串
            </summary>
        </member>
        <member name="P:FS.Configs.DbInfo.UserID">
            <summary>
                数据库帐号
            </summary>
        </member>
        <member name="P:FS.Configs.DbInfo.PassWord">
            <summary>
                数据库密码
            </summary>
        </member>
        <member name="P:FS.Configs.DbInfo.Port">
            <summary>
                端口号
            </summary>
        </member>
        <member name="P:FS.Configs.DbInfo.SID">
            <summary>
                Oracle SID
            </summary>
        </member>
        <member name="P:FS.Configs.DbInfo.DataType">
            <summary>
                数据库类型
            </summary>
        </member>
        <member name="P:FS.Configs.DbInfo.DataVer">
            <summary>
                数据库版本
            </summary>
        </member>
        <member name="P:FS.Configs.DbInfo.Catalog">
            <summary>
                数据库目录
            </summary>
        </member>
        <member name="P:FS.Configs.DbInfo.TablePrefix">
            <summary>
                数据库表前缀
            </summary>
        </member>
        <member name="P:FS.Configs.DbInfo.PoolMinSize">
            <summary>
                最小连接池
            </summary>
        </member>
        <member name="P:FS.Configs.DbInfo.PoolMaxSize">
            <summary>
                最大连接池
            </summary>
        </member>
        <member name="P:FS.Configs.DbInfo.ConnectTimeout">
            <summary>
                数据库连接时间限制，单位秒
            </summary>
        </member>
        <member name="P:FS.Configs.DbInfo.CommandTimeout">
            <summary>
                数据库执行时间限制，单位秒
            </summary>
        </member>
        <member name="T:FS.Configs.EmailConfigs">
            <summary>
                全局
            </summary>
        </member>
        <member name="T:FS.Configs.EmailConfig">
            <summary>
                Email配置信息类
            </summary>
        </member>
        <member name="F:FS.Configs.EmailConfig.EmailList">
            <summary>
                Email配置,从/App_Data/Db.Configs读取回来
            </summary>
        </member>
        <member name="T:FS.Configs.EmailInfo">
            <summary>
                E-mail配置
            </summary>
        </member>
        <member name="F:FS.Configs.EmailInfo.IsHtml">
            <summary>
                是否Html邮件
            </summary>
        </member>
        <member name="F:FS.Configs.EmailInfo.LoginName">
            <summary>
                登陆用户名
            </summary>
        </member>
        <member name="F:FS.Configs.EmailInfo.LoginPwd">
            <summary>
                登陆密码
            </summary>
        </member>
        <member name="F:FS.Configs.EmailInfo.RecipientMaxNum">
            <summary>
                最多收件人数量
            </summary>
        </member>
        <member name="F:FS.Configs.EmailInfo.SendMail">
            <summary>
                发件人E-Mail地址
            </summary>
        </member>
        <member name="F:FS.Configs.EmailInfo.SendUserName">
            <summary>
                发件人姓名
            </summary>
        </member>
        <member name="F:FS.Configs.EmailInfo.SmtpPort">
            <summary>
                端口号
            </summary>
        </member>
        <member name="F:FS.Configs.EmailInfo.SmtpServer">
            <summary>
                邮件服务器域名和验证信息
                形如：Smtp.server.com"
            </summary>
        </member>
        <member name="M:FS.Configs.EmailInfo.op_Implicit(System.Int32)~FS.Configs.EmailInfo">
            <summary>
                通过索引返回实体
            </summary>
        </member>
        <member name="T:FS.Configs.GeneralConfigs">
            <summary>
                全局
            </summary>
        </member>
        <member name="T:FS.Configs.GeneralConfig">
            <summary>
                网站基本设置描述类, 加[Serializable]标记为可序列化
            </summary>
        </member>
        <member name="F:FS.Configs.GeneralConfig.CookiesDomain">
            <summary>
                Cookies域，不填，则自动当前域
            </summary>
        </member>
        <member name="F:FS.Configs.GeneralConfig.DeBug">
            <summary>
                是否调试
            </summary>
        </member>
        <member name="F:FS.Configs.GeneralConfig.RewriterDomain">
            <summary>
                重写域名替换(多个用;分隔)
            </summary>
        </member>
        <member name="F:FS.Configs.GeneralConfig.IgnoreLogin">
            <summary>
                忽略登陆判断地址(多个用;分隔)
            </summary>
        </member>
        <member name="F:FS.Configs.GeneralConfig.UploadDirectory">
            <summary>
                上传文件的目录
            </summary>
        </member>
        <member name="F:FS.Configs.GeneralConfig.WebTitle">
            <summary>
                网站标题
            </summary>
        </member>
        <member name="T:FS.Configs.RewriterConfigs">
            <summary>
                全局
            </summary>
        </member>
        <member name="T:FS.Configs.RewriterConfig">
            <summary>
                重写地址规则
            </summary>
        </member>
        <member name="F:FS.Configs.RewriterConfig.Rules">
            <summary>
                重写地址规则列表
            </summary>
        </member>
        <member name="T:FS.Configs.RewriterRule">
            <summary>
                重写地址规则
            </summary>
        </member>
        <member name="M:FS.Configs.RewriterRule.op_Implicit(System.Int32)~FS.Configs.RewriterRule">
            <summary>
                通过索引返回实体
            </summary>
        </member>
        <member name="P:FS.Configs.RewriterRule.LookFor">
            <summary>
                请求地址
            </summary>
        </member>
        <member name="P:FS.Configs.RewriterRule.SendTo">
            <summary>
                重写地址
            </summary>
        </member>
        <member name="T:FS.Configs.SystemConfigs">
            <summary>
                系统配置
            </summary>
        </member>
        <member name="T:FS.Configs.SystemConfig">
            <summary>
                配置文件
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.Cache_Db_TimeOut">
            <summary>
                缓存逻辑超时时间(分钟)
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.Cache_List_TimeOut">
            <summary>
                缓存片断超时时间(分钟)
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.Cookies_Admin_VerifyCode">
            <summary>
                管理员登陆验证码的
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.Cookies_Prefix">
            <summary>
                Cookies前缀
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.Cookies_TimeOut">
            <summary>
                Cookies超时时间(分钟)
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.Cookies_User_Name">
            <summary>
                用户名
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.Cookies_User_VerifyCode">
            <summary>
                用户登陆验证码的
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.Cookies_User_Role">
            <summary>
                会员类型
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.Cookies_CallBack_Url">
            <summary>
            记住最后访问地址
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.IsWriteDbLog">
            <summary>
                开启记录数据库执行过程
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.Session_Admin">
            <summary>
                管理员ID的Cookies
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.Session_User">
            <summary>
                管理员ID的Cookies
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.Session_User_ID">
            <summary>
                用户ID
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.Session_Prefix">
            <summary>
                Session前缀
            </summary>
        </member>
        <member name="F:FS.Configs.SystemConfig.Session_TimeOut">
            <summary>
                Session超时时间(分钟)
            </summary>
        </member>
        <member name="T:FS.Core.Data.DbExecutor">
            <summary>
                数据库操作
            </summary>
        </member>
        <member name="F:FS.Core.Data.DbExecutor.CommandTimeout">
            <summary>
                数据库执行时间，单位秒
            </summary>
        </member>
        <member name="F:FS.Core.Data.DbExecutor.ConnectionString">
            <summary>
                连接字符串
            </summary>
        </member>
        <member name="F:FS.Core.Data.DbExecutor.DataType">
            <summary>
                数据类型
            </summary>
        </member>
        <member name="F:FS.Core.Data.DbExecutor.Factory">
            <summary>
                数据提供者
            </summary>
        </member>
        <member name="F:FS.Core.Data.DbExecutor.IsTransaction">
            <summary>
                是否开启事务
            </summary>
        </member>
        <member name="F:FS.Core.Data.DbExecutor.comm">
            <summary>
                Sql执行对象
            </summary>
        </member>
        <member name="F:FS.Core.Data.DbExecutor.conn">
            <summary>
                数据库连接对象
            </summary>
        </member>
        <member name="M:FS.Core.Data.DbExecutor.#ctor(FS.Core.Data.DataBaseType,System.String,System.Int32,System.Data.IsolationLevel)">
            <summary>
                构造函数
            </summary>
            <param name="dbType">数据库类型</param>
            <param name="connnection">数据库连接字符串</param>
            <param name="commandTimeout">数据库执行时间，单位秒</param>
            <param name="tranLevel">开启事务等级</param>
        </member>
        <member name="M:FS.Core.Data.DbExecutor.Dispose">
            <summary>
                注销
            </summary>
        </member>
        <member name="M:FS.Core.Data.DbExecutor.op_Implicit(System.Type)~FS.Core.Data.DbExecutor">
            <summary>
                给定类型，返回DbExecutor
            </summary>
            <param name="type">实体类型</param>
        </member>
        <member name="M:FS.Core.Data.DbExecutor.OpenTran(System.Data.IsolationLevel)">
            <summary>
                开启事务。
            </summary>
            <param name="tranLevel">事务方式</param>
        </member>
        <member name="M:FS.Core.Data.DbExecutor.Open">
            <summary>
                打开数据库连接
            </summary>
        </member>
        <member name="M:FS.Core.Data.DbExecutor.Close(System.Boolean)">
            <summary>
                关闭数据库连接
            </summary>
        </member>
        <member name="M:FS.Core.Data.DbExecutor.Commit">
            <summary>
                提交事务
                如果未开启事务则会引发异常
            </summary>
        </member>
        <member name="M:FS.Core.Data.DbExecutor.AddParms(System.Data.Common.DbParameterCollection,System.Data.Common.DbParameter[])">
            <summary>
                添加参数
            </summary>
            <param name="parameters">SqlParameterCollection的参数对象</param>
            <param name="parmsCollection">参数值</param>
        </member>
        <member name="M:FS.Core.Data.DbExecutor.ExecuteScalar(System.Data.CommandType,System.String,System.Data.Common.DbParameter[])">
            <summary>
                返回第一行第一列数据
            </summary>
            <param name="cmdType">执行方式</param>
            <param name="cmdText">SQL或者存储过程名称</param>
            <param name="parameters">参数</param>
        </member>
        <member name="M:FS.Core.Data.DbExecutor.ExecuteNonQuery(System.Data.CommandType,System.String,System.Data.Common.DbParameter[])">
            <summary>
                返回受影响的行数
            </summary>
            <param name="cmdType">执行方式</param>
            <param name="cmdText">SQL或者存储过程名称</param>
            <param name="parameters">参数</param>
        </member>
        <member name="M:FS.Core.Data.DbExecutor.GetReader(System.Data.CommandType,System.String,System.Data.Common.DbParameter[])">
            <summary>
                返回数据(IDataReader)
            </summary>
            <param name="cmdType">执行方式</param>
            <param name="cmdText">SQL或者存储过程名称</param>
            <param name="parameters">参数</param>
        </member>
        <member name="M:FS.Core.Data.DbExecutor.GetDataSet(System.Data.CommandType,System.String,System.Data.Common.DbParameter[])">
            <summary>
                返回数据(DataSet)
            </summary>
            <param name="cmdType">执行方式</param>
            <param name="cmdText">SQL或者存储过程名称</param>
            <param name="parameters">参数</param>
        </member>
        <member name="M:FS.Core.Data.DbExecutor.GetDataTable(System.Data.CommandType,System.String,System.Data.Common.DbParameter[])">
            <summary>
                返回数据(DataTable)
            </summary>
            <param name="cmdType">执行方式</param>
            <param name="cmdText">SQL或者存储过程名称</param>
            <param name="parameters">参数</param>
        </member>
        <member name="M:FS.Core.Data.DbExecutor.ExecuteSqlBulkCopy(System.String,System.Data.DataTable)">
            <summary>
            指量操作数据（仅支持Sql Server)
            </summary>
            <param name="tableName">表名</param>
            <param name="dt">数据</param>
        </member>
        <member name="T:FS.Core.Data.DataBaseType">
            <summary>
                数据库类型
            </summary>
        </member>
        <member name="F:FS.Core.Data.DataBaseType.SqlServer">
            <summary>
                SqlServer数据库
            </summary>
        </member>
        <member name="F:FS.Core.Data.DataBaseType.OleDb">
            <summary>
                Access数据库
            </summary>
        </member>
        <member name="F:FS.Core.Data.DataBaseType.MySql">
            <summary>
                MySql数据库
            </summary>
        </member>
        <member name="F:FS.Core.Data.DataBaseType.Xml">
            <summary>
                Xml
            </summary>
        </member>
        <member name="F:FS.Core.Data.DataBaseType.SQLite">
            <summary>
                SQLite
            </summary>
        </member>
        <member name="F:FS.Core.Data.DataBaseType.Oracle">
            <summary>
                Oracle
            </summary>
        </member>
        <member name="T:FS.Core.Data.FieldType">
            <summary>
                字段类型
            </summary>
        </member>
        <member name="F:FS.Core.Data.FieldType.Int">
            <summary>
                整型
            </summary>
        </member>
        <member name="F:FS.Core.Data.FieldType.Bit">
            <summary>
                布尔型
            </summary>
        </member>
        <member name="F:FS.Core.Data.FieldType.Varchar">
            <summary>
                可变字符串
            </summary>
        </member>
        <member name="F:FS.Core.Data.FieldType.Nvarchar">
            <summary>
                可变字符串（双字节）
            </summary>
        </member>
        <member name="F:FS.Core.Data.FieldType.Char">
            <summary>
                不可变字符串
            </summary>
        </member>
        <member name="F:FS.Core.Data.FieldType.NChar">
            <summary>
                不可变字符串（双字节）
            </summary>
        </member>
        <member name="F:FS.Core.Data.FieldType.Text">
            <summary>
                不可变文本
            </summary>
        </member>
        <member name="F:FS.Core.Data.FieldType.Ntext">
            <summary>
                不可变文本
            </summary>
        </member>
        <member name="F:FS.Core.Data.FieldType.DateTime">
            <summary>
                日期
            </summary>
        </member>
        <member name="F:FS.Core.Data.FieldType.Smallint">
            <summary>
                短整型
            </summary>
        </member>
        <member name="F:FS.Core.Data.FieldType.Float">
            <summary>
                浮点
            </summary>
        </member>
        <member name="M:FS.Core.Data.XmlExecutor.Load">
            <summary>
                读取XML文档(直接读取xml文档)
                路径不存，或者返回Null时，会自动创建xml
            </summary>
        </member>
        <member name="M:FS.Core.Data.XmlExecutor.Create">
            <summary>
                创建XML文件
            </summary>
        </member>
        <member name="T:FS.Extend.BoolExtend">
            <summary>
                Bool扩展工具
            </summary>
        </member>
        <member name="M:FS.Extend.BoolExtend.IsTrue``1(System.Boolean,``0)">
            <summary>
                结果为True时，输出参数
            </summary>
            <param name="b">判断源结果</param>
            <param name="t">输出值</param>
        </member>
        <member name="M:FS.Extend.BoolExtend.IsTrue``1(System.Nullable{System.Boolean},``0)">
            <summary>
                结果为True时，输出参数
            </summary>
            <param name="b">判断源结果</param>
            <param name="t">输出值</param>
        </member>
        <member name="M:FS.Extend.BoolExtend.IsFalse``1(System.Boolean,``0)">
            <summary>
                结果为False时，输出参数
            </summary>
            <param name="b">判断源结果</param>
            <param name="t">输出值</param>
        </member>
        <member name="M:FS.Extend.BoolExtend.IsFalse``1(System.Nullable{System.Boolean},``0)">
            <summary>
                结果为False时，输出参数
            </summary>
            <param name="b">判断源结果</param>
            <param name="t">输出值</param>
        </member>
        <member name="M:FS.Extend.BoolExtend.GetName(System.Boolean,System.String,System.String)">
            <summary>
            获取中文
            </summary>
            <param name="b"></param>
            <param name="strTrue">为True时的中文：是</param>
            <param name="strFalse">为False时的中文：否</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.BoolExtend.GetName(System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            获取中文
            </summary>
            <param name="b"></param>
            <param name="strTrue">为True时的中文：是</param>
            <param name="strFalse">为False时的中文：否</param>
            <returns></returns>
        </member>
        <member name="T:FS.Extend.IDataReaderExtend">
            <summary>
                Data扩展工具
            </summary>
        </member>
        <member name="M:FS.Extend.IDataReaderExtend.ToList``1(System.Data.IDataReader)">
            <summary>
                IDataReader转换为实体类
            </summary>
            <param name="reader">源IDataReader</param>
            <typeparam name="T">实体类</typeparam>
        </member>
        <member name="M:FS.Extend.IDataReaderExtend.ToInfo``1(System.Data.IDataReader)">
            <summary>
                数据填充
            </summary>
            <param name="reader">源IDataReader</param>
            <typeparam name="T">实体类</typeparam>
        </member>
        <member name="M:FS.Extend.IDataReaderExtend.HaveName(System.Data.IDataReader,System.String)">
            <summary>
                判断IDataReader是否存在某列
            </summary>
            <param name="reader"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:FS.Extend.ListExtend">
            <summary>
                Cate扩展工具
            </summary>
            <summary>
                Data扩展工具
            </summary>
            <summary>
                Data扩展工具
            </summary>
            <summary>
                Data扩展工具
            </summary>
            <summary>
                Data扩展工具
            </summary>
        </member>
        <member name="M:FS.Extend.ListExtend.GetSubIDList``1(System.Collections.Generic.List{``0},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
                获取指定ParentID的ID列表
            </summary>
            <param name="isContainsSub">是否获取子节点</param>
            <param name="ID">上级ID</param>
            <param name="isAddMySelf">是否添加自己</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetSubIDList``1(System.Collections.Generic.List{``0},System.String,System.Boolean,System.Boolean)">
            <summary>
                获取指定ParentID的ID列表
            </summary>
            <param name="caption">分类标题</param>
            <param name="isContainsSub">是否获取子节点</param>
            <param name="isAddMySelf">是否添加自己</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetSubList``1(System.Collections.Generic.List{``0},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
                获取指定ParentID的ID列表
            </summary>
            <param name="ID">上级ID</param>
            <param name="isContainsSub">是否获取子节点</param>
            <param name="isAddMySelf">是否添加自己</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetSubList``1(System.Collections.Generic.List{``0},System.String,System.Boolean,System.Boolean)">
            <summary>
                获取指定ParentID的ID列表
            </summary>
            <param name="caption">分类标题</param>
            <param name="isContainsSub">是否获取子节点</param>
            <param name="isAddMySelf">是否添加自己</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetID``1(System.Collections.Generic.List{``0},System.String,System.Boolean)">
            <summary>
                通过标题，获取分类数据
            </summary>
            <param name="caption">分类标题</param>
            <param name="isNullAdd">true:不存在则自动创建</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetInfo``1(System.Collections.Generic.List{``0},System.String,System.Boolean)">
            <summary>
                通过标题，获取分类数据
            </summary>
            <param name="caption">分类标题</param>
            <param name="isNullAdd">true:不存在则自动创建</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetFirstID``1(System.Collections.Generic.List{``0},System.Nullable{System.Int32})">
            <summary>
                获取根节点分类数据
            </summary>
            <param name="ID">当前分类数据ID</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetFirstInfo``1(System.Collections.Generic.List{``0},System.Nullable{System.Int32})">
            <summary>
                获取根节点分类数据
            </summary>
            <param name="ID">当前分类数据ID</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetFirstID``1(System.Collections.Generic.List{``0},System.String)">
            <summary>
                获取根节点分类数据
            </summary>
            <param name="caption">分类标题</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetFirstInfo``1(System.Collections.Generic.List{``0},System.String)">
            <summary>
                获取根节点分类数据
            </summary>
            <param name="caption">分类标题</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetParentID``1(System.Collections.Generic.List{``0},System.Nullable{System.Int32})">
            <summary>
                获取上一级分类数据
            </summary>
            <param name="ID">当前分类数据ID</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetParentInfo``1(System.Collections.Generic.List{``0},System.Nullable{System.Int32})">
            <summary>
                获取上一级分类数据
            </summary>
            <param name="ID">当前分类数据ID</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetParentID``1(System.Collections.Generic.List{``0},System.String)">
            <summary>
                获取上一级分类数据
            </summary>
            <param name="caption">分类标题</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetParentInfo``1(System.Collections.Generic.List{``0},System.String)">
            <summary>
                获取上一级分类数据
            </summary>
            <param name="caption">分类标题</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetParentIDList``1(System.Collections.Generic.List{``0},System.Nullable{System.Int32},System.Boolean)">
            <summary>
                获取所有上级分类数据（从第一级往下排序）
            </summary>
            <param name="ID">当前分类数据ID</param>
            <param name="isAddMySelf">是否添加自己</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetParentList``1(System.Collections.Generic.List{``0},System.Nullable{System.Int32},System.Boolean)">
            <summary>
                获取所有上级分类数据（从第一级往下排序）
            </summary>
            <param name="ID">当前分类数据ID</param>
            <param name="isAddMySelf">是否添加自己</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetParentIDList``1(System.Collections.Generic.List{``0},System.String,System.Boolean)">
            <summary>
                获取所有上级分类数据（从第一级往下排序）
            </summary>
            <param name="caption">分类标题</param>
            <param name="isAddMySelf">是否添加自己</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetParentList``1(System.Collections.Generic.List{``0},System.String,System.Boolean)">
            <summary>
                获取所有上级分类数据（从第一级往下排序）
            </summary>
            <param name="caption">分类标题</param>
            <param name="isAddMySelf">是否添加自己</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.Bind``1(System.Collections.Generic.List{``0},System.Web.UI.WebControls.DropDownList,System.Int32,System.Int32,System.Boolean)">
            <summary>
                绑定到DropDownList
            </summary>
            <param name="ddl">要绑定的ddl控件</param>
            <param name="selectedValue">默认选则值</param>
            <param name="parentID">所属上级节点</param>
            <param name="isUsePrefix">是否需要加上前缀</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.Bind``1(System.Collections.Generic.List{``0},System.Web.UI.WebControls.DropDownList,System.Int32,System.Func{``0,System.Boolean},System.Boolean,System.Boolean)">
            <summary>
                绑定到DropDownList
            </summary>
            <param name="ddl">要绑定的ddl控件</param>
            <param name="selectedValue">默认选则值</param>
            <param name="where">筛选条件</param>
            <param name="isContainsSub">筛选条件是否包含子节点</param>
            <param name="isUsePrefix">是否需要加上前缀</param>
            <param name="lstCate">分类列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.Bind``1(System.Collections.Generic.List{``0},System.Web.UI.WebControls.DropDownList,System.Int32,System.Int32,System.Func{``0,System.Boolean},System.Boolean,System.Boolean)">
            <summary>
                递归绑定
            </summary>
        </member>
        <member name="M:FS.Extend.ListExtend.Contains(System.Collections.Generic.IEnumerator{System.Int32},System.Nullable{System.Int32})">
            <summary>
                判断value是否存在于列表中
            </summary>
            <param name="lst">数据源</param>
            <param name="value">要判断的值</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.ListExtend.Split``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>
                数据分页
            </summary>
            <typeparam name="TSource">实体</typeparam>
            <param name="source">源对象</param>
            <param name="pageIndex">页码</param>
            <param name="pageSize">每页大小</param>
        </member>
        <member name="M:FS.Extend.ListExtend.Fill(System.Collections.IList,System.Int32,System.Object)">
            <summary>
                自动填充到指定数量
            </summary>
        </member>
        <member name="M:FS.Extend.ListExtend.ToTable(System.Collections.IList)">
            <summary>
                将集合类转换成DataTable
            </summary>
            <param name="list">集合</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.ListExtend.ToTable(System.Collections.IList,System.String[])">
            <summary>
                将泛型集合类转换成DataTable
            </summary>
            <param name="list">集合</param>
            <param name="propertyName">需要返回的列的列名</param>
            <returns>数据集(表)</returns>
        </member>
        <member name="M:FS.Extend.ListExtend.ToString(System.Collections.IEnumerable,System.String)">
            <summary>
                将List转换成字符串
            </summary>
            <param name="lst">要拼接的LIST</param>
            <param name="sign">分隔符</param>
        </member>
        <member name="M:FS.Extend.ListExtend.ToNextInfo``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
                获取下一条记录
            </summary>
            <param name="lst">要获取值的列表</param>
            <param name="ID">当前ID</param>
        </member>
        <member name="M:FS.Extend.ListExtend.ToPreviousInfo``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
                获取上一条记录
            </summary>
            <param name="lst">要获取值的列表</param>
            <param name="ID">当前ID</param>
        </member>
        <member name="M:FS.Extend.ListExtend.ToList``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
                对List进行分页
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="lst">List列表</param>
            <param name="pageSize">每页大小</param>
            <param name="pageIndex">索引</param>
        </member>
        <member name="M:FS.Extend.ListExtend.ToList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{System.Int32},System.Int32,System.Int32)">
            <summary>
                对List进行分页
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="lst">List列表</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
            <param name="pageSize">每页大小</param>
            <param name="pageIndex">索引</param>
        </member>
        <member name="M:FS.Extend.ListExtend.ToList``1(System.Collections.Generic.IEnumerable{``0},FS.UI.Repeater)">
            <summary>
                对List进行分页
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="lst">List列表</param>
            <param name="rpt">Repeater</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.ListExtend.ToList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{System.Int32},FS.UI.Repeater)">
            <summary>
                对List进行分页
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="lst">List列表</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
            <param name="rpt">Repeater</param>
        </member>
        <member name="M:FS.Extend.ListExtend.ToList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{System.Int32})">
            <summary>
                获取List列表
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="lst">List列表</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
        </member>
        <member name="M:FS.Extend.ListExtend.ToInfo``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
                获取Info
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="lst">List列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.ToInfo``1(System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Int32})">
            <summary>
                获取Info
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="lst">List列表</param>
            <param name="ID">条件，等同于：o=> o.ID == ID的操作</param>
        </member>
        <member name="M:FS.Extend.ListExtend.Count``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{System.Int32})">
            <summary>
                获取数量
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="lst">List列表</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
        </member>
        <member name="M:FS.Extend.ListExtend.Count``1(System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Int32})">
            <summary>
                获取数量
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="lst">List列表</param>
            <param name="ID">条件，等同于：o=> o.ID == ID 的操作</param>
        </member>
        <member name="M:FS.Extend.ListExtend.IsHaving``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
                判断是否存在记录
            </summary>
        </member>
        <member name="M:FS.Extend.ListExtend.IsHaving``1(System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Int32})">
            <summary>
                判断是否存在记录
            </summary>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
        </member>
        <member name="M:FS.Extend.ListExtend.IsHaving``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{System.Int32})">
            <summary>
                判断是否存在记录
            </summary>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
        </member>
        <member name="M:FS.Extend.ListExtend.GetValue``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},``1)">
            <summary>
                获取单个值
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="lst">List列表</param>
            <param name="select">字段选择器</param>
            <param name="defValue">默认值</param>
            <typeparam name="T">ModelInfo</typeparam>
        </member>
        <member name="M:FS.Extend.ListExtend.GetValue``2(System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Int32},System.Func{``0,``1},``1)">
            <summary>
                获取单个值
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="lst">List列表</param>
            <param name="ID">条件，等同于：o=> o.ID == ID 的操作</param>
            <param name="select">字段选择器</param>
            <param name="defValue">默认值</param>
            <typeparam name="T">ModelInfo</typeparam>
        </member>
        <member name="M:FS.Extend.ListExtend.ToSelectList``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
                字段选择器
            </summary>
            <param name="select">字段选择器</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
            <param name="lst">列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.ToSelectList``2(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,``1})">
            <summary>
                字段选择器
            </summary>
            <param name="select">字段选择器</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
            <param name="lst">列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.ToSelectList``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{System.Int32},System.Func{``0,``1})">
            <summary>
                字段选择器
            </summary>
            <param name="select">字段选择器</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
            <param name="lst">列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.ToSelectList``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{System.Int32},System.Int32,System.Func{``0,``1})">
            <summary>
                字段选择器
            </summary>
            <param name="select">字段选择器</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
            <param name="lst">列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.ToDistinctList``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
                不重复列表
            </summary>
            <param name="select">字段选择器</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
            <param name="lst">列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.ToDistinctList``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{System.Int32},System.Func{``0,``1})">
            <summary>
                不重复列表
            </summary>
            <param name="select">字段选择器</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
            <param name="lst">列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.Join``2(System.Collections.Generic.List{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{``0,System.Nullable{System.Int32}},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},``1,FS.Core.Data.DbExecutor)">
            <summary>
                关联两个实体
            </summary>
            <typeparam name="T1">主实体</typeparam>
            <typeparam name="T2">要附加关联的实体</typeparam>
            <param name="lst">主列表</param>
            <param name="JoinModule">要关联的子实体</param>
            <param name="JoinModuleSelect">要附加关联的子实体的字段筛选</param>
            <param name="JoinModuleID">主表关系字段</param>
            <param name="defJoinModule">为空时如何处理？</param>
            <param name="db">事务</param>
        </member>
        <member name="M:FS.Extend.ListExtend.Copy``1(System.Collections.Generic.List{``0})">
            <summary>
                复制一个新的List
            </summary>
        </member>
        <member name="M:FS.Extend.ListExtend.Clone``1(System.Collections.Generic.List{``0})">
            <summary>
                克隆List
            </summary>
            <typeparam name="T">要转换的类型</typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.ListExtend.GetLast``1(System.Collections.Generic.List{``0})">
            <summary>
                获取List最后一项
            </summary>
            <typeparam name="T">任何对象</typeparam>
            <param name="lst">List列表</param>
        </member>
        <member name="M:FS.Extend.ListExtend.Contains(System.Collections.Generic.List{System.Int32},System.Nullable{System.Int32})">
            <summary>
                判断value是否存在于列表中
            </summary>
            <param name="lst">数据源</param>
            <param name="value">要判断的值</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.ListExtend.Contains(System.Collections.Generic.List{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
                判断value是否存在于列表中
            </summary>
            <param name="lst">数据源</param>
            <param name="value">要判断的值</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.ListExtend.TestData``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            生成测试数据
            </summary>
            <typeparam name="TInfo">实体</typeparam>
            <param name="lst">列表</param>
            <param name="count">生成的数据</param>
        </member>
        <member name="M:FS.Extend.ListExtend.ClearRepeat(System.Collections.Generic.List{System.String})">
            <summary>
            清除重复的词语（每项中的每个字符对比）
            然后向右横移一位，按最长到最短截取匹配每一项
            </summary>
            <param name="lst"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.ListExtend.ToTable``1(System.Collections.Generic.List{``0})">
            <summary>
                将集合类转换成DataTable
            </summary>
            <param name="lst">集合</param>
            <returns></returns>
        </member>
        <member name="T:FS.Extend.DataTableExtend">
            <summary>
                DataTable扩展工具
            </summary>
        </member>
        <member name="M:FS.Extend.DataTableExtend.Sort(System.Data.DataTable,System.String)">
            <summary>
                对DataTable排序
            </summary>
            <param name="dt">要排序的表</param>
            <param name="sort">要排序的字段</param>
        </member>
        <member name="M:FS.Extend.DataTableExtend.Split(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
                对DataTable分页
            </summary>
            <param name="dt">源表</param>
            <param name="pageSize">每页显示的记录数</param>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.DataTableExtend.Reverse(System.Data.DataTable)">
            <summary>
                DataTable倒序
            </summary>
            <param name="dt">源DataTable</param>
        </member>
        <member name="M:FS.Extend.DataTableExtend.CloneData(System.Data.DataTable)">
            <summary>
                DataTable深度复制
            </summary>
            <param name="dt">要排序的表</param>
        </member>
        <member name="M:FS.Extend.DataTableExtend.ToList``1(System.Data.DataTable)">
            <summary>
                DataTable转换为实体类
            </summary>
            <param name="dt">源DataTable</param>
            <typeparam name="T">实体类</typeparam>
        </member>
        <member name="M:FS.Extend.DataTableExtend.ToList2``1(System.Data.DataTable)">
            <summary>
                DataTable转换为实体类
            </summary>
            <param name="dt">源DataTable</param>
            <typeparam name="T">实体类</typeparam>
        </member>
        <member name="T:FS.Extend.DateTimeExtend">
            <summary>
                其它扩展，夫归类的扩展
            </summary>
        </member>
        <member name="M:FS.Extend.DateTimeExtend.ToShortString(System.DateTime,System.String)">
            <summary>
                获取短日期
            </summary>
            <param name="time">时间对象</param>
            <param name="format">格式化时间格式</param>
        </member>
        <member name="M:FS.Extend.DateTimeExtend.ToShortString(System.Nullable{System.DateTime},System.String)">
            <summary>
                获取短日期
            </summary>
            <param name="time">时间对象</param>
            <param name="format">格式化时间格式</param>
        </member>
        <member name="M:FS.Extend.DateTimeExtend.ToShortDate(System.DateTime,System.Double)">
            <summary>
                获取短日期
            </summary>
            <param name="time">时间对象</param>
            <param name="addDay">添加天数</param>
        </member>
        <member name="M:FS.Extend.DateTimeExtend.ToShortDate(System.DateTime)">
            <summary>
                获取短日期
            </summary>
            <param name="time">时间对象</param>
        </member>
        <member name="M:FS.Extend.DateTimeExtend.ToShortDate(System.Nullable{System.DateTime})">
            <summary>
                获取短日期
            </summary>
            <param name="time">时间对象</param>
        </member>
        <member name="M:FS.Extend.DateTimeExtend.ToShortDate(System.Nullable{System.DateTime},System.Double)">
            <summary>
                获取短日期
            </summary>
            <param name="time">时间对象</param>
            <param name="addDay">添加天数</param>
        </member>
        <member name="M:FS.Extend.DateTimeExtend.ToLongString(System.DateTime,System.String)">
            <summary>
                获取长日期
            </summary>
            <param name="time">时间对象</param>
            <param name="format">格式化时间格式</param>
        </member>
        <member name="M:FS.Extend.DateTimeExtend.ToLongString(System.Nullable{System.DateTime},System.String)">
            <summary>
                获取长日期
            </summary>
            <param name="time">时间对象</param>
            <param name="format">格式化时间格式</param>
        </member>
        <member name="M:FS.Extend.DateTimeExtend.GetFirstDate(System.DateTime)">
            <summary>
            获取当前日期的第一天
            </summary>
            <param name="dt">时间</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.DateTimeExtend.GetLastDate(System.DateTime)">
            <summary>
                返回当前日期的最后一天
            </summary>
            <param name="dt">时间</param>
        </member>
        <member name="M:FS.Extend.DateTimeExtend.GetLastDay(System.DateTime)">
            <summary>
                返回当前日期的最后一天
            </summary>
            <param name="dt">时间</param>
        </member>
        <member name="M:FS.Extend.DateTimeExtend.GetAllDay(System.DateTime)">
            <summary>
                返回当前的所有天数
            </summary>
            <param name="dt">时间</param>
        </member>
        <member name="M:FS.Extend.DateTimeExtend.ToInt(System.DateTime)">
            <summary>
                日期转换成数字
            </summary>
            <param name="dt">时间</param>
        </member>
        <member name="T:FS.Extend.EnumExtend">
            <summary>
                其它扩展，夫归类的扩展
            </summary>
        </member>
        <member name="F:FS.Extend.EnumExtend.dicEnum">
            <summary>
                缓存列表
            </summary>
        </member>
        <member name="M:FS.Extend.EnumExtend.GetName(System.Enum)">
            <summary>
                获取枚举中文
            </summary>
            <param name="eum">枚举值</param>
        </member>
        <member name="M:FS.Extend.EnumExtend.ToDictionary(System.Type)">
            <summary>
                获取枚举列表
            </summary>
        </member>
        <member name="M:FS.Extend.EnumExtend.ToListItem(System.Type)">
            <summary>
                枚举转ListItem
            </summary>
        </member>
        <member name="M:FS.Extend.EnumExtend.ToSelectListItem(System.Type)">
            <summary>
                枚举转ListItem
            </summary>
        </member>
        <member name="T:FS.Extend.ExpressionExtend">
            <summary>
                Expression表达式树扩展
            </summary>
        </member>
        <member name="M:FS.Extend.ExpressionExtend.AndAlso``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
                And 操作
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="left">左树</param>
            <param name="right">右树</param>
        </member>
        <member name="M:FS.Extend.ExpressionExtend.OrElse``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
                OR 操作
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <param name="left">左树</param>
            <param name="right">右树</param>
        </member>
        <member name="M:FS.Extend.ExpressionExtend.GetUsedName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
                获取字段名称
            </summary>
            <param name="select">字段名称</param>
            <returns></returns>
        </member>
        <member name="T:FS.Extend.ExtendExtend">
            <summary>
                扩展工具
            </summary>
        </member>
        <member name="M:FS.Extend.ExtendExtend.Cookies(System.Net.WebClient)">
            <summary>
                把服務器返回的Cookies信息寫入到客戶端中
            </summary>
        </member>
        <member name="M:FS.Extend.ExtendExtend.ToList``1(System.Xml.Linq.XElement)">
            <summary>
                将XML转成实体
            </summary>
        </member>
        <member name="M:FS.Extend.ExtendExtend.ToRows(System.Data.DataRowCollection)">
            <summary>
                将DataRowCollection转成List[DataRow]
            </summary>
            <param name="drc">DataRowCollection</param>
        </member>
        <member name="M:FS.Extend.ExtendExtend.ToInfo``1(System.Data.DataRow)">
            <summary>
                将DataRow转成实体类
            </summary>
            <typeparam name="T">实体类</typeparam>
            <param name="dr">源DataRow</param>
        </member>
        <member name="M:FS.Extend.ExtendExtend.ToList``1(System.Data.DataSet)">
            <summary>
                IDataReader转换为实体类
            </summary>
            <param name="ds">源DataSet</param>
            <typeparam name="T">实体类</typeparam>
        </member>
        <member name="M:FS.Extend.ExtendExtend.GetKey``2(System.Collections.Generic.Dictionary{``0,``1},``1)">
            <summary>
                扩展 Dictionary 根据Value反向查找Key的方法
            </summary>
            <param name="list">Dictionary对象</param>
            <param name="t2">键值</param>
            <typeparam name="T1">Key</typeparam>
            <typeparam name="T2">Value</typeparam>
        </member>
        <member name="M:FS.Extend.ExtendExtend.IsExist(System.Windows.Forms.Form,System.String)">
            <summary>
                检查是否存在该类型的子窗体
            </summary>
            <param name="form">Windows窗体对象</param>
            <param name="childFormName">窗体名称</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:FS.Extend.ExtendExtend.SetCreateInfo(FS.Interface.ICreateInfo,System.Nullable{System.Int32},System.String)">
            <summary>
                设置创建人信息
            </summary>
            <param name="createInfo">被赋值的实体</param>
            <param name="createID">创建人ID</param>
            <param name="createName">创建人名称</param>
        </member>
        <member name="M:FS.Extend.ExtendExtend.SetUpdateInfo(FS.Interface.IUpdateInfo,System.Nullable{System.Int32},System.String)">
            <summary>
                设置修改人信息
            </summary>
            <param name="updateInfo">被赋值的实体</param>
            <param name="updateID">创建人ID</param>
            <param name="updateName">创建人名称</param>
        </member>
        <member name="M:FS.Extend.ExtendExtend.SetAuditInfo(FS.Interface.IAuditInfo,System.Nullable{System.Int32},System.String)">
            <summary>
                设置审核人信息
            </summary>
            <param name="auditInfo">被赋值的实体</param>
            <param name="auditID">创建人ID</param>
            <param name="auditName">创建人名称</param>
        </member>
        <member name="M:FS.Extend.ExtendExtend.ToPredicate``1(System.Func{``0,System.Boolean})">
            <summary>
                Func 转换成 Predicate 对象
            </summary>
            <typeparam name="T">实体类</typeparam>
            <param name="source">源Func对象</param>
        </member>
        <!-- 对于成员“M:FS.Extend.ExtendExtend.ToJson``2(System.Collections.Generic.Dictionary{``0,``1})”忽略有格式错误的 XML 注释 -->
        <member name="T:FS.Extend.ModelExtend">
            <summary>
                实体类扩展方法
            </summary>
        </member>
        <member name="M:FS.Extend.ModelExtend.Fill``1(``0,System.Web.UI.Page,System.String,System.String)">
            <summary>
                将实体类填充到控件中
            </summary>
            <param name="page">当前页</param>
            <param name="info">要填入数据的实体类</param>
            <param name="contentPlaceHolderID">母版页面版ID</param>
            <param name="prefix">控件前缀</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.Fill``1(``0,System.Web.UI.Page,System.String)">
            <summary>
                将实体类填充到控件中
            </summary>
            <param name="page">当前页</param>
            <param name="prefix">控件前缀</param>
            <param name="info">要填充的值</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.Fill``1(System.Web.UI.ControlCollection,``0,System.String)">
            <summary>
                将实体类填充到控件中
            </summary>
            <param name="controls">页面控件集合</param>
            <param name="infoValue">所属实体类的值</param>
            <param name="prefix">前缀</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.Check``1(``0,System.Action{System.String,System.String},System.String)">
            <summary>
                检测实体类值状况
            </summary>
        </member>
        <member name="M:FS.Extend.ModelExtend.Check``1(``0,System.Action{System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}})">
            <summary>
                检测实体类值状况
            </summary>
        </member>
        <member name="M:FS.Extend.ModelExtend.Check``1(``0,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}@)">
            <summary>
                检测实体类值状况
            </summary>
            <param name="dicError">返回错误消息,key：属性名称；vakue：错误消息</param>
            <param name="info">要检测的实体</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.GetValue``2(``0,System.String,``1)">
            <summary>
                查找对象属性值
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <typeparam name="T">返回值类型</typeparam>
            <param name="info">当前实体类</param>
            <param name="propertyName">属性名</param>
            <param name="defValue">默认值</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.SetValue``1(``0,System.String,System.Object)">
            <summary>
                设置对象属性值
            </summary>
            <typeparam name="TInfo">实体类</typeparam>
            <typeparam name="T">返回值类型</typeparam>
            <param name="info">当前实体类</param>
            <param name="propertyName">属性名</param>
            <param name="defValue">默认值</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.Join``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{``0,System.Nullable{System.Int32}},System.Linq.Expressions.Expression{System.Func{``1,System.Object}},``1,FS.Core.Data.DbExecutor)">
            <summary>
                关联两个实体
            </summary>
            <typeparam name="T1">主实体</typeparam>
            <typeparam name="T2">要附加关联的实体</typeparam>
            <param name="info">主数据</param>
            <param name="JoinModule">要关联的子实体</param>
            <param name="JoinModuleSelect">要附加关联的子实体的字段筛选</param>
            <param name="JoinModuleID">主表关系字段</param>
            <param name="defJoinModule">为空时如何处理？</param>
            <param name="db">事务</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.Insert``1(``0,FS.Core.Data.DbExecutor)">
            <summary>
                插入数据
            </summary>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.Insert``1(``0,System.Int32@,FS.Core.Data.DbExecutor)">
            <summary>
                插入数据
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="identity">标识，刚插入的ID</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.Update``1(``0,FS.Core.Data.DbExecutor)">
            <summary>
                更改实体类
            </summary>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.Update``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},FS.Core.Data.DbExecutor)">
            <summary>
                更新数据
            </summary>
            <param name="where">条件</param>
            <param name="db">可传入事务的db</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.Update``1(``0,System.Nullable{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                更改实体类
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="ID">条件，等同于：o=>o.ID == ID 的操作</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.Update``1(``0,System.Collections.Generic.List{System.Int32},FS.Core.Data.DbExecutor)">
            <summary>
                更改实体类
            </summary>
            <param name="db">可传入事务的db</param>
            <param name="IDs">条件，等同于：o=> IDs.Contains(o.ID) 的操作</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.Save``1(``0,System.Int32,System.Action{System.String,System.String},System.Action{``0,FS.Core.Data.DbExecutor},System.Action{``0,FS.Core.Data.DbExecutor},System.Action{System.Int32,``0,FS.Core.Data.DbExecutor})">
            <summary>
                保存数据
            </summary>
            <param name="reqID">请求ID</param>
            <param name="tip">提示</param>
            <param name="actInsert">插入时的方法委托</param>
            <param name="actUpdate">更新时的方法委托</param>
            <param name="actSuccess">成功后的方法委托</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.TestData``1(``0,System.Int32)">
            <summary>
            生成测试数据
            </summary>
            <typeparam name="TInfo">实体</typeparam>
            <param name="info">任意对象</param>
            <param name="subCount">如果成员包含List类型时，要填充的数量</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.TestData``1(``0,System.Int32,System.Int32)">
            <summary>
            生成测试数据
            </summary>
            <typeparam name="TInfo">实体</typeparam>
            <param name="subCount">如果成员包含List类型时，要填充的数量</param>
            <param name="level">防止无限层</param>
        </member>
        <member name="M:FS.Extend.ModelExtend.TestData(System.Type)">
            <summary>
            返回基本类型的数据
            </summary>
            <param name="argumType"></param>
            <returns></returns>
        </member>
        <member name="T:FS.Extend.ObjectExtend">
            <summary>
                Object扩展工具
            </summary>
        </member>
        <member name="M:FS.Extend.ObjectExtend.ToString``1(``0[],System.String,System.Func{``0,System.String})">
            <summary>
                将任何数组转换成用符号连接的字符串
            </summary>
            <param name="obj">任何对象</param>
            <param name="func">传入要在转换过程中要执行的方法</param>
            <param name="sign">分隔符</param>
            <typeparam name="T">基本对象</typeparam>
        </member>
        <member name="M:FS.Extend.ObjectExtend.ConvertType``1(System.Object,``0)">
            <summary>
                将对象转换为T类型
            </summary>
            <param name="sourceValue">要转换的源对象</param>
            <param name="defValue">转换失败时，代替的默认值</param>
            <typeparam name="T">基本类型</typeparam>
        </member>
        <member name="M:FS.Extend.ObjectExtend.ConvertType(System.Object,System.Type)">
            <summary>
                将值转换成类型对象的值
            </summary>
            <param name="sourceValue">要转换的值</param>
            <param name="type">要转换的对象的类型</param>
        </member>
        <member name="M:FS.Extend.ObjectExtend.ConvertType(System.Object,System.Type,System.Type)">
            <summary>
            将值转换成类型对象的值（此方法作为公共的调用，只支持单值转换)
            </summary>
            <param name="objValue">要转换的值</param>
            <param name="objType">要转换的值类型</param>
            <param name="defType">转换失败时，代替的默认值类型</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.ObjectExtend.IsType``1(System.Object)">
            <summary>
                判断是否T类型
            </summary>
            <param name="objValue">要判断的对象</param>
            <typeparam name="T">基本类型</typeparam>
        </member>
        <member name="M:FS.Extend.ObjectExtend.Split(System.String,System.String,System.Int32)">
            <summary>
            直接返回分隔后的元素项
            </summary>
            <param name="arr">要分隔的字符串</param>
            <param name="tag">分隔的标识</param>
            <param name="index">元素下标</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.ObjectExtend.Split(System.String,System.Char,System.Int32)">
            <summary>
            直接返回分隔后的元素项
            </summary>
            <param name="arr">要分隔的字符串</param>
            <param name="tag">分隔的标识</param>
            <param name="index">元素下标</param>
            <returns></returns>
        </member>
        <member name="T:FS.Extend.StringExtend">
            <summary>
                String扩展工具
            </summary>
        </member>
        <member name="M:FS.Extend.StringExtend.ClearString(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
                指定清除标签的内容
            </summary>
            <param name="str">内容</param>
            <param name="tag">标签</param>
            <param name="options">选项</param>
        </member>
        <member name="M:FS.Extend.StringExtend.ClearString(System.String[],System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
                指定清除标签的内容
            </summary>
            <param name="strs">内容</param>
            <param name="tag">标签</param>
            <param name="options">选项</param>
        </member>
        <member name="M:FS.Extend.StringExtend.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
                替换字符串
            </summary>
            <param name="str">数据源</param>
            <param name="tag">要搜索的字符串</param>
            <param name="newString">代替的数据</param>
            <param name="options">选项</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.StringExtend.ToList``1(System.String,``0,System.String)">
            <summary>
                将字符串转换成List型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="splitString">分隔符为NullOrEmpty时，则直接拆份为Char</param>
            <param name="defValue">默认值(单项转换失败时，默认值为NullOrEmpty时，则不添加，否则替换为默认值)</param>
            <typeparam name="T">基本类型</typeparam>
        </member>
        <member name="M:FS.Extend.StringExtend.ToEnumList(System.String,System.Type,System.String)">
            <summary>
                将字符串转换成List型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="splitString">分隔符为NullOrEmpty时，则直接拆份为Char</param>
            <param name="defValue">默认值(单项转换失败时，默认值为NullOrEmpty时，则不添加，否则替换为默认值)</param>
            <typeparam name="T">基本类型</typeparam>
        </member>
        <member name="M:FS.Extend.StringExtend.ToArray``1(System.String,``0,System.String)">
            <summary>
                将字符串转换成Array型
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="splitString">分隔符为NullOrEmpty时，则直接拆份为Char</param>
            <param name="defValue">默认值(单项转换失败时，默认值为NullOrEmpty时，则不添加，否则替换为默认值)</param>
            <typeparam name="T">基本类型</typeparam>
        </member>
        <member name="M:FS.Extend.StringExtend.DelEndOf(System.String,System.String)">
            <summary>
                删除指定最后的字符串
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="strChar">要删除的字符串</param>
        </member>
        <member name="M:FS.Extend.StringExtend.DelLastOf(System.String,System.String)">
            <summary>
                删除指定最后的字符串(直到找到为止)
            </summary>
            <param name="str">要转换的字符串</param>
            <param name="strChar">要删除的字符串</param>
        </member>
        <member name="M:FS.Extend.StringExtend.SubString(System.String,System.Int32,System.Int32)">
            <summary>
                从字符串的指定位置截取指定长度的子字符串
            </summary>
            <param name="str">原字符串</param>
            <param name="startIndex">子字符串的起始位置</param>
            <param name="length">子字符串的长度(负数，则获取全部)</param>
        </member>
        <member name="M:FS.Extend.StringExtend.SubString(System.String,System.String)">
            <summary>
                截取到tag字符串
            </summary>
            <param name="str">原字符串</param>
            <param name="tag">截取到的字符串</param>
        </member>
        <member name="M:FS.Extend.StringExtend.IsEquals(System.String,System.String)">
            <summary>
                比较两者是否相等，不考虑大小写,两边空格
            </summary>
            <param name="str">对比一</param>
            <param name="str2">对比二</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.StringExtend.IsHaving(System.String)">
            <summary>
                是否不为Null或者Empty
            </summary>
            <param name="str">要判断的字符串</param>
        </member>
        <member name="M:FS.Extend.StringExtend.IsNullOrEmpty(System.String)">
            <summary>
                是否为Null或者Empty或者空白字符
            </summary>
            <param name="str">要判断的字符串</param>
        </member>
        <member name="M:FS.Extend.StringExtend.IsStartsWith(System.String,System.String)">
            <summary>
                对比开头字符是否一致
            </summary>
            <param name="str">原字符串</param>
            <param name="value">要对比的字符串</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.StringExtend.IsEndsWith(System.String,System.String)">
            <summary>
                对比开头字符是否一致
            </summary>
            <param name="str">原字符串</param>
            <param name="value">要对比的字符串</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.StringExtend.GetJson``2(System.String)">
            <summary>
            获取json
            </summary>
            <param name="json">json字符串</param>
        </member>
        <member name="M:FS.Extend.StringExtend.GetJsonValue(System.String,System.Object)">
            <summary>
                获取json值
            </summary>
            <param name="json">json字符串</param>
            <param name="key">对应的键值</param>
        </member>
        <member name="M:FS.Extend.StringExtend.GetJsonValue``1(System.String,System.Object,``0)">
            <summary>
                获取json值
            </summary>
            <param name="json">json字符串</param>
            <param name="key">对应的键值</param>
            <param name="defValue">默认值</param>
        </member>
        <member name="M:FS.Extend.StringExtend.GetJsonKey(System.String,System.Object)">
            <summary>
                获取json Key
            </summary>
            <param name="json">json字符串</param>
            <param name="value">对应的键值</param>
        </member>
        <member name="M:FS.Extend.StringExtend.GetJsonKey``1(System.String,System.Object,``0)">
            <summary>
                获取json Key
            </summary>
            <param name="json">json字符串</param>
            <param name="value">对应的值</param>
            <param name="defValue">默认值</param>
        </member>
        <member name="M:FS.Extend.StringExtend.SetJsonValue(System.String,System.Object,System.Object)">
            <summary>
                获取json值
            </summary>
            <param name="json">json字符串</param>
            <param name="key">对应的键值</param>
            <param name="value">值</param>
        </member>
        <member name="M:FS.Extend.StringExtend.Split(System.String,System.String)">
            <summary>
                分隔字符串
            </summary>
            <param name="str">字符串</param>
            <param name="splitString">分隔符号</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.StringExtend.IsContains(System.String,System.String)">
            <summary>
                是否包括str2字段串
            </summary>
            <param name="str">源字符串</param>
            <param name="str2">要包括的字符串</param>
        </member>
        <member name="M:FS.Extend.StringExtend.Len(System.String)">
            <summary>
                返回字符串的长度（用于SQL的比较）
            </summary>
            <param name="str">要比较的字段值</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.StringExtend.CutTrim(System.String,System.Int32,System.Int32)">
            <summary>
            去除前后字符串
            </summary>
            <param name="source">要去除的字符源</param>
            <param name="leftIndex">开始位置</param>
            <param name="rightIndex">结束位置</param>
        </member>
        <member name="M:FS.Extend.StringExtend.CutTrim(System.String,System.Int32,System.String)">
            <summary>
            去除前后字符串
            </summary>
            <param name="source">要去除的字符源</param>
            <param name="leftIndex">开始位置</param>
            <param name="rightStr">结束位置字符串</param>
        </member>
        <member name="M:FS.Extend.StringExtend.CutTrim(System.String,System.String,System.String)">
            <summary>
            去除前后字符串
            </summary>
            <param name="source">要去除的字符源</param>
            <param name="leftStr">开始位置字符串</param>
            <param name="rightStr">结束位置字符串</param>
        </member>
        <member name="M:FS.Extend.StringExtend.CutTrim(System.String,System.String,System.Int32)">
            <summary>
            去除前后字符串
            </summary>
            <param name="source">要去除的字符源</param>
            <param name="leftStr">开始位置字符串</param>
            <param name="rightIndex">结束位置</param>
        </member>
        <member name="M:FS.Extend.StringExtend.CutString(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
                截取字符串长，超过指定长度，用tag代替。
                一个汉字，长度为2
            </summary>
            <param name="source">要截取的字符串</param>
            <param name="length">截取长度(一个汉字，长度为2)</param>
            <param name="tag">超出长度时显示的字符</param>
            <param name="isAlwaysShowTag">如果没有超出，是否也显示</param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.StringExtend.WhileNullOrEmpty(System.String,System.String)">
            <summary>
                当NullOrEmpty，用新的字符串代替，否则用原来的。
            </summary>
            <param name="str">要检测的值</param>
            <param name="newString">要替换的新字符串</param>
        </member>
        <member name="M:FS.Extend.StringExtend.WhileNotNullOrEmpty(System.String,System.String)">
            <summary>
                当不为NullOrEmpty，用新的字符串代替，否则用原来的。
            </summary>
            <param name="str">要检测的值</param>
            <param name="newString">要替换的新字符串</param>
        </member>
        <member name="M:FS.Extend.StringExtend.Contains(System.String,System.Nullable{System.Int32})">
            <summary>
            判断ID是否存在于str
            </summary>
            <param name="str"></param>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Extend.StringExtend.For(System.String,System.Int32)">
            <summary>
            迭代字符
            </summary>
            <param name="str">要迭代的字符串</param>
            <param name="count">次数</param>
        </member>
        <member name="T:FS.Extend.StructExtend">
            <summary>
                数字类型扩展工具
            </summary>
        </member>
        <member name="M:FS.Extend.StructExtend.Format(System.Int32,System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:FS.Extend.StructExtend.Format(System.Nullable{System.Int32},System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:FS.Extend.StructExtend.Format(System.UInt32,System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:FS.Extend.StructExtend.Format(System.Nullable{System.UInt32},System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:FS.Extend.StructExtend.Format(System.Decimal,System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:FS.Extend.StructExtend.Format(System.Nullable{System.Decimal},System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:FS.Extend.StructExtend.Format(System.Double,System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:FS.Extend.StructExtend.Format(System.Nullable{System.Double},System.Boolean,System.Int32)">
            <summary>
                数字格式化,将转换成1000,10
            </summary>
        </member>
        <member name="M:FS.Extend.StructExtend.IsNullOrEmpty``1(System.Nullable{``0},System.String)">
            <summary>
                当NullOrEmpty，用新的字符串代替，否则用原来的。
            </summary>
            <param name="obj">要检测的值</param>
            <param name="newString">要替换的新字符串</param>
        </member>
        <member name="M:FS.Extend.StructExtend.IsNotNullOrEmpty``1(System.Nullable{``0},System.String)">
            <summary>
                当不为NullOrEmpty，用新的字符串代替，否则用原来的。
            </summary>
            <param name="obj">要检测的值</param>
            <param name="newString">要替换的新字符串</param>
        </member>
        <member name="T:FS.Mapping.Table.DBAttribute">
            <summary>
                实体类的属性标记
            </summary>
        </member>
        <member name="M:FS.Mapping.Table.DBAttribute.#ctor">
            <summary>
                默认为MSSqlServer 2005、第一个数据库配置
            </summary>
        </member>
        <member name="P:FS.Mapping.Table.DBAttribute.Name">
            <summary>
                表名
            </summary>
        </member>
        <member name="P:FS.Mapping.Table.DBAttribute.DbIndex">
            <summary>
                设置数据库连接配置(Dbconfig)的索引项
            </summary>
        </member>
        <member name="P:FS.Mapping.Table.DBAttribute.ConnStr">
            <summary>
                设置数据库连接字符串
            </summary>
        </member>
        <member name="P:FS.Mapping.Table.DBAttribute.DataType">
            <summary>
                设置数据库类型
            </summary>
        </member>
        <member name="P:FS.Mapping.Table.DBAttribute.DataVer">
            <summary>
                设置数据库版本
            </summary>
        </member>
        <member name="P:FS.Mapping.Table.DBAttribute.CommandTimeout">
            <summary>
                设置数据库执行T-SQL时间，单位秒默认是30秒
            </summary>
        </member>
        <member name="T:FS.Mapping.Table.FieldMapState">
            <summary>
            保存字段映射的信息
            </summary>
        </member>
        <member name="P:FS.Mapping.Table.FieldMapState.DataType">
            <summary>
                数据类型
            </summary>
        </member>
        <member name="P:FS.Mapping.Table.FieldMapState.Column">
            <summary>
                字段映射
            </summary>
        </member>
        <member name="P:FS.Mapping.Table.FieldMapState.IsDbField">
            <summary>
                是否为ORM属性
            </summary>
        </member>
        <member name="P:FS.Mapping.Table.FieldMapState.PropertyExtend">
            <summary>
                扩展类型
            </summary>
        </member>
        <member name="T:FS.Mapping.Table.NotJoinAttribute">
            <summary>
                设置为非字段映射
            </summary>
        </member>
        <member name="T:FS.Mapping.Table.PropertyExtendAttribute">
            <summary>
                设置变量的扩展属性
            </summary>
        </member>
        <member name="M:FS.Mapping.Table.PropertyExtendAttribute.#ctor(FS.Mapping.Table.eumPropertyExtend)">
            <summary>
                设置变量的扩展属性
            </summary>
        </member>
        <member name="P:FS.Mapping.Table.PropertyExtendAttribute.PropertyExtend">
            <summary>
                设置变量的扩展属性
            </summary>
        </member>
        <member name="T:FS.Mapping.Table.eumPropertyExtend">
            <summary>
                属性类型，自定义扩展属性
            </summary>
        </member>
        <member name="F:FS.Mapping.Table.eumPropertyExtend.Attribute">
            <summary>
                Xml属性
            </summary>
        </member>
        <member name="F:FS.Mapping.Table.eumPropertyExtend.Element">
            <summary>
                Xml节点
            </summary>
        </member>
        <member name="T:FS.Mapping.Table.TableMap">
            <summary>
                ORM 映射关系
            </summary>
        </member>
        <member name="F:FS.Mapping.Table.TableMap.ModelList">
            <summary>
                获取所有属性
            </summary>
        </member>
        <member name="M:FS.Mapping.Table.TableMap.#ctor(System.Type)">
            <summary>
                关系映射
            </summary>
            <param name="type">实体类Type</param>
        </member>
        <member name="M:FS.Mapping.Table.TableMap.op_Implicit(System.Type)~FS.Mapping.Table.TableMap">
            <summary>
                通过实体类型，返回Mapping
            </summary>
        </member>
        <member name="M:FS.Mapping.Table.TableMap.GetModelInfo(System.String)">
            <summary>
                获取当前属性（通过使用的fieldName）
            </summary>
            <param name="fieldName">属性名称</param>
        </member>
        <member name="M:FS.Mapping.Table.TableMap.GetFieldName(System.Reflection.PropertyInfo)">
            <summary>
                获取标注的名称
            </summary>
            <param name="propertyInfo">属性变量</param>
            <returns></returns>
        </member>
        <member name="P:FS.Mapping.Table.TableMap.ClassInfo">
            <summary>
                类属性
            </summary>
        </member>
        <member name="P:FS.Mapping.Table.TableMap.IndexName">
            <summary>
                自增ID
            </summary>
        </member>
        <member name="P:FS.Mapping.Table.TableMap.Type">
            <summary>
                类型
            </summary>
        </member>
        <member name="T:FS.Mapping.Table.TableMapCache">
            <summary>
                缓存数据库和实体类的映射关系
            </summary>
        </member>
        <member name="F:FS.Mapping.Table.TableMapCache.MapList">
            <summary>
                缓存所有实体类
            </summary>
        </member>
        <member name="M:FS.Mapping.Table.TableMapCache.GetMap``1(``0)">
            <summary>
                返回实体类映射的信息
            </summary>
            <param name="info">ModelInfo实体类</param>
        </member>
        <member name="M:FS.Mapping.Table.TableMapCache.GetMap(System.Type)">
            <summary>
                返回实体类映射的信息
            </summary>
            <param name="info">ModelInfo实体类</param>
        </member>
        <member name="M:FS.Mapping.Table.TableMapCache.ClearCache">
            <summary>
                清除缓存
            </summary>
        </member>
        <member name="T:FS.UI.Repeater">
            <summary>
                带分页
            </summary>
            <summary>
                带分页
            </summary>
        </member>
        <member name="M:FS.UI.Repeater.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
                输出Html
            </summary>
            <param name="writer">HtmlTextWriter</param>
        </member>
        <member name="P:FS.UI.Repeater.Languange">
            <summary>
                语言类型
            </summary>
        </member>
        <member name="P:FS.UI.Repeater.PageType">
            <summary>
                显示方式
            </summary>
        </member>
        <member name="P:FS.UI.Repeater.PaginationHtml">
            <summary>
                显示方式
            </summary>
        </member>
        <member name="P:FS.UI.Repeater.PageSize">
            <summary>
                每页显示记录数
            </summary>
        </member>
        <member name="P:FS.UI.Repeater.PageCount">
            <summary>
                总记录数
            </summary>
        </member>
        <member name="P:FS.UI.Repeater.PageIndex">
            <summary>
                当前页码
            </summary>
        </member>
        <member name="P:FS.UI.Repeater.TotalPage">
            <summary>
                总记录数
            </summary>
        </member>
        <member name="P:FS.UI.Repeater.PageUrl">
            <summary>
                页面地址
            </summary>
        </member>
        <member name="P:FS.UI.Repeater.Selected">
            <summary>
                选中项的CSS显示名称
            </summary>
        </member>
        <member name="P:FS.UI.Repeater.NoSelected">
            <summary>
                未选中项的CSS显示名称
            </summary>
        </member>
        <member name="P:FS.UI.Repeater.IsShowNotEnough">
            <summary>
                当前记录小于总记录时，是否显示控件
            </summary>
        </member>
        <member name="P:FS.UI.Repeater.ChangePageSize">
            <summary>
                是否允许用户更改PageSize
            </summary>
        </member>
        <member name="P:FS.UI.Repeater.IsShowJump">
            <summary>
                是否显示跳转功能
            </summary>
        </member>
        <member name="P:FS.UI.Repeater.IsShowRecordCount">
            <summary>
                是否详细显示记录数
            </summary>
        </member>
        <member name="T:FS.UI.Repeater.LanguageType">
            <summary>
                语言类型
            </summary>
        </member>
        <member name="F:FS.UI.Repeater.LanguageType.Chinease">
            <summary>
                中文
            </summary>
        </member>
        <member name="F:FS.UI.Repeater.LanguageType.English">
            <summary>
                英文
            </summary>
        </member>
        <member name="T:FS.UI.Repeater.eumPageType">
            <summary>
                分页显示方式
            </summary>
        </member>
        <member name="F:FS.UI.Repeater.eumPageType.Aspx">
            <summary>
                Aspx
            </summary>
        </member>
        <member name="F:FS.UI.Repeater.eumPageType.Html">
            <summary>
                Html
            </summary>
        </member>
        <member name="F:FS.UI.Repeater.eumPageType.Ajax">
            <summary>
                Ajax
            </summary>
        </member>
        <member name="T:FS.UI.UpLoadFile">
            <summary>
                上传文件组件
            </summary>
            <summary>
                上传文件组件
            </summary>
            <summary>
                上传文件组件
            </summary>
        </member>
        <member name="F:FS.UI.UpLoadFile.EventUpLoadKey">
            <summary>
                事件Key
            </summary>
        </member>
        <member name="F:FS.UI.UpLoadFile.EventUpLoadCompleteKey">
            <summary>
                事件Key
            </summary>
        </member>
        <member name="M:FS.UI.UpLoadFile.OnUpLoad(System.Object,System.EventArgs)">
            <summary>
                上传事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FS.UI.UpLoadFile.OnBubbleEvent(System.Object,System.EventArgs)">
            <summary>
                冒泡事件
            </summary>
            <param name="source"></param>
            <param name="e"></param>
        </member>
        <member name="M:FS.UI.UpLoadFile.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
                输出控件视图
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FS.UI.UpLoadFile.CreateChildControls">
            <summary>
                初始化控件
            </summary>
        </member>
        <member name="M:FS.UI.UpLoadFile.#ctor">
            <summary>
                初始化
            </summary>
        </member>
        <member name="E:FS.UI.UpLoadFile.OnUpLoadFile">
            <summary>
                上传文件事件
            </summary>
        </member>
        <member name="E:FS.UI.UpLoadFile.OnUpLoadFileComplete">
            <summary>
                上传文件成功事件
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.txtSavePath">
            <summary>
                文件上传后，保存的路径
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.file">
            <summary>
                文件上传控件
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.img">
            <summary>
                图片显示控件
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.btnUpLoad">
            <summary>
                上传按扭
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.lblMessage">
            <summary>
                提示信息
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.IsShowZipped">
            <summary>
                是否启用压缩
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.txtZippedWidth">
            <summary>
                压缩宽度
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.txtZippedHeight">
            <summary>
                压缩高度
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.SavePath">
            <summary>
                保存到数据库的路径
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.UploadDomain">
            <summary>
                图片显示根
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.UploadPath">
            <summary>
                传入服务器的根目录
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.UploadDirectory">
            <summary>
                存入数据库的文件夹
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.IsShowImage">
            <summary>
                是否显示图片预览
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.IsShowFilePath">
            <summary>
                是否显示路径文本框
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.SaveType">
            <summary>
                保存方式
            </summary>
        </member>
        <member name="P:FS.UI.UpLoadFile.UpLoadFileTypeList">
            <summary>
                上传的文件权限
            </summary>
        </member>
        <member name="T:FS.Utils.Common.Assembly">
            <summary>
                获取版本信息
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Assembly.AssemblyFileVersion">
            <summary>
                版本信息。
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Assembly.GetVersion">
            <summary>
                获得Assembly版本号
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Assembly.GetProductName">
            <summary>
                获得Assembly产品名称
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Assembly.GetCopyright">
            <summary>
                获得Assembly产品版权
            </summary>
        </member>
        <member name="T:FS.Utils.Common.Mac">
            <summary>
            机器硬件信息
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Mac.GetCpu">
            <summary>
            获取CPU码
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Mac.GetHD">
            <summary>
            获取硬盘码
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Mac.GetMac">
            <summary>
            获取网卡码
            </summary>
            <returns></returns>
        </member>
        <member name="T:FS.Utils.Common.OLog">
            <summary>
            用于Console的输出
            </summary>
        </member>
        <member name="T:FS.Utils.Form.DynamicHtml">
            <summary>
            获取经过JS更改后的Html
            </summary>
        </member>
        <member name="M:FS.Utils.Form.DynamicHtml.Navigate(System.String)">
            <summary>
            导航到指定的Url
            </summary>
            <param name="url">地址</param>
        </member>
        <member name="M:FS.Utils.Form.DynamicHtml.GetJsVariable(System.String)">
            <summary>
            获取Js变量
            </summary>
            <param name="variableName">Js变量名称</param>
        </member>
        <member name="M:FS.Utils.Form.DynamicHtml.GetHtml">
            <summary>
            获取源码
            </summary> 
        </member>
        <member name="M:FS.Utils.Form.DynamicHtml.GetDynamicHtml">
            <summary>
            获取动态源码
            </summary>
        </member>
        <member name="M:FS.Utils.Form.DynamicHtml.GetEncoding">
            <summary>
            获取页面编码
            </summary>
        </member>
        <member name="F:FS.Utils.Form.DynamicHtml.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FS.Utils.Form.DynamicHtml.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FS.Utils.Form.DynamicHtml.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FS.Utils.Common.Pro">
            <summary>
            Process管理
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Pro.OpenUrl(System.String,System.Boolean)">
            <summary>
            根据默认浏览器打开网页
            </summary>
            <param name="url">要打开的链接</param>
            <param name="openInNewWindow">是否在新窗口打开</param>
            <returns></returns>
        </member>
        <member name="T:FS.Utils.Common.QueueTask">
            <summary>
            队列执行
            </summary>
        </member>
        <member name="F:FS.Utils.Common.QueueTask.lstQue">
            <summary>
            队列
            </summary>
        </member>
        <member name="F:FS.Utils.Common.QueueTask.IsWork">
            <summary>
            是否工作
            </summary>
        </member>
        <member name="M:FS.Utils.Common.QueueTask.Init">
            <summary>
            初始化队列并执行
            </summary>
        </member>
        <member name="M:FS.Utils.Common.QueueTask.Add(System.Action)">
            <summary>
            添加任务
            </summary>
            <param name="act"></param>
        </member>
        <member name="M:FS.Utils.Common.QueueTask.Add(System.Int32,System.Action)">
            <summary>
            添加任务
            </summary>
            <param name="act"></param>
        </member>
        <member name="M:FS.Utils.Common.QueueTask.Add``1(System.Action{``0},``0)">
            <summary>
            添加任务
            </summary>
            <param name="act"></param>
        </member>
        <member name="M:FS.Utils.Common.QueueTask.Add``1(System.Int32,System.Action{``0},``0)">
            <summary>
            添加任务
            </summary>
            <param name="act"></param>
        </member>
        <member name="M:FS.Utils.Common.QueueTask.Remove(System.Action)">
            <summary>
            移除的对象
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:FS.Utils.Common.QueueTask.RemoveAll(System.Predicate{System.Action})">
            <summary>
            移除与指定的谓词所定义的条件相匹配的所有元素
            </summary>
            <param name="match"></param>
        </member>
        <member name="M:FS.Utils.Common.QueueTask.RemoveAt(System.Int32)">
            <summary>
            移除指定索引处的元素。
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:FS.Utils.Common.QueueTask.RemoveRange(System.Int32,System.Int32)">
            <summary>
            移除一定范围的元素。
            </summary>
            <param name="index"></param>
            <param name="count"></param>
        </member>
        <member name="M:FS.Utils.Common.QueueTask.Clear">
            <summary>
            清除任务
            </summary>
        </member>
        <member name="M:FS.Utils.Common.QueueTask.Stop">
            <summary>
            停止执行
            </summary>
        </member>
        <member name="M:FS.Utils.Common.QueueTask.Start">
            <summary>
            开始执行
            </summary>
        </member>
        <member name="T:FS.Utils.Common.RMB">
            <summary>
                人民币
            </summary>
        </member>
        <member name="M:FS.Utils.Common.RMB.ConvertChinaPrice(System.Decimal)">
            <summary>
                将数字，转换成大写金额
            </summary>
            <param name="price"></param>
        </member>
        <member name="M:FS.Utils.Common.RMB.ConvertSum(System.String)">
            <summary>
                转换数字金额主函数（包括小数）
            </summary>
            <param name="str">数字字符串;转换成中文大写后的字符串或者出错信息提示字符串</param>
        </member>
        <member name="M:FS.Utils.Common.RMB.IsPositveDecimal(System.String)">
            <summary>
                判断是否是正数字字符串
            </summary>
            <param name="str">判断字符串;如果是数字，返回true，否则返回false</param>
        </member>
        <member name="M:FS.Utils.Common.RMB.ConvertData(System.String)">
            <summary>
                转换数字（整数）
            </summary>
            <param name="str">需要转换的整数数字字符串;转换成中文大写后的字符串</param>
        </member>
        <member name="M:FS.Utils.Common.RMB.ConvertXiaoShu(System.String)">
            <summary>
                转换数字（小数部分）
            </summary>
            <param name="str">需要转换的小数部分数字字符串;转换成中文大写后的字符串</param>
        </member>
        <member name="M:FS.Utils.Common.RMB.ConvertDigit(System.String)">
            <summary>
                转换数字
            </summary>
            <param name="str">转换的字符串（四位以内）</param>
        </member>
        <member name="M:FS.Utils.Common.RMB.Convert4Digit(System.String)">
            <summary>
                转换四位数字
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:FS.Utils.Common.RMB.Convert3Digit(System.String)">
            <summary>
                转换三位数字
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:FS.Utils.Common.RMB.Convert2Digit(System.String)">
            <summary>
                转换二位数字
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:FS.Utils.Common.RMB.ConvertChinese(System.String)">
            <summary>
                将一位数字转换成中文大写数字
            </summary>
            <param name="str"></param>
        </member>
        <member name="T:FS.Utils.IHttpModule.CDN">
            <summary>
                重写模块的抽像基类
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FS.Utils.IHttpModule.CDN.Init(System.Web.HttpApplication)">
            <summary>
                加载事件管道
            </summary>
        </member>
        <member name="M:FS.Utils.IHttpModule.CDN.Dispose">
            <summary>
                注销
            </summary>
        </member>
        <member name="M:FS.Utils.IHttpModule.CDN.CDN_AuthorizeRequest(System.Object,System.EventArgs)">
            <summary>
                执行重写功能
            </summary>
        </member>
        <member name="T:FS.Utils.Common.Chinese">
            <summary>
                语言工具
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Chinese.pv">
            <summary>
                包含字符 ASC 码的整形数组。
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Chinese.ps">
            <summary>
                包含汉字拼音的字符串数组。
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Chinese.bd">
            <summary>
                包含要排除处理的字符的字符串数组。
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Chinese.Convert(System.String,System.String,System.Boolean)">
            <summary>
                将指定中文字符串转换为拼音形式。
            </summary>
            <param name="chs">要转换的中文字符串。</param>
            <param name="separator">连接拼音之间的分隔符。</param>
            <param name="initialCap">指定是否将首字母大写。</param>
            <returns>包含中文字符串的拼音的字符串。</returns>
        </member>
        <member name="M:FS.Utils.Common.Chinese.ToDBC(System.String)">
            <summary>
                转半角的函数(DBC case)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Chinese.ToSChinese(System.String)">
            <summary>
                转换为简体中文
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Chinese.ToTChinese(System.String)">
            <summary>
                转换为繁体中文
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Chinese.SBCCaseToNumberic(System.String)">
            <summary>
                将全角数字转换为数字
            </summary>
            <param name="SBCCase"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Chinese.ToSBC(System.String)">
            <summary>
                转全角的函数(SBC case)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Chinese.GetRandomChinese(System.Int32)">
            <summary>
            获取随机中文
            </summary>
            <param name="strlength"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Chinese.CreateRegionCode(System.Int32)">
                    此函数在汉字编码范围内随机创建含两个元素的十六进制字节数组，每个字节数组代表一个汉字，并将 
                    四个字节数组存储在object数组中。 
                    参数：strlength，代表需要产生的汉字个数 
                    *
        </member>
        <member name="P:FS.Utils.Common.Chinese.Phrase">
            <summary>
                设置或获取包含列外词组读音的键/值对的组合。
            </summary>
        </member>
        <member name="T:FS.Utils.Common.Encrypt">
            <summary>
                加密工具
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Encrypt.MD5(System.String,System.Boolean,System.Boolean,System.Int32)">
            <summary>
                MD5函数
            </summary>
            <param name="str">原始字符串</param>
            <param name="isReverse">是否加密后反转字符串</param>
            <param name="ToUpper">是否加密后转为大写</param>
            <param name="count">加密次数</param>
            <returns>MD5结果</returns>
        </member>
        <member name="M:FS.Utils.Common.Encrypt.SHA256(System.String)">
            <summary>
                SHA256函数
            </summary>
            ///
            <param name="str">原始字符串</param>
            <returns>SHA256结果</returns>
        </member>
        <member name="M:FS.Utils.Common.Encrypt.Reverse(System.String)">
            <summary>
                反转字符串
            </summary>
            <param name="input">要反转字符串</param>
            <returns></returns>
        </member>
        <member name="T:FS.Utils.Common.Encrypt.AES">
            <summary>
                加密
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Encrypt.AES.Encode(System.String,System.String)">
            <summary>
                AES加密字符串
            </summary>
            <param name="encryptString">待加密的字符串</param>
            <param name="encryptKey">加密密钥,要求为8位</param>
            <returns>加密成功返回加密后的字符串,失败返回源串</returns>
        </member>
        <member name="M:FS.Utils.Common.Encrypt.AES.Decode(System.String,System.String)">
            <summary>
                AES解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,要求为8位,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串,失败返源串</returns>
        </member>
        <member name="T:FS.Utils.Common.Encrypt.DES">
            <summary>
                加密
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Encrypt.DES.Encode(System.String,System.String)">
            <summary>
                DES加密字符串
            </summary>
            <param name="encryptString">待加密的字符串</param>
            <param name="encryptKey">加密密钥,要求为8位</param>
            <returns>加密成功返回加密后的字符串,失败返回源串</returns>
        </member>
        <member name="M:FS.Utils.Common.Encrypt.DES.Decode(System.String,System.String)">
            <summary>
                DES解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,要求为8位,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串,失败返源串</returns>
        </member>
        <member name="T:FS.Utils.Common.Encrypt.ZipWrapper">
            <summary>
            压缩字符串
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Encrypt.ZipWrapper.Compress(System.String)">
            <summary>
            压缩
            </summary>
            <param name="str">字符串</param>
        </member>
        <member name="M:FS.Utils.Common.Encrypt.ZipWrapper.Decompress(System.String)">
            <summary>
            解压
            </summary>
            <param name="str">字符串</param>
        </member>
        <member name="M:FS.Utils.Common.Encrypt.ZipWrapper.Compress(System.Byte[])">
            <summary>
            压缩
            </summary>
            <param name="bytes">字节组</param>
        </member>
        <member name="M:FS.Utils.Common.Encrypt.ZipWrapper.Decompress(System.Byte[])">
            <summary>
            压缩
            </summary>
            <param name="bytes">字节组</param>
        </member>
        <member name="T:FS.Utils.Common.InfoComparer`2">
            <summary>
                对象比较的实现
            </summary>
            <typeparam name="TInfo"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:FS.Utils.Common.InfoComparer`2.#ctor(System.Func{`0,`1})">
            <summary>
            构造
            </summary>
            <param name="keySelect"></param>
        </member>
        <member name="M:FS.Utils.Common.InfoComparer`2.Equals(`0,`0)">
            <summary>
            比较
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.InfoComparer`2.GetHashCode(`0)">
            <summary>
            HashCode
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:FS.Utils.Common.DataGridViewComparer">
            <summary>
            DataGridView排序
            zgke@sina.com
            qq:116149
            </summary>
        </member>
        <member name="M:FS.Utils.Common.DataGridViewComparer.#ctor(System.Windows.Forms.DataGridViewColumn)">
            <summary>
            dataGridView1.Columns[0].HeaderCell.SortGlyphDirection = SortOrder.Descending; 根据这个进行排序列
            </summary>
            <param name="p_Column"></param>
        </member>
        <member name="F:FS.Utils.SocketHelper.ClientSocket.socket">
            <summary>
            套接字
            </summary>
        </member>
        <member name="M:FS.Utils.SocketHelper.ClientSocket.Bind(System.Net.IPEndPoint,System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
            <summary>
            视情况决定是否需要绑定本地
            </summary>
            <param name="IP"></param>
        </member>
        <member name="M:FS.Utils.SocketHelper.ClientSocket.Start">
            <summary>
            开启服务
            </summary>
        </member>
        <member name="M:FS.Utils.SocketHelper.ClientSocket.Stop">
            <summary>
            停止服务
            </summary>
        </member>
        <member name="P:FS.Utils.SocketHelper.ClientSocket.Server">
            <summary>
            服务器端口
            </summary>
        </member>
        <member name="F:FS.Utils.SocketHelper.ServerSocket.socket">
            <summary>
            套接字
            </summary>
        </member>
        <member name="M:FS.Utils.SocketHelper.ServerSocket.Start">
            <summary>
            开启服务
            </summary>
        </member>
        <member name="M:FS.Utils.SocketHelper.ServerSocket.Stop">
            <summary>
            停止服务
            </summary>
        </member>
        <member name="M:FS.Utils.SocketHelper.ServerSocket.AcceptEnd(System.IAsyncResult)">
            <summary>
            接收客户机连接的方法
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:FS.Utils.SocketHelper.ServerSocket.ReceiveEnd(System.IAsyncResult)">
            <summary>
            接收线程
            </summary>
            <param name="o"></param>
        </member>
        <member name="P:FS.Utils.SocketHelper.ServerSocket.Point">
            <summary>
            端口
            </summary>
        </member>
        <member name="P:FS.Utils.SocketHelper.ServerSocket.Listen">
            <summary>
            监听排队数
            </summary>
        </member>
        <member name="P:FS.Utils.SocketHelper.ServerSocket.LstClient">
            <summary>
            已连接的客户端列表
            </summary>
        </member>
        <member name="P:FS.Utils.SocketHelper.ServerSocket.AllNum">
            <summary>
            当前运行总的连接人数
            </summary>
        </member>
        <member name="P:FS.Utils.SocketHelper.ServerSocket.CurrentNum">
            <summary>
            当前连接人数
            </summary>
        </member>
        <member name="P:FS.Utils.SocketHelper.ServerSocket.ActAccept">
            <summary>
            接收客户端请求连接时执行
            </summary>
        </member>
        <member name="P:FS.Utils.SocketHelper.ServerSocket.ActReceive">
            <summary>
            接收信息时执行
            </summary>
        </member>
        <member name="M:FS.Utils.SocketHelper.StateObject.#ctor(System.Int32,System.Net.Sockets.Socket)">
            <summary>
            接收的最大值
            </summary>
            <param name="bufferSize">接收的最大值</param>
        </member>
        <member name="M:FS.Utils.SocketHelper.StateObject.#ctor">
            <summary>
            默认为1024
            </summary>
        </member>
        <member name="P:FS.Utils.SocketHelper.StateObject.WorkSocket">
            <summary>
            客户端连接的套接字
            </summary>
        </member>
        <member name="P:FS.Utils.SocketHelper.StateObject.Buffer">
            <summary>
            保存接收的数据
            </summary>
        </member>
        <member name="P:FS.Utils.SocketHelper.StateObject.Msg">
            <summary>
            
            </summary>
        </member>
        <member name="P:FS.Utils.SocketHelper.StateObject.BufferSize">
            <summary>
            接收的最大值
            </summary>
        </member>
        <member name="P:FS.Utils.SocketHelper.StateObject.ByteCount">
            <summary>
            字节数
            </summary>
        </member>
        <member name="T:FS.Utils.Web.Excel">
            <summary>
                Microsoft.Excel
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Excel.CreateExcel(System.Data.DataTable,System.String)">
            <summary>
                生成Excel文件
            </summary>
            <param name="dt">数据源</param>
            <param name="fileName">保存的文件名</param>
        </member>
        <member name="M:FS.Utils.Web.Excel.ToExcel(System.Web.UI.Control)">
            <summary>
                datagrid生成
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="T:FS.Utils.HttpClient">
            <summary>
                支持 Session 和 Cookie 的 WebClient。
            </summary>
        </member>
        <member name="M:FS.Utils.HttpClient.#ctor">
            <summary>
                创建一个新的 WebClient 实例。
            </summary>
        </member>
        <member name="M:FS.Utils.HttpClient.#ctor(System.Net.CookieContainer)">
            <summary>
                创建一个新的 WebClient 实例。
            </summary>
            <param name="cookies">Cookie 容器</param>
        </member>
        <member name="M:FS.Utils.HttpClient.GetWebRequest(System.Uri)">
            <summary>
                返回带有 Cookie 的 HttpWebRequest。
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.HttpClient.PostData(System.String,System.String,System.Text.Encoding,System.String@)">
            <summary>
                向指定的 URL POST 数据，并返回页面
            </summary>
            <param name="url">POST URL</param>
            <param name="postString">POST 的 数据</param>
            <param name="encoding">POST 数据的 CharSet</param>
            <param name="msg">页面的 CharSet</param>
            <returns>页面的源文件</returns>
        </member>
        <member name="M:FS.Utils.HttpClient.GetSrc(System.String,System.String,System.String@)">
            <summary>
                获得指定 URL 的源文件
            </summary>
            <param name="uriString">页面 URL</param>
            <param name="dataEncoding">页面的 CharSet</param>
            <param name="errorMessage">错误消息</param>
            <returns>页面的源文件</returns>
        </member>
        <member name="M:FS.Utils.HttpClient.GetFile(System.String,System.String,System.String@)">
            <summary>
                从指定的 URL 下载文件到本地
            </summary>
            <param name="urlString">文件 URL</param>
            <param name="fileName">本地文件的完成路径</param>
            <param name="errorMessage">错误消息</param>
            <returns></returns>
        </member>
        <member name="P:FS.Utils.HttpClient.Cookies">
            <summary>
                Cookie 容器
            </summary>
        </member>
        <member name="T:FS.Utils.Web.IPAdress">
            <summary>
                纯真数据库操作类
                2009.5.25 YM
            </summary>
        </member>
        <member name="F:FS.Utils.Web.IPAdress.file">
            <summary>
                IP数据库的位置
            </summary>
        </member>
        <member name="M:FS.Utils.Web.IPAdress.GetAddress(System.String)">
            <summary>
                获取IP地址位置
            </summary>
            <param name="ip">IP</param>
        </member>
        <member name="M:FS.Utils.Web.IPAdress.GetAddress(System.String,System.String@,System.String@)">
            <summary>
                获取IP地址位置
            </summary>
            <param name="ip">IP</param>
            <param name="province">返回省份</param>
            <param name="city">返回城市</param>
        </member>
        <member name="M:FS.Utils.Web.IPAdress.GetAddress(System.String@,System.String@)">
            <summary>
                获取IP地址位置
            </summary>
            <param name="province">返回省份</param>
            <param name="city">返回城市</param>
        </member>
        <member name="M:FS.Utils.Web.IPAdress.GetLocation(System.String)">
            <summary>
                查找指定IP位置
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="P:FS.Utils.Web.IPAdress.File">
            <summary>
                IP数据库的位置
            </summary>
        </member>
        <member name="T:FS.Utils.Web.Location">
            <summary>
                地理位置
            </summary>
        </member>
        <member name="P:FS.Utils.Web.Location.IP">
            <summary>
                IP
            </summary>
        </member>
        <member name="P:FS.Utils.Web.Location.Area">
            <summary>
                区域
            </summary>
        </member>
        <member name="P:FS.Utils.Web.Location.Address">
            <summary>
                详细位置
            </summary>
        </member>
        <member name="P:FS.Utils.Web.Location.Province">
            <summary>
                省
            </summary>
        </member>
        <member name="P:FS.Utils.Web.Location.City">
            <summary>
                城市
            </summary>
        </member>
        <member name="T:FS.Utils.Common.IsType">
            <summary>
                判断类型
            </summary>
        </member>
        <member name="M:FS.Utils.Common.IsType.IsValidEmail(System.String)">
            <summary>
                检测是否符合email格式
            </summary>
            <param name="strEmail">要判断的email字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:FS.Utils.Common.IsType.IsIP(System.String)">
            <summary>
                是否为ip
            </summary>
        </member>
        <member name="M:FS.Utils.Common.IsType.IsDoubleArray(System.String[])">
            <summary>
                判断给定的字符串数组(strNumber)中的数据是不是都为数值型
            </summary>
            <param name="strDouble">要确认的字符串数组</param>
            <returns>是则返加true 不是则返回 false</returns>
        </member>
        <member name="M:FS.Utils.Common.IsType.IsIntArray(System.String[])">
            <summary>
                判断给定的字符串数组(strNumber)中的数据是不是都为数值型
            </summary>
            <param name="strInt">要确认的字符串数组</param>
            <returns>是则返加true 不是则返回 false</returns>
        </member>
        <member name="M:FS.Utils.Common.IsType.IsBase64String(System.String)">
            <summary>
                判断是否为base64字符串
            </summary>
        </member>
        <member name="M:FS.Utils.Common.IsType.IsNumber(System.String,System.String)">
            <summary>
                验证带小数点的数字
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.IsType.IsDigital(System.String)">
            <summary>
                是否为数字
            </summary>
            <param name="number">0-9</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.IsType.IsInt(System.String)">
            <summary>
                是否为整型
            </summary>
            <param name="number">第一位，不能为0，不带小数点</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.IsType.IsLetter(System.String)">
            <summary>
                是否为字母
            </summary>
            <param name="number">a-zA-Z</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.IsType.IsTel(System.String)">
            <summary>
                验证座机号码
            </summary>
            <param name="tel"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.IsType.IsMobile(System.String)">
            <summary>
                验证手机号码
            </summary>
            <param name="mobile"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.IsType.IsPhone(System.String)">
            <summary>
                验证电话号码(包括手机、座机)
            </summary>
        </member>
        <member name="M:FS.Utils.Common.IsType.IsZIP(System.String)">
            <summary>
                验证邮编号码
            </summary>
            <param name="zip"></param>
            <returns></returns>
        </member>
        <member name="T:FS.Utils.Common.Json">
            <summary>
            Json包
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Json.String2Json(System.String)">
            <summary>
                过滤特殊字符
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Json.StringFormat(System.String,System.Type)">
            <summary>
                格式化字符型、日期型、布尔型
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Json.ListToJson``1(System.Collections.Generic.IList{``0})">
            <summary>
                List转换成Json
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Json.ListToJson``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
                List转换成Json
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Json.ToJson(System.Object)">
            <summary>
                对象转换为Json
            </summary>
            <param name="jsonObject">对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="M:FS.Utils.Common.Json.ToJson(System.Collections.IEnumerable)">
            <summary>
                对象集合转换Json
            </summary>
            <param name="array">集合对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="M:FS.Utils.Common.Json.ToArrayString(System.Collections.IEnumerable)">
            <summary>
                普通集合转换Json
            </summary>
            <param name="array">集合对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="M:FS.Utils.Common.Json.ToJson(System.Data.DataSet)">
            <summary>
                DataSet转换为Json
            </summary>
            <param name="dataSet">DataSet对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="M:FS.Utils.Common.Json.ToJson(System.Data.DataTable)">
            <summary>
                Datatable转换为Json
            </summary>
            <param name="dt">Datatable对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="M:FS.Utils.Common.Json.ToJson(System.Data.DataTable,System.String)">
            <summary>
                DataTable转换为Json
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Json.ToJson(System.Data.Common.DbDataReader)">
            <summary>
                DataReader转换为Json
            </summary>
            <param name="dataReader">DataReader对象</param>
            <returns>Json字符串</returns>
        </member>
        <member name="T:FS.Utils.Web.MvcReq">
            <summary>
                Mvc请求上下文
            </summary>
        </member>
        <member name="M:FS.Utils.Web.MvcReq.QS(System.String)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Utils.Web.MvcReq.QS``1(System.String,``0)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Utils.Web.MvcReq.QS(System.String,System.Text.Encoding)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Utils.Web.MvcReq.QS``1(System.String,``0,System.Text.Encoding)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Utils.Web.MvcReq.GetPageName">
            <summary>
                获取当前应用程序访问的页面文件名称(不带参数)
                Default.aspx
            </summary>
        </member>
        <member name="M:FS.Utils.Web.MvcReq.GetParams">
            <summary>
                获取当前应用程序访问的参数
            </summary>
        </member>
        <member name="T:FS.Utils.Web.PageSplit">
            <summary>
                分页工具
            </summary>
        </member>
        <member name="F:FS.Utils.Web.PageSplit.Template_Default">
            <summary>
            默认模板
            </summary>
        </member>
        <member name="F:FS.Utils.Web.PageSplit.Template_Active">
            <summary>
            当前页
            </summary>
        </member>
        <member name="F:FS.Utils.Web.PageSplit.Template_Pre">
            <summary>
            上一页
            </summary>
        </member>
        <member name="F:FS.Utils.Web.PageSplit.Template_Next">
            <summary>
            下一页
            </summary>
        </member>
        <member name="F:FS.Utils.Web.PageSplit.Template_First">
            <summary>
            首页
            </summary>
        </member>
        <member name="F:FS.Utils.Web.PageSplit.Template_Last">
            <summary>
            尾页
            </summary>
        </member>
        <member name="F:FS.Utils.Web.PageSplit.Template_Record">
            <summary>
            记录总数
            </summary>
        </member>
        <member name="M:FS.Utils.Web.PageSplit.Template(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            模板替换
            </summary>
            <param name="template">模板</param>
            <param name="pageTotal">总共数量</param>
            <param name="pageCount">总共页数量</param>
            <param name="pageNextIndex">下一页索引</param>
            <param name="pagePreIndex">上一下索引</param>
            <param name="pageSize">每页显示的数量</param>
            <param name="pageIndex">当前索引</param>
            <param name="pageName">当前路径页面名称</param>
            <param name="pageParam">当前路径页面参数</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.PageSplit.Split(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            分页函数（模板）
            </summary>
            <param name="pageTotal">总记录数</param>
            <param name="pageSize">每页显示记录数</param>
            <param name="pageIndex">页面索引</param>
            <param name="pageName">页面名称</param>
        </member>
        <member name="M:FS.Utils.Web.PageSplit.AspxSplit(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String,System.String,System.String)">
            <summary>
                分页函数
            </summary>
            <param name="recordCount">总记录数</param>
            <param name="pageIndex">页面索引</param>
            <param name="pageSize">每页显示记录数</param>
            <param name="pageName">页面名称</param>
            <param name="cssSelected">当前页面的CSS</param>
            <param name="cssNoSelected">非当前页面的CSS</param>
            <param name="isShowJump">是否允许跳转</param>
            <param name="isShowRecordCount">是否显示总记录数</param>
        </member>
        <member name="M:FS.Utils.Web.PageSplit.AspxSplit(FS.UI.Repeater)">
            <summary>
                分页函数
            </summary>
            <param name="rptList">分页控件</param>
        </member>
        <member name="M:FS.Utils.Web.PageSplit.HtmlSplit(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String,System.String,System.String)">
            <summary>
                分页函数
            </summary>
            <param name="recordCount">总记录数</param>
            <param name="pageIndex">页面索引</param>
            <param name="pageSize">每页显示记录数</param>
            <param name="pageName">页面名称{$=PageIndex#}</param>
            <param name="cssSelected">当前页面的CSS</param>
            <param name="cssNoSelected">非当前页面的CSS</param>
            <param name="isShowJump">是否允许跳转</param>
            <param name="isShowRecordCount">是否显示总记录数</param>
        </member>
        <member name="M:FS.Utils.Web.PageSplit.HtmlSplit(FS.UI.Repeater)">
            <summary>
                分页函数
            </summary>
            <param name="rptList">分页控件</param>
        </member>
        <member name="M:FS.Utils.Web.PageSplit.AjaxSplit(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String,System.String,System.String)">
            <summary>
                分页函数
            </summary>
            <param name="recordCount">总记录数</param>
            <param name="pageIndex">页面索引</param>
            <param name="pageSize">每页显示记录数</param>
            <param name="pageName">页面名称</param>
            <param name="cssSelected">当前页面的CSS</param>
            <param name="cssNoSelected">非当前页面的CSS</param>
            <param name="isShowJump">是否允许跳转</param>
            <param name="isShowRecordCount">是否显示总记录数</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.PageSplit.AjaxSplit(FS.UI.Repeater)">
            <summary>
                分页函数
            </summary>
            <param name="rptList">分页控件</param>
        </member>
        <member name="T:FS.Utils.Web.PageSplit.SplitResult">
            <summary>
            分布结果
            </summary>
        </member>
        <member name="T:FS.Utils.Web.WebCache">
            <summary>
                对缓存操作进行封装
            </summary>
        </member>
        <member name="M:FS.Utils.Web.WebCache.Add``1(System.String,``0,System.Int32)">
            <summary>
                添加对象
            </summary>
            <param name="key"></param>
            <param name="t"></param>
            <param name="timeOut">默认缓存存活期为1440分钟(24小时)单位：／分钟</param>
        </member>
        <member name="M:FS.Utils.Web.WebCache.Get``1(System.String)">
            <summary>
                返回对象
            </summary>
        </member>
        <member name="M:FS.Utils.Web.WebCache.Get(System.String)">
            <summary>
                返回对象
            </summary>
        </member>
        <member name="M:FS.Utils.Web.WebCache.Clear(System.String)">
            <summary>
                删除对象
            </summary>
        </member>
        <member name="T:FS.Utils.Web.Cookies">
            <summary>
                Cookies工具
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Cookies.Set(System.String,System.Object,System.Boolean)">
            <summary>
                写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
            <param name="isAddPrefix">是否需要添加前缀</param>
        </member>
        <member name="M:FS.Utils.Web.Cookies.Set(System.String,System.Object,System.Int32,System.Boolean)">
            <summary>
                写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="value">值</param>
            <param name="expires">过期时间(分钟)</param>
            <param name="isAddPrefix">是否需要添加前缀</param>
        </member>
        <member name="M:FS.Utils.Web.Cookies.Get(System.String,System.Boolean)">
            <summary>
                读cookie值
            </summary>
            <param name="strName">名称</param>
            <returns>cookie值</returns>
            <param name="isAddPrefix">是否需要添加前缀</param>
        </member>
        <member name="M:FS.Utils.Web.Cookies.Get``1(System.String,``0,System.Boolean)">
            <summary>
                读cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="defValue">默认值</param>
            <param name="isAddPrefix">是否需要添加前缀</param>
        </member>
        <member name="M:FS.Utils.Web.Cookies.RemoveCookie(System.String,System.Boolean)">
            <summary>
                移除cookie值
            </summary>
            <param name="strName">名称c</param>
            <param name="isAddPrefix">是否需要添加前缀</param>
        </member>
        <member name="M:FS.Utils.Web.Cookies.IsValidDomain(System.String)">
            <summary>
                是否为有效域
            </summary>
            <param name="host">域名</param>
            <returns></returns>
        </member>
        <member name="T:FS.Utils.Common.Files">
            <summary>
                文件工具
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Files.GetMapPath(System.String)">
            <summary>
                获得当前绝对路径
            </summary>
            <param name="strPath">指定的路径</param>
        </member>
        <member name="M:FS.Utils.Common.Files.ResponseFile(System.String,System.String,System.String)">
            <summary>
                以指定的ContentType输出指定文件文件
            </summary>
            <param name="filePath">文件路径</param>
            <param name="fileName">输出的文件名</param>
            <param name="fileType">将文件输出时设置的ContentType</param>
        </member>
        <member name="M:FS.Utils.Common.Files.IsUTF8(System.IO.FileStream)">
            <summary>
                判断文件流是否为UTF8字符集
            </summary>
            <param name="sbInputStream">文件流</param>
        </member>
        <member name="M:FS.Utils.Common.Files.CreateDir(System.String)">
            <summary>
                建立文件夹
            </summary>
            <param name="path">路径</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Files.CreateDirs(System.String)">
            <summary>
                智能创建文件目录(任何级别目录)
            </summary>
            <param name="dirPath">路径</param>
        </member>
        <member name="M:FS.Utils.Common.Files.DeleteDir(System.String)">
            <summary>
                删除目录,同时删除子目录所有文件
            </summary>
            <param name="path">路径</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Files.CopyDir(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
                复制文件夹内的文件到指定路径
            </summary>
            <param name="srcPath">源文件夹</param>
            <param name="aimPath">目录文件夹</param>
            <param name="isCopySubDir">true:复制子文件夹;false:只复制根文件夹下的文件</param>
            <param name="overCopy">是复制覆盖</param>
            <param name="filterExtension">后缀名过滤，格式："svn|aspx|asp|exe"</param>
        </member>
        <member name="M:FS.Utils.Common.Files.WriteFile(System.String,System.String,System.String)">
            <summary>
                生成文件
            </summary>
            <param name="savePagePath">要保存的文件路径</param>
            <param name="writeCode">生成文件所使用的编码</param>
            <param name="strContent">要生成的内容</param>
        </member>
        <member name="M:FS.Utils.Common.Files.ConvertPath(System.String)">
            <summary>
                将/转换成：\\
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Files.GetRootPath">
            <summary>
                获取根目录路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Files.GetAppDataPath">
            <summary>
                获取App_Data路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Files.CreateAppData">
            <summary>
                获取App_Data路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Files.GetDirLength(System.String)">
            <summary>
                获取文件夹容量
            </summary>
            <param name="dirPath">文件夹路径</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Files.GetFile(System.String,System.Text.Encoding)">
            <summary>
                传入网页相对路径返回网页的html代码,出错返回null
            </summary>
            <param name="loadPagePath">源文件网页路径(不用带根目录路径)</param>
            <param name="readCode">读取源文件所使用的编码</param>
        </member>
        <member name="M:FS.Utils.Common.Files.GetMD5(System.String)">
            <summary>
            根据文件路径得到文件的MD5值
            </summary>
            <param name="filePath">文件的路径</param>
            <returns>MD5值</returns>
        </member>
        <member name="M:FS.Utils.Common.Files.GetMD5(System.IO.FileStream)">
            <summary>
            根据文件路径得到文件的MD5值
            </summary>
            <param name="FilePath">文件的路径</param>
            <returns>MD5值</returns>
        </member>
        <member name="M:FS.Utils.Common.Files.Rename(System.String,System.String,System.Boolean)">
            <summary>
            对文件重命名（不改变路径）
            </summary>
            <param name="dir">源文件</param>
            <param name="newFileName">名称</param>
            <param name="isChangeExtension">是否改变扩展名，为True时，根据newFileName的值进行改变。没有，则变更为无扩展的文件。为False时，则忽略newFileName的扩展名</param> 
        </member>
        <member name="T:FS.Utils.Web.Htmls">
            <summary>
                解释Html
            </summary>
        </member>
        <member name="F:FS.Utils.Web.Htmls.RegexFont">
            <summary>
                正则
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Htmls.HtmlEncode(System.String)">
            <summary>
                返回 HTML 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>编码结果</returns>
        </member>
        <member name="M:FS.Utils.Web.Htmls.HtmlDecode(System.String)">
            <summary>
                返回 HTML 字符串的解码结果
            </summary>
            <param name="str">字符串</param>
            <returns>解码结果</returns>
        </member>
        <member name="M:FS.Utils.Web.Htmls.RemoveHtml(System.String)">
            <summary>
                移除Html标记
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.Htmls.RemoveUnsafeHtml(System.String)">
            <summary>
                过滤HTML中的不安全标签
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.Htmls.GetInnerText(System.String)">
            <summary>
                从HTML中获取文本,保留br,p,img
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:FS.Utils.Web.Htmls.Spaces(System.Int32)">
            <summary>
                生成指定数量的html空格符号
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Htmls.IsSafeUserInfoString(System.String)">
            <summary>
                检测是否有危险的可能用于链接的字符串
            </summary>
            <param name="str">要判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:FS.Utils.Web.Htmls.CodeToHtml(System.String)">
            <summary>
                替换回车换行符为html换行符
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Htmls.HtmlToCode(System.String)">
            <summary>
                替换html换行符为回车换行符
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Htmls.EmailEncode(System.String)">
            <summary>
                Email 编码
            </summary>
            <param name="html">要编码的字符串</param>
        </member>
        <member name="M:FS.Utils.Web.Htmls.ScriptEncode(System.String)">
            <summary>
                JavaScript 编码
            </summary>
            <param name="script">要编码的字符串</param>
        </member>
        <member name="M:FS.Utils.Web.Htmls.ShitEncode(System.String)">
            <summary>
                过滤脏词，默认有为“妈的|你妈|他妈|妈b|妈比|fuck|shit|我日|法轮|我操”
            </summary>
            <param name="text">要编码的字符串</param>
        </member>
        <member name="M:FS.Utils.Web.Htmls.Compression(System.String)">
            <summary>
            压缩html
            </summary>
            <param name="html"></param>
        </member>
        <member name="T:FS.Utils.Web.Images">
            <summary>
                图片工具
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Images.SaveImageByRequest(System.String,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
                保存图片
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Images.SaveImageByClient(System.String,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
                保存图片
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Images.WriteImage(System.Byte[])">
            <summary>
                将二进制代码输出图片
            </summary>
        </member>
        <member name="T:FS.Utils.Common.Net">
            <summary>
                下载文件
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Net.Save(System.String,System.String,System.Net.WebClient)">
            <summary>
                下载小文件
            </summary>
            <param name="url">请求地址</param>
            <param name="savePath">保存路径</param>
            <param name="wc"></param>
        </member>
        <member name="M:FS.Utils.Common.Net.Save(System.String,System.String)">
            <summary>
                下载小文件
            </summary>
            <param name="url">请求地址</param>
            <param name="savePath">保存路径</param>
            <param name="wc"></param>
        </member>
        <member name="M:FS.Utils.Common.Net.DownFile(System.String,System.String)">
            <summary>
            下载文件到客户端
            </summary>
            <param name="filePath"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:FS.Utils.Common.Net.DownStream(System.String,System.String,System.String)">
            <summary>
            下载文件到客户端
            </summary>
            <param name="filePath"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:FS.Utils.Common.Net.Get(System.String,System.Text.Encoding,System.Net.WebClient)">
            <summary>
                获取远程信息
            </summary>
            <param name="url">请求地址</param>
            <param name="encoding">请求编码</param>
            <param name="wc">客户端</param>
        </member>
        <member name="M:FS.Utils.Common.Net.Get(System.String,System.Text.Encoding,System.Net.CookieContainer@)">
            <summary>
                传入URL返回网页的html代码
            </summary>
            <param name="url">要读取的网页URL</param>
            <param name="readCode">读取源文件所使用的编码</param>
            <param name="cookie">传过去的cookie</param>
        </member>
        <member name="M:FS.Utils.Common.Net.UploadData(System.String,System.String,System.Text.Encoding,System.Net.WebClient)">
            <summary>
                Post信息
            </summary>
            <param name="url">请求地址</param>
            <param name="queryString">QueryString</param>
            <param name="encoding">请求编码</param>
            <param name="wc">Web客户端</param>
        </member>
        <member name="M:FS.Utils.Common.Net.IsHaving(System.String,System.Text.Encoding)">
            <summary>
                判断网络文件是否存在
            </summary>
            <param name="url">要读取的网页URL</param>
            <param name="readCode">读取源文件所使用的编码</param>
        </member>
        <member name="T:FS.Utils.Common.Rand">
            <summary>
                随机数工具
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Rand.GetRandom">
            <summary>
                返回非负随机数
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Rand.GetRandom(System.Int32)">
            <summary>
                返回一个小于所指定最大值的非负随机数。
            </summary>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Rand.GetRandom(System.Int32,System.Int32)">
            <summary>
                返回一个指定范围内的随机数。
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Rand.CreateRandomString(System.Int32)">
            <summary>
                随机生成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:FS.Utils.Web.Req">
            <summary>
                Request操作类
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.GetUrl">
            <summary>
                获取当前应用程序访问的完整路径信息
                http://localhost:1480/WebSite2/Default.aspx?UserID=1
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.Req.GetDomain(System.Int32)">
            <summary>
                获取当前应用程序访问的域名(带端口)
                www.xxx.com:81
            </summary>
            <param name="node">要获取第几个节点，0：不限制</param>
        </member>
        <member name="M:FS.Utils.Web.Req.GetTruePath">
            <summary>
                获取当前应用程序访问的路径(不带域名、不带页面文件名、URL重写地址的真实路径)
                /Manage/
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.GetPath">
            <summary>
            获取当前应用程序访问的路径(不带域名、不带页面文件名)
            /Manage/
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.GetPageName">
            <summary>
                获取当前应用程序访问的页面文件名称(不带参数)
                Default.aspx
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.GetParams">
            <summary>
                获取当前应用程序访问的参数
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.ParseParams(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            解析成参数字符串
            </summary>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.Req.GetPrevious">
            <summary>
                上一个页面地址
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.IsSubmit(FS.Utils.Web.Req.SubmitType)">
            <summary>
                判断当前页面是否接收到了提交请求
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.GetServerString(System.String)">
            <summary>
                返回指定的服务器变量信息
            </summary>
            <param name="strName">服务器变量名</param>
            <returns>服务器变量信息</returns>
        </member>
        <member name="M:FS.Utils.Web.Req.GetCurrentFullHost">
            <summary>
                得到当前完整主机头
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.Req.GetHost">
            <summary>
                得到主机头
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.Req.IsSearchEnginesGet">
            <summary>
                判断是否来自搜索引擎链接
            </summary>
            <returns>是否来自搜索引擎链接</returns>
        </member>
        <member name="M:FS.Utils.Web.Req.GetParamCount">
            <summary>
                返回表单或Url参数的总个数
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.Req.QS(System.String)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.QS``1(System.String,``0)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.QS(System.String,System.Text.Encoding)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.QS``1(System.String,``0,System.Text.Encoding)">
            <summary>
                Request.QueryString
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.QF(System.String)">
            <summary>
                Request.Form
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.QF``1(System.String,``0)">
            <summary>
                Request.Form
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.QA(System.String)">
            <summary>
                先QF后QS
            </summary>
            <param name="parmsName"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.Req.QA``1(System.String,``0)">
            <summary>
                先QF后QS
            </summary>
            <param name="parmsName"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.Req.GetIP">
            <summary>
                获得当前页面客户端的IP
            </summary>
            <returns>当前页面客户端的IP</returns>
        </member>
        <member name="M:FS.Utils.Web.Req.IsBrowserGet">
            <summary>
                判断当前访问是否来自浏览器软件
            </summary>
            <returns>当前访问是否来自浏览器软件</returns>
        </member>
        <member name="M:FS.Utils.Web.Req.IsPostFile">
            <summary>
                判断是否有上传的文件
            </summary>
            <returns>是否有上传的文件</returns>
        </member>
        <member name="M:FS.Utils.Web.Req.SaveRequestFile(System.String)">
            <summary>
                保存用户上传的文件
            </summary>
            <param name="path">保存路径</param>
        </member>
        <member name="M:FS.Utils.Web.Req.Post(FS.Utils.HttpClient,System.String,System.String,System.Text.Encoding)">
            <summary>
                Post信息
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.GetPort">
            <summary>
                获取端口
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.Req.WriteCookies(FS.Utils.HttpClient)">
            <summary>
                把服務器返回的Cookies信息寫入到客戶端中
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.RememberUrl">
            <summary>
            记住用户最后一次访问地址
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.GoToUrl(System.String,System.Object[])">
            <summary>
                转到网址
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.GoToUrl(System.String)">
            <summary>
                转到网址(默认为最后一次访问)
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Req.Fill``1(System.Collections.Specialized.NameValueCollection,System.Action{System.String,System.String},System.String,System.String)">
            <summary>
                把提交过来的内容转化成为实体类(注意CheckBox 未选中时，是NULL，需要手动判断)
            </summary>
            <param name="request">NameValueCollection</param>
            <param name="prefix">控件前缀</param>
            <param name="tip">弹出框事件委托</param>
            <param name="url">跳转地址</param>
        </member>
        <member name="M:FS.Utils.Web.Req.Fill``1(System.Collections.Specialized.NameValueCollection,System.Action{System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}},System.String)">
            <summary>
                把提交过来的内容转化成为实体类(注意CheckBox 未选中时，是NULL，需要手动判断)
            </summary>
            <param name="request">NameValueCollection</param>
            <param name="prefix">控件前缀</param>
            <param name="tip">弹出框事件委托</param>
        </member>
        <member name="M:FS.Utils.Web.Req.Fill``1(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}@,System.String)">
            <summary>
                把提交过来的内容转化成为实体类(注意CheckBox 未选中时，是NULL，需要手动判断)
            </summary>
            <param name="request">NameValueCollection</param>
            <param name="prefix">控件前缀</param>
            <param name="dicError">返回错误消息,key：属性名称；value：错误消息</param>
        </member>
        <member name="T:FS.Utils.Web.Req.SubmitType">
            <summary>
                请求类型
            </summary>
        </member>
        <member name="F:FS.Utils.Web.Req.SubmitType.Get">
            <summary>
                Get
            </summary>
        </member>
        <member name="F:FS.Utils.Web.Req.SubmitType.Post">
            <summary>
                Post
            </summary>
        </member>
        <member name="F:FS.Utils.Web.Req.SubmitType.All">
            <summary>
                Get 和 Post (Post优先)
            </summary>
        </member>
        <member name="T:FS.Utils.Web.Sessions">
            <summary>
                Session工具
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Sessions.Get(System.String,System.Boolean)">
            <summary>
                从 Session 读取 键为 name 的值
            </summary>
            <param name="name">SessionID</param>
        </member>
        <member name="M:FS.Utils.Web.Sessions.Get``1(System.String,``0,System.Boolean)">
            <summary>
                从 Session 读取 键为 name 的值
            </summary>
            <param name="strName">SessionID</param>
            <param name="defValue">为空时返回的值</param>
        </member>
        <member name="M:FS.Utils.Web.Sessions.Set(System.String,System.Object,System.Boolean)">
            <summary>
                向 Session 保存 键为 name 的， 值为 value
            </summary>
            <param name="name">SessionID</param>
            <param name="value">插入的值</param>
        </member>
        <member name="M:FS.Utils.Web.Sessions.Remove(System.String,System.Boolean)">
            <summary>
                从 Session 删除 键为 name session 项
            </summary>
            <param name="name">SessionID</param>
        </member>
        <member name="M:FS.Utils.Web.Sessions.RemoveAll">
            <summary>
                删除所有 session 项
            </summary>
        </member>
        <member name="T:FS.Utils.Common.Str">
            <summary>
                解释字符串
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Str.Length(System.String)">
            <summary>
                返回字符串真实长度, 1个汉字长度为2
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Str.GetArrayIndex(System.String,System.String[],System.Boolean)">
            <summary>
                判断指定字符串在指定字符串数组中的位置
            </summary>
            <param name="searchText">要查找字符串</param>
            <param name="strArr">字符串数组</param>
            <param name="ignoreCase">是否不区分大小写, true为不区分, false为区分</param>
            <returns>字符串在指定字符串数组中的位置, 如不存在则返回-1</returns>
        </member>
        <member name="M:FS.Utils.Common.Str.RTrim(System.String)">
            <summary>
                删除字符串尾部的回车/换行/空格
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Str.FormatBytesStr(System.Int32)">
            <summary>
                格式化字节数字符串
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Str.GetString(System.String,System.String,System.String)">
            <summary>
                获取指定标签内的内容
            </summary>
            <param name="str">内容</param>
            <param name="beforeTag">开始标签</param>
            <param name="endTag">结尾标签</param>
            <returns>有用信息</returns>
        </member>
        <member name="M:FS.Utils.Common.Str.GetStringArray(System.String,System.String,System.String)">
            <summary>
                获取指定标签内的内容
            </summary>
            <param name="str">要搜寻的字符串</param>
            <param name="beforeTag">开头的标签</param>
            <param name="endTag">结尾的标签</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Str.GetTag(System.String,System.String,System.String)">
            <summary>
                获取指定标签内的内容 （注意 "@@-@" 代表一切任意字符  返回空串 表示没有找到）
            </summary>
            <param name="sourceCode">获取的代码</param>
            <param name="startTag">开始的代码</param>
            <param name="endTag">结束的代码</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Str.GetTagArray(System.String,System.String,System.String,System.String)">
            <summary>
                获取指定标签内的内容（注意 "@@-@" 代表一切任意字符  返回空串 表示没有找到）
            </summary>
            <param name="sourceCode">原文内容</param>
            <param name="content">要替换的内容</param>
            <param name="startTag">开始标记</param>
            <param name="endTag">结束标记</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Str.ReplaceString(System.String,System.String,System.Int32,System.Int32)">
            <summary>
                指定索引范围，替换字段串
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Str.ReplaceString(System.String,System.String,System.String,System.Boolean)">
            <summary>
                自定义的替换字符串函数
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Str.DelStartsOf(System.String,System.String)">
            <summary>
                删除指定开头的字符串
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Str.NumberString(System.Int32,System.Int32,System.String)">
            <summary>
                位数补齐,不足长度，前面补0
            </summary>
            <param name="value">值</param>
            <param name="enoughString">不足时，字符串补充</param>
            <param name="lenght">长度</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Str.ConvertTag(System.String,System.String)">
            <summary>
                转换标签，将, ; ，；|｜转换成 tag
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Str.ClearRepeatTag(System.String,System.String)">
            <summary>
                只出现一次标签，之后的都删除
                如：AABBAABBCCAA，清除AA后：AABBBBCC
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Str.ClearRepeatContinuousTag(System.String,System.String)">
            <summary>
                指定的标签连续出现时，只保留一个
                如：AABBAAAABBAACC，清除重复连续后：AABBAABBAACC
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Str.GetEmailHostName(System.String)">
            <summary>
                检测Email
            </summary>
            <param name="strEmail"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Str.ConvertEncoding(System.Text.Encoding,System.Text.Encoding,System.String)">
            <summary>
                字符串转换
            </summary>
            <param name="oenc">源编码</param>
            <param name="tenc">转换之后的编码</param>
            <param name="str">源字符串</param>
        </member>
        <member name="M:FS.Utils.Common.Str.ToColor(System.String)">
            <summary>
                将字符串转换为Color
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Str.InIPArray(System.String,System.String[])">
            <summary>
                返回指定IP是否在指定的IP数组所限定的范围内, IP数组内的IP地址可以使用*表示该IP段任意, 例如192.168.1.*
            </summary>
            <param name="ip"></param>
            <param name="iparray"></param>
            <returns></returns>
        </member>
        <member name="T:FS.Utils.Common.Reverser`1">
            <summary>
                继承IComparer接口，实现同一自定义类型　对象比较
            </summary>
            <typeparam name="T">T为泛用类型</typeparam>
        </member>
        <member name="M:FS.Utils.Common.Reverser`1.#ctor(System.Type,System.String,FS.Utils.Common.ReverserInfo.eumOrderBy)">
            <summary>
                构造函数
            </summary>
            <param name="type">进行比较的类类型</param>
            <param name="name">进行比较对象的属性名称</param>
            <param name="orderBy">比较方向(升序/降序)</param>
        </member>
        <member name="M:FS.Utils.Common.Reverser`1.#ctor(System.String,System.String,FS.Utils.Common.ReverserInfo.eumOrderBy)">
            <summary>
                构造函数
            </summary>
            <param name="className">进行比较的类名称</param>
            <param name="name">进行比较对象的属性名称</param>
            <param name="orderBy">比较方向(升序/降序)</param>
        </member>
        <member name="M:FS.Utils.Common.Reverser`1.#ctor(`0,System.String,FS.Utils.Common.ReverserInfo.eumOrderBy)">
            <summary>
                构造函数
            </summary>
            <param name="t">进行比较的类型的实例</param>
            <param name="name">进行比较对象的属性名称</param>
            <param name="orderBy">比较方向(升序/降序)</param>
        </member>
        <member name="T:FS.Utils.Common.ReverserInfo">
            <summary>
                对象比较时使用的信息类
            </summary>
        </member>
        <member name="F:FS.Utils.Common.ReverserInfo.Name">
            <summary>
                要反映序的字段名称
            </summary>
        </member>
        <member name="F:FS.Utils.Common.ReverserInfo.OrderBy">
            <summary>
                排序方式
            </summary>
        </member>
        <member name="T:FS.Utils.Common.ReverserInfo.eumOrderBy">
            <summary>
                比较的方向，如下：
                ASC：升序
                DESC：降序
            </summary>
        </member>
        <member name="F:FS.Utils.Common.ReverserInfo.eumOrderBy.Asc">
            <summary>
                升序
            </summary>
        </member>
        <member name="F:FS.Utils.Common.ReverserInfo.eumOrderBy.Desc">
            <summary>
                降序
            </summary>
        </member>
        <member name="T:FS.Utils.Common.Serialized`1">
            <summary>
                SerializationHelper 的摘要说明。
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Serialized`1.Load(System.String)">
            <summary>
                反序列化
            </summary>
            <param name="filePath">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Serialized`1.Save(`0,System.String)">
            <summary>
                序列化
            </summary>
            <param name="t">对象</param>
            <param name="filePath">文件路径</param>
        </member>
        <member name="T:FS.Utils.Common.SmtpMail">
            <summary>
                E-Mail工具
            </summary>
        </member>
        <member name="M:FS.Utils.Common.SmtpMail.Base64Encode(System.String)">
            <summary>
                将字符串编码为Base64字符串
            </summary>
        </member>
        <member name="M:FS.Utils.Common.SmtpMail.Send(System.Collections.Generic.List{System.String},System.String,System.String,FS.Configs.EmailInfo,System.String)">
            <summary>
                发送电子邮件
            </summary>
            <param name="mail">Email配置</param>
            <param name="lstAddress">收件人地址</param>
            <param name="subject">邮件的标题</param>
            <param name="body">邮件的正文</param>
            <param name="fileName">邮件附件路径名</param>
        </member>
        <member name="T:FS.Utils.Common.SpeedTest">
            <summary>
                测试效率的工具
                用于做平均效率测试
            </summary>
        </member>
        <member name="F:FS.Utils.Common.SpeedTest.objLock">
            <summary>
                锁定
            </summary>
        </member>
        <member name="F:FS.Utils.Common.SpeedTest.ListResult">
            <summary>
                保存测试的结果
            </summary>
        </member>
        <member name="M:FS.Utils.Common.SpeedTest.Dispose">
            <summary>
                使用完后，自动计算时间
            </summary>
        </member>
        <member name="M:FS.Utils.Common.SpeedTest.Begin(System.String)">
            <summary>
                开始计数
            </summary>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.SpeedTest.Begin">
            <summary>
                开始计数
            </summary>
        </member>
        <member name="M:FS.Utils.Common.SpeedTest.Stop(System.String)">
            <summary>
                停止工作
            </summary>
        </member>
        <member name="M:FS.Utils.Common.SpeedTest.Create(System.String)">
            <summary>
                判断键位是否存在（不存在，自动创建）
            </summary>
        </member>
        <member name="P:FS.Utils.Common.SpeedTest.Result">
            <summary>
                保存测试的结果
            </summary>
        </member>
        <member name="T:FS.Utils.Common.SpeedTest.SpeedResult">
            <summary>
                返回执行结果
            </summary>
        </member>
        <member name="F:FS.Utils.Common.SpeedTest.SpeedResult.KeyName">
            <summary>
                当前键码
            </summary>
        </member>
        <member name="F:FS.Utils.Common.SpeedTest.SpeedResult.Timer">
            <summary>
                当前时间计数器
            </summary>
        </member>
        <member name="T:FS.Utils.Common.StrPlus">
            <summary>
                对StringBuilder再封装
            </summary>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.op_Implicit(FS.Utils.Common.StrPlus)~System.String">
            <summary>
                给定类型，返回DbExecutor
            </summary>
            <param name="type">实体类型</param>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.op_Implicit(System.String)~FS.Utils.Common.StrPlus">
            <summary>
                给定类型，返回DbExecutor
            </summary>
            <param name="type">实体类型</param>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.Append(System.String,System.Int32)">
            <summary>
                添加字符串
            </summary>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.AppendLine(System.String,System.Int32)">
            <summary>
                添加字符串
            </summary>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.AppendFormat(System.String,System.Object[])">
            <summary>
                添加字符串
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.AppendFormatLine(System.String,System.Object[])">
            <summary>
                添加字符串
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.AppendFormatLine(System.String,System.Int32,System.Object[])">
            <summary>
                添加字符串
            </summary>
            <param name="SpaceNum"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.DelLastChar(System.String)">
            <summary>
                删除指定最后的字符串
            </summary>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.Remove(System.Int32,System.Int32)">
            <summary>
                移出指定数量的字符串
            </summary>
            <param name="Start"></param>
            <param name="Num"></param>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.Space(System.Int32)">
            <summary>
                制表符
            </summary>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.ToString">
            <summary>
                转换为String类型
            </summary>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.Clear">
            <summary>
                清除所有字符串
            </summary>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.Substring(System.Int32,System.Int32)">
            <summary>
            从此实例检索子字符串。子字符串从指定的字符位置开始且具有指定的长度。
            </summary>
            <param name="startIndex">此实例中子字符串的起始字符位置（从零开始）。</param>
            <param name="length">子字符串中的字符数。</param>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.Insert``1(System.Int32,``0)">
            <summary>
            将对象的字符串表示形式插入到此实例中的指定字符位置。
            </summary>
            <param name="index">此实例中开始插入的位置。</param>
            <param name="value">要插入的对象或 null。</param>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.op_Addition(System.String,FS.Utils.Common.StrPlus)">
            <summary>
            重载+运算符，实现字符串相加的方式
            </summary>
            <param name="a">字符串</param>
            <param name="b">本体</param>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.op_Addition(FS.Utils.Common.StrPlus,System.String)">
            <summary>
            重载+运算符，实现字符串相加的方式
            </summary>
            <param name="a">本体</param>
            <param name="b">字符串</param>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.Replace(System.String,System.String)">
            <summary>
            返回一个新字符串，其中当前实例中出现的所有指定字符串都替换为另一个指定的字符串。
            </summary>
            <param name="oldValue">要被替换的字符串。</param>
            <param name="newValue">要替换出现的所有 oldValue 的字符串。</param>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.Split(System.String)">
            <summary>
                分隔字符串
            </summary>
            <param name="str">字符串</param>
            <param name="splitString">分隔符号</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.IndexOf(System.String)">
            <summary>
            报告指定字符串在此实例中的第一个匹配项的索引。
            </summary>
        </member>
        <member name="M:FS.Utils.Common.StrPlus.IndexOf(System.Char)">
            <summary>
            报告指定字符串在此实例中的第一个匹配项的索引。
            </summary>
        </member>
        <member name="P:FS.Utils.Common.StrPlus.Value">
            <summary>
                返回所有字符串
            </summary>
        </member>
        <member name="P:FS.Utils.Common.StrPlus.Length">
            <summary>
            获取当前 System.String 对象中的字符数。
            </summary>
        </member>
        <member name="T:FS.Utils.Web.JavaScript">
            <summary>
                原生的脚本
            </summary>
        </member>
        <member name="M:FS.Utils.Web.JavaScript.#ctor(System.Web.UI.Page)">
            <summary>
            构造
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:FS.Utils.Web.JavaScript.Message(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
                输出指定的提示信息
            </summary>
            <param name="message">提示内容</param>
            <param name="title">标题</param>
            <param name="links">链拉 例：是,yes.htm|否,no.htm</param>
            <param name="url">跳转页面URL</param>
            <param name="showback">是否显示返回链接</param>
        </member>
        <member name="M:FS.Utils.Web.JavaScript.Alert(System.String,System.String)">
            <summary>
                alert弹出框
            </summary>
            <param name="message">提示内容</param>
            <param name="gotoUrl">跳转页面URL</param>
        </member>
        <member name="M:FS.Utils.Web.JavaScript.AlertFunc(System.String,System.String)">
            <summary>
                使用alert弹出框架来提示内容。（带脚本运行功能）
            </summary>
            <param name="message">提示内容</param>
            <param name="func">确定后，执行的脚本</param>
        </member>
        <member name="M:FS.Utils.Web.JavaScript.ScriptError(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})">
            <summary>
                出错时，输出TipError的脚本方法。用于自定义提示错误
            </summary>
            <param name="dicError">返回错误消息,key：属性名称；value：错误消息</param>
        </member>
        <member name="T:FS.Utils.Web.Terminator">
            <summary>
                程序终止调度
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Terminator.End">
            <summary>
                end
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Terminator.Alert(System.String)">
            <summary>
                JS弹出框
            </summary>
            <param name="message">提示内容</param>
        </member>
        <member name="M:FS.Utils.Web.Terminator.Alert(System.String,System.String)">
            <summary>
                JS弹出框
            </summary>
            <param name="message">提示内容</param>
            <param name="gotoUrl">跳转页面URL</param>
        </member>
        <member name="M:FS.Utils.Web.Terminator.Alert(System.Web.UI.Page,System.String)">
            <summary>
                alert javascript
            </summary>
            <param name="p">页面</param>
            <param name="message">警告内容</param>
        </member>
        <member name="M:FS.Utils.Web.Terminator.Throw(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
                输出指定的提示信息
            </summary>
            <param name="message">提示内容</param>
            <param name="title">标题</param>
            <param name="links">链拉 例：是,yes.htm|否,no.htm</param>
            <param name="url">跳转页面URL</param>
            <param name="showback">是否显示返回链接</param>
        </member>
        <member name="P:FS.Utils.Web.Terminator.template">
            <summary>
                页面终止页面模板
            </summary>
        </member>
        <member name="T:FS.Utils.Common.Thumbnail">
            <summary>
                Thumbnail 的摘要说明。
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Thumbnail.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,FS.Utils.Common.Thumbnail.ThumbnailType,System.Int32)">
            <summary>
                创建缩略图（缩略图存在时、原图片不存在时，不生成）
            </summary>
            <param name="oldImagePath">原始图片</param>
            <param name="newImagePath">新图片</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="level">图片质量: 1 - 100</param>
            <param name="mode">图片尺寸类型 </param>
        </member>
        <member name="M:FS.Utils.Common.Thumbnail.Cut(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                裁剪图片
            </summary>
            <param name="pic">图片路径</param>
            <param name="left">左边距</param>
            <param name="top">上边距</param>
            <param name="width">裁剪后宽度</param>
            <param name="height">裁剪后高度</param>
        </member>
        <member name="M:FS.Utils.Common.Thumbnail.Mark(System.String,System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
                图片水印
            </summary>
            <param name="pic">原始图片</param>
            <param name="markImage">水印</param>
            <param name="x">X坐标</param>
            <param name="y">Y坐标</param>
        </member>
        <member name="M:FS.Utils.Common.Thumbnail.Mark(System.String,System.Drawing.Image,FS.Utils.Common.Thumbnail.MarkPlace)">
            <summary>
                水印
            </summary>
            <param name="pic">原始图片</param>
            <param name="markImage">水印</param>
            <param name="place">水印位置</param>
        </member>
        <member name="M:FS.Utils.Common.Thumbnail.Mark(System.String,System.String,FS.Utils.Common.Thumbnail.MarkPlace)">
            <summary>
                图片水印
            </summary>
            <param name="pic">原始图片</param>
            <param name="markImagePath">水印路径</param>
            <param name="place">水印位置</param>
        </member>
        <member name="M:FS.Utils.Common.Thumbnail.Mark(System.String,System.String,FS.Utils.Common.Thumbnail.MarkPlace,System.String,System.Nullable{System.Int32},System.Drawing.Brush)">
            <summary>
                文字水印
            </summary>
            <param name="pic">原始图片</param>
            <param name="text">水印文字</param>
            <param name="place">水印位置</param>
            <param name="fontfamily">文字字体</param>
            <param name="fontsize">文字大小</param>
            <param name="fontcolor">文字颜色</param>
        </member>
        <member name="M:FS.Utils.Common.Thumbnail.ToPicture(System.String,System.String,System.Nullable{System.Int32},System.Drawing.Brush)">
            <summary>
                转化文本为Bitmap
            </summary>
            <param name="text">文本</param>
            <param name="fontfamily">字体</param>
            <param name="fontsize">字号</param>
            <param name="fontcolor">文字颜色</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Common.Thumbnail.AppendPicture(System.Int32,System.Int32,System.Collections.Generic.List{FS.Utils.Common.Picture},System.Collections.Generic.List{FS.Utils.Common.Text},System.String)">
            <summary>
                图片叠加
            </summary>
            <param name="width">画布宽度</param>
            <param name="height">画布高度</param>
            <param name="piclist">图片集合</param>
            <param name="textlist">文本集合</param>
            <param name="path">图片保存路径</param>
        </member>
        <member name="F:FS.Utils.Common.Thumbnail.ici">
            <summary>
                未解释
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Thumbnail.ep">
            <summary>
                未解释
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Thumbnail.setQuality(System.Int32)">
            <summary>
                设置质量等级
            </summary>
            <param name="level">质量等级</param>
        </member>
        <member name="T:FS.Utils.Common.Thumbnail.MarkPlace">
            <summary>
                水印位置
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Thumbnail.MarkPlace.LeftTop">
            <summary>
                左上角
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Thumbnail.MarkPlace.RightTop">
            <summary>
                右上角
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Thumbnail.MarkPlace.LeftBottom">
            <summary>
                左下角
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Thumbnail.MarkPlace.RightBottom">
            <summary>
                右下角
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Thumbnail.MarkPlace.Center">
            <summary>
                图片中央
            </summary>
        </member>
        <member name="T:FS.Utils.Common.Thumbnail.ThumbnailType">
            <summary>
                图片尺寸类型
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Thumbnail.ThumbnailType.W">
            <summary>
                指定宽,高按比例
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Thumbnail.ThumbnailType.H">
            <summary>
                指定高，宽按比例
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Thumbnail.ThumbnailType.Min">
            <summary>
                取最小值
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Thumbnail.ThumbnailType.Max">
            <summary>
                取最大值
            </summary>
        </member>
        <member name="F:FS.Utils.Common.Thumbnail.ThumbnailType.Cut">
            <summary>
                按最大值缩放再裁剪，不变形
            </summary>
        </member>
        <member name="T:FS.Utils.Common.Picture">
            <summary>
                图片实体
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Picture.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
                构造函数
            </summary>
            <param name="left">左距离</param>
            <param name="top">顶部距离</param>
            <param name="path">路径</param>
        </member>
        <member name="M:FS.Utils.Common.Picture.#ctor(FS.Utils.Common.Thumbnail.MarkPlace,System.String)">
            <summary>
                构造函数
            </summary>
            <param name="place"></param>
            <param name="path">路径</param>
        </member>
        <member name="P:FS.Utils.Common.Picture.Left">
            <summary>
                左距离
            </summary>
        </member>
        <member name="P:FS.Utils.Common.Picture.Top">
            <summary>
                顶部距离
            </summary>
        </member>
        <member name="P:FS.Utils.Common.Picture.Path">
            <summary>
                路径
            </summary>
        </member>
        <member name="T:FS.Utils.Common.Text">
            <summary>
                文本实体
            </summary>
        </member>
        <member name="M:FS.Utils.Common.Text.#ctor(System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Drawing.Brush)">
            <summary>
                构造函数
            </summary>
            <param name="left">左距离</param>
            <param name="top">顶部距离</param>
            <param name="txt">文字</param>
            <param name="fontfamily">文字类型</param>
            <param name="fontsize">文字大小</param>
            <param name="fontcolor">文字颜色</param>
        </member>
        <member name="P:FS.Utils.Common.Text.Left">
            <summary>
                左距离
            </summary>
        </member>
        <member name="P:FS.Utils.Common.Text.Top">
            <summary>
                顶部距离
            </summary>
        </member>
        <member name="P:FS.Utils.Common.Text.Txt">
            <summary>
                文件
            </summary>
        </member>
        <member name="P:FS.Utils.Common.Text.FontFamily">
            <summary>
                字体类型
            </summary>
        </member>
        <member name="P:FS.Utils.Common.Text.FontSize">
            <summary>
                字体大小
            </summary>
        </member>
        <member name="P:FS.Utils.Common.Text.FontColor">
            <summary>
                字体颜色
            </summary>
        </member>
        <member name="T:FS.Utils.Common.TimingTasks">
            <summary>
                定义任务
                1：间隔：每隔（秒分时天星期月 ），执行ITasks.Execute()
                2：指定：每当（秒分时天星期月 ），执行ITasks.Execute()
            </summary>
        </member>
        <member name="M:FS.Utils.Common.TimingTasks.Clear">
            <summary>
                清除所有正在执行的操作
            </summary>
        </member>
        <member name="M:FS.Utils.Common.TimingTasks.Interval(System.Action{System.Object},System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                间隔执行
            </summary>
            <param name="day">间隔时间</param>
            <param name="hour">间隔时间</param>
            <param name="minute">间隔时间</param>
            <param name="second">间隔时间</param>
            <param name="millisecond">间隔时间</param>
            <param name="callback">执行的方法</param>
        </member>
        <member name="M:FS.Utils.Common.TimingTasks.Interval(System.Action{System.Object},System.Int32)">
            <summary>
                间隔执行
            </summary>
            <param name="millisecond">间隔时间</param>
            <param name="callback">执行的方法</param>
        </member>
        <member name="M:FS.Utils.Common.TimingTasks.Interval(System.Action{System.Object},System.Int32,System.Int32)">
            <summary>
                间隔执行
            </summary>
            <param name="second">间隔时间</param>
            <param name="millisecond">间隔时间</param>
            <param name="callback">执行的方法</param>
        </member>
        <member name="M:FS.Utils.Common.TimingTasks.Interval(System.Action{System.Object},System.Int32,System.Int32,System.Int32)">
            <summary>
                间隔执行
            </summary>
            <param name="minute">间隔时间</param>
            <param name="second">间隔时间</param>
            <param name="millisecond">间隔时间</param>
            <param name="callback">执行的方法</param>
        </member>
        <member name="M:FS.Utils.Common.TimingTasks.Interval(System.Action{System.Object},System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                间隔执行
            </summary>
            <param name="hour">间隔时间</param>
            <param name="minute">间隔时间</param>
            <param name="second">间隔时间</param>
            <param name="millisecond">间隔时间</param>
            <param name="callback">执行的方法</param>
        </member>
        <member name="M:FS.Utils.Common.TimingTasks.Timing(System.Action{System.Object},System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                定时执行
            </summary>
            <param name="day">指定时间</param>
            <param name="hour">指定时间</param>
            <param name="minute">指定时间</param>
            <param name="second">指定时间</param>
            <param name="millisecond">指定时间</param>
            <param name="callback">执行的方法</param>
        </member>
        <member name="M:FS.Utils.Common.TimingTasks.Timing(System.Action{System.Object},System.DayOfWeek,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                定时执行
            </summary>
            <param name="week">星期</param>
            <param name="hour">指定时间</param>
            <param name="minute">指定时间</param>
            <param name="second">指定时间</param>
            <param name="millisecond">指定时间</param>
            <param name="callback">执行的方法</param>
        </member>
        <member name="M:FS.Utils.Common.TimingTasks.Timing(System.Action{System.Object},System.Int32)">
            <summary>
                定时执行
            </summary>
            <param name="millisecond">指定时间</param>
            <param name="callback">执行的方法</param>
        </member>
        <member name="M:FS.Utils.Common.TimingTasks.Timing(System.Action{System.Object},System.Int32,System.Int32)">
            <summary>
                定时执行
            </summary>
            <param name="second">指定时间</param>
            <param name="millisecond">指定时间</param>
            <param name="callback">执行的方法</param>
        </member>
        <member name="M:FS.Utils.Common.TimingTasks.Timing(System.Action{System.Object},System.Int32,System.Int32,System.Int32)">
            <summary>
                定时执行
            </summary>
            <param name="minute">指定时间</param>
            <param name="second">指定时间</param>
            <param name="millisecond">指定时间</param>
            <param name="callback">执行的方法</param>
        </member>
        <member name="M:FS.Utils.Common.TimingTasks.Timing(System.Action{System.Object},System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                定时执行
            </summary>
            <param name="hour">指定时间</param>
            <param name="minute">指定时间</param>
            <param name="second">指定时间</param>
            <param name="millisecond">指定时间</param>
            <param name="callback">执行的方法</param>
        </member>
        <member name="T:FS.Utils.Web.LhgDialog">
            <summary>
                JS提示框
            </summary>
        </member>
        <member name="F:FS.Utils.Web.LhgDialog.DialogScript">
            <summary>
            对话框脚本
            </summary>
        </member>
        <member name="M:FS.Utils.Web.LhgDialog.#ctor(System.Web.UI.Page,System.String)">
            <summary>
            Page值
            </summary>
            <param name="page"></param>
            <param name="scriptPre"></param>
        </member>
        <member name="M:FS.Utils.Web.LhgDialog.Alert(System.String,System.String)">
            <summary>
                Dialog弹出框
            </summary>
            <param name="message">提示内容</param>
            <param name="gotoUrl">跳转页面URL</param>
        </member>
        <member name="M:FS.Utils.Web.LhgDialog.AlertFunc(System.String,System.String)">
            <summary>
                使用frameElement.getTopLevelWindow().$$.dialog.alert弹出框架来提示内容。（带脚本运行功能）
            </summary>
            <param name="message">提示内容</param>
            <param name="func">确定后，执行的脚本</param>
        </member>
        <member name="M:FS.Utils.Web.LhgDialog.Tip(System.String,System.String)">
            <summary>
                使用frameElement.getTopLevelWindow().$$.dialog.tips弹出框架来提示内容。（可以防止数据保持问题）
            </summary>
            <param name="message">提示内容</param>
            <param name="gotoUrl">跳转地址</param>
        </member>
        <member name="M:FS.Utils.Web.LhgDialog.Tip(System.String,System.String,System.Int32)">
            <summary>
                使用frameElement.getTopLevelWindow().$$.dialog.tips弹出框架来提示内容。（带脚本运行功能）
            </summary>
            <param name="timeout">自动关闭时间</param>
            <param name="func">确定后，执行的脚本</param>
            <param name="message">提示内容</param>
        </member>
        <member name="M:FS.Utils.Web.LhgDialog.TipSuccess(System.String,System.String,System.Int32)">
            <summary>
                使用frameElement.getTopLevelWindow().$$.dialog.tips弹出框架来提示内容。（带脚本运行功能）
            </summary>
            <param name="timeout">自动关闭时间</param>
            <param name="func">确定后，执行的脚本</param>
            <param name="message">提示内容</param>
        </member>
        <member name="M:FS.Utils.Web.LhgDialog.TipError(System.String,System.String,System.Int32)">
            <summary>
                使用frameElement.getTopLevelWindow().$$.dialog.tips弹出框架来提示内容。（带脚本运行功能）
            </summary>
            <param name="timeout">自动关闭时间</param>
            <param name="func">确定后，执行的脚本</param>
            <param name="message">提示内容</param>
        </member>
        <member name="T:FS.Utils.Web.UpLoadFile">
            <summary>
                上传文件
            </summary>
        </member>
        <member name="M:FS.Utils.Web.UpLoadFile.Upload(System.Web.HttpFileCollection,System.String,FS.Utils.Web.UpLoadFile.SaveType,System.Collections.Generic.List{FS.Utils.Web.UpLoadFile.stuUpLoadFileType})">
            <summary>
                上传文件
            </summary>
            <param name="files">获取要上传的文件</param>
            <param name="filePath">要保存的文件路径,</param>
            <param name="lstFileType">允许上传的文件类型,大小,单位为KB,Size=0表示无任何限制</param>
            <param name="saveType">保存方式：1:按时间取名</param>
        </member>
        <member name="M:FS.Utils.Web.UpLoadFile.Upload(System.Web.HttpPostedFile,System.String,FS.Utils.Web.UpLoadFile.SaveType,System.Collections.Generic.List{FS.Utils.Web.UpLoadFile.stuUpLoadFileType})">
            <summary>
                上传文件
            </summary>
            <param name="file">FileUpload</param>
            <param name="filePath">要保存的文件路径,</param>
            <param name="lstFileType">允许上传的文件类型,大小,单位为KB,Size=0表示无任何限制</param>
            <param name="saveType">保存方式：1:按时间取名</param>
        </member>
        <member name="M:FS.Utils.Web.UpLoadFile.Upload(System.Web.HttpPostedFile,System.String,System.String,System.Collections.Generic.List{FS.Utils.Web.UpLoadFile.stuUpLoadFileType})">
            <summary>
                上传文件
            </summary>
            <param name="file">FileUpload</param>
            <param name="filePath">要保存的文件路径,</param>
            <param name="lstFileType">允许上传的文件类型,大小,单位为KB,Size=0表示无任何限制</param>
            <param name="fileName">自定义文件名称</param>
        </member>
        <member name="M:FS.Utils.Web.UpLoadFile.CheckFile(System.Web.HttpPostedFile,FS.Utils.Web.UpLoadFile.stuUpLoadFile@,System.Collections.Generic.List{FS.Utils.Web.UpLoadFile.stuUpLoadFileType})">
            <summary>
                检查每个文件的合法检验
            </summary>
        </member>
        <member name="T:FS.Utils.Web.UpLoadFile.SaveType">
            <summary>
                保存方式
            </summary>
        </member>
        <member name="F:FS.Utils.Web.UpLoadFile.SaveType.DateTime">
            <summary>
                按日期时间
            </summary>
        </member>
        <member name="F:FS.Utils.Web.UpLoadFile.SaveType.FileName">
            <summary>
                按原文件名
            </summary>
        </member>
        <member name="T:FS.Utils.Web.UpLoadFile.stuUpLoadFile">
            <summary>
                上传文件后回发的资料
            </summary>
        </member>
        <member name="P:FS.Utils.Web.UpLoadFile.stuUpLoadFile.FileName">
            <summary>
                上传成功的文件名
            </summary>
        </member>
        <member name="P:FS.Utils.Web.UpLoadFile.stuUpLoadFile.FileNamePrefix">
            <summary>
                上传成功的文件名-前缀
            </summary>
        </member>
        <member name="P:FS.Utils.Web.UpLoadFile.stuUpLoadFile.FileNameExtension">
            <summary>
                上传成功的文件名-扩展名
            </summary>
        </member>
        <member name="P:FS.Utils.Web.UpLoadFile.stuUpLoadFile.Size">
            <summary>
                上传成功的文件容量(单位：KB)
            </summary>
        </member>
        <member name="P:FS.Utils.Web.UpLoadFile.stuUpLoadFile.FilePath">
            <summary>
                上传成功的文件相对路径(WebPath之后的路径,不带文件名)
            </summary>
        </member>
        <member name="P:FS.Utils.Web.UpLoadFile.stuUpLoadFile.FileMapPath">
            <summary>
                上传成功的文件物理路径(不带文件名)
            </summary>
        </member>
        <member name="P:FS.Utils.Web.UpLoadFile.stuUpLoadFile.ErrorMessage">
            <summary>
                错误消息
            </summary>
        </member>
        <member name="P:FS.Utils.Web.UpLoadFile.stuUpLoadFile.IsSuccess">
            <summary>
                上传成功
            </summary>
        </member>
        <member name="T:FS.Utils.Web.UpLoadFile.stuUpLoadFileType">
            <summary>
                上传文件的权限
            </summary>
        </member>
        <member name="F:FS.Utils.Web.UpLoadFile.stuUpLoadFileType.size">
            <summary>
                允许上传的容量(单位：KB. 0：无限制)
            </summary>
        </member>
        <member name="F:FS.Utils.Web.UpLoadFile.stuUpLoadFileType.type">
            <summary>
                允许上传的类型
            </summary>
        </member>
        <member name="T:FS.Utils.Web.Url">
            <summary>
                解释Url
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Url.UrlEncode(System.String)">
            <summary>
                对Url字符，进去编码
            </summary>
            <param name="str">字符串</param>
            <returns>编码结果</returns>
        </member>
        <member name="M:FS.Utils.Web.Url.UrlDecode(System.String)">
            <summary>
                对Url字符，进去解码
            </summary>
            <param name="str">字符串</param>
            <returns>解码结果</returns>
        </member>
        <member name="M:FS.Utils.Web.Url.IsURL(System.String)">
            <summary>
                检测是否是正确的Url
            </summary>
            <param name="strUrl">要验证的Url</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:FS.Utils.Web.Url.GetDomain(System.String)">
            <summary>
                返回完全域名，带端口
            </summary>
            <param name="url">来源URL</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.Url.GetDomain(System.String,System.Int32)">
            <summary>
                获取当前应用程序访问的域名(带端口)
                www.xxx.com:81
            </summary>
            <param name="node">要获取第几个节点，0：不限制</param>
        </member>
        <member name="M:FS.Utils.Web.Url.GetPageName(System.String)">
            <summary>
                获得当前页面的名称
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Url.GetParams(System.String)">
            <summary>
                获取参数
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Url.GetParm(System.String,System.String)">
            <summary>
                获取参数
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Url.GetParm``1(System.String,System.String,``0)">
            <summary>
                获取参数
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Url.ParmsEncode(System.String)">
            <summary>
                参数编码
            </summary>
        </member>
        <member name="M:FS.Utils.Web.Url.ConvertUrlToDomain(System.String,System.String)">
            <summary>
                将相对路径，转换成决对路径
            </summary>
            <param name="requestUrl">http请求的地址</param>
            <param name="url">html获得的地址</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.Url.ConvertPath(System.String)">
            <summary>
                将\\转换成：/
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.Url.GetIP(System.String)">
            <summary>
            通过正则，获取IP
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:FS.Utils.IHttpModule.UrlRewriter">
            <summary>
                重写模块的抽像基类
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FS.Utils.IHttpModule.UrlRewriter.Init(System.Web.HttpApplication)">
            <summary>
                加载事件管道
            </summary>
        </member>
        <member name="M:FS.Utils.IHttpModule.UrlRewriter.Dispose">
            <summary>
                注销
            </summary>
        </member>
        <member name="M:FS.Utils.IHttpModule.UrlRewriter.UrlRewriter_AuthorizeRequest(System.Object,System.EventArgs)">
            <summary>
                执行重写功能
            </summary>
        </member>
        <member name="M:FS.Utils.IHttpModule.UrlRewriter.ResolveUrl(System.String,System.String)">
            <summary>
                替换多个域、并且将本地路径转换成网站路径
            </summary>
            <param name="appPath">网站根目录.</param>
            <param name="url">规则地址</param>
        </member>
        <member name="M:FS.Utils.IHttpModule.UrlRewriter.RewriteUrl(System.Web.HttpContext,System.String)">
            <summary>
                重写地址
            </summary>
            <param name="context">请求的上下文</param>
            <param name="sendToUrl">重写的目的URL</param>
        </member>
        <member name="M:FS.Utils.IHttpModule.UrlRewriter.RewriteUrl(System.Web.HttpContext,System.String,System.String@,System.String@)">
            <summary>
                重写地址
            </summary>
            <param name="context">请求的上下文</param>
            <param name="sendToUrl">重写的目的URL</param>
            <param name="filePath">重写目的URL的实际物理路径</param>
            <param name="sendToUrlLessQString">不能参数的地址</param>
        </member>
        <member name="T:FS.Utils.IHttpModule.FormRewriterControlAdapter">
            <summary>
                重写FORM的Action地址
            </summary>
        </member>
        <member name="M:FS.Utils.IHttpModule.FormRewriterControlAdapter.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
                重写HTML输出
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FS.Utils.IHttpModule.RewriteFormHtmlTextWriter">
            <summary>
                Form表单
            </summary>
        </member>
        <member name="M:FS.Utils.IHttpModule.RewriteFormHtmlTextWriter.#ctor(System.Web.UI.HtmlTextWriter)">
            <summary>
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FS.Utils.IHttpModule.RewriteFormHtmlTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FS.Utils.IHttpModule.RewriteFormHtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
            <summary>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="fEncode"></param>
        </member>
        <member name="T:FS.Utils.Common.WinRAR">
            <summary>
                解压缩文件
            </summary>
        </member>
        <member name="M:FS.Utils.Common.WinRAR.OutRar(System.String,System.String,System.String)">
            <summary>
                解压文件
            </summary>
            <param name="rarPath">解决压缩文件安装程序路径</param>
            <param name="filePath">压缩包文件路径</param>
            <param name="toPath">解压到路径</param>
            <returns></returns>
        </member>
        <member name="T:FS.Utils.Web.BaseVeriCode">
            <summary>
                验证码
            </summary>
        </member>
        <member name="F:FS.Utils.Web.BaseVeriCode.random">
            <summary>
            随机类
            </summary>
        </member>
        <member name="F:FS.Utils.Web.BaseVeriCode.brushNameIndex">
            <summary>
            画笔索引
            </summary>
        </member>
        <member name="M:FS.Utils.Web.BaseVeriCode.SetPageNoCache">
            <summary>
                设置页面不被缓存
            </summary>
        </member>
        <member name="M:FS.Utils.Web.BaseVeriCode.GetFontStyle">
            <summary>
                取一个字体的样式
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.BaseVeriCode.GetBrush">
            <summary>
                随机取一个笔刷
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.BaseVeriCode.GetFont(System.Int32)">
            <summary>
                随机取一个字体
            </summary>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.BaseVeriCode.Paint_Background(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
                绘画背景色
            </summary>
            <param name="g">Graphics对象</param>
            <param name="backColor">背景色</param>
        </member>
        <member name="M:FS.Utils.Web.BaseVeriCode.Paint_Border(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Pen)">
            <summary>
                绘画边框
            </summary>
            <param name="g">Graphics对象</param>
            <param name="borderColor">边框颜色</param>
            <param name="imgHeiht">边框高度</param>
            <param name="imgWidth">边框长度</param>
        </member>
        <member name="M:FS.Utils.Web.BaseVeriCode.Paint_Text(System.Drawing.Graphics,System.Int32,System.String)">
            <summary>
                绘画文字
            </summary>
            <param name="g">Graphics对象</param>
            <param name="fontSize">字体大小</param>
            <param name="code">文字</param>
        </member>
        <member name="M:FS.Utils.Web.BaseVeriCode.Paint_Stain(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32)">
            <summary>
                绘画噪音点
            </summary>
            <param name="b">Bitmap对象</param>
            <param name="imgHeiht">噪音点高度</param>
            <param name="imgWidth">长度</param>
            <param name="count">数量</param>
        </member>
        <member name="M:FS.Utils.Web.BaseVeriCode.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
                正弦曲线Wave扭曲图片（Edit By 51aspx.com）
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="dMultValue">波形的幅度倍数，越大扭曲的程度越高，一般为3</param>
            <param name="dPhase">波形的起始相位，取值区间[0-2*PI)</param>
            <returns></returns>
        </member>
        <member name="M:FS.Utils.Web.BaseVeriCode.ResponseImage(System.Web.HttpContext,System.String,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Pen)">
            <summary>
                绘画事件
            </summary>
            <param name="context"></param>
            <param name="code">随机字符</param>
            <param name="fontSize">字体长度</param>
            <param name="imgWidth">图片长度</param>
            <param name="imgHeiht">图片高度</param>
            <param name="stainLenght">噪音点长度</param>
            <param name="backColor">背景色</param>
            <param name="borderColor">边框色</param>
            <returns></returns>
        </member>
        <member name="T:FS.Utils.Web.VeriCode">
            <summary>
                验证码
            </summary>
        </member>
        <member name="M:FS.Utils.Web.VeriCode.Arithmetic(System.Web.HttpContext,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                算术运算验证
            </summary>
            <param name="context">httpcontext</param>
            <param name="sessionKey">保存运算值的SESSION的KEY</param>
            <param name="fontSize">字体长度</param>
            <param name="imgWidth">图片长度</param>
            <param name="imgHeiht">图片高度</param>
            <param name="stainLenght">噪音点长度</param>
        </member>
        <member name="M:FS.Utils.Web.VeriCode.Alphabet(System.Web.HttpContext,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                英文字母 + 数字
            </summary>
            <param name="context">httpcontext</param>
            <param name="sessionKey">保存运算值的SESSION的KEY</param>
            <param name="fontSize">字体长度</param>
            <param name="imgWidth">图片长度</param>
            <param name="imgHeiht">图片高度</param>
            <param name="stainLenght">噪音点长度</param>
            <param name="codeLenght">随机码长度</param>
        </member>
        <member name="M:FS.Utils.Web.VeriCode.Check(System.String,System.String)">
            <summary>
                检测验证码是否正确
            </summary>
            <param name="sessionKey">保存到session的key</param>
            <param name="code">用户输入的验证码</param>
        </member>
    </members>
</doc>
